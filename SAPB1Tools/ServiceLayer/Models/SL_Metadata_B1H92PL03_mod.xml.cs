using System;
using System.Runtime.Serialization;

//note these models aren't suitable for reading directly from the database with an ORM, Service Layer property names differ from their database representation

//note that enums don't have the correct value when cast to an integer, e.g. BoObjectTypes

namespace SAPB1Commons.ServiceLayer.Models.SAPB1 //the "SAPB1" ending must match the EDMX file
{

    public enum AccountCategorySourceEnum
    {
        [EnumMember(Value = "acsBalanceSheet")]
        acsBalanceSheet,
        [EnumMember(Value = "acsProfitAndLoss")]
        acsProfitAndLoss
    }

    public enum AccountSegmentationTypeEnum
    {
        [EnumMember(Value = "ast_Alphanumeric")]
        ast_Alphanumeric,
        [EnumMember(Value = "ast_Numeric")]
        ast_Numeric
    }

    public enum AcquisitionPeriodControlEnum
    {
        [EnumMember(Value = "apcProRataTemporis")]
        apcProRataTemporis,
        [EnumMember(Value = "apcFirstYearConvention")]
        apcFirstYearConvention,
        [EnumMember(Value = "apcHalfYear")]
        apcHalfYear,
        [EnumMember(Value = "apcFullYear")]
        apcFullYear
    }

    public enum AcquisitionProRataTypeEnum
    {
        [EnumMember(Value = "aprtExactlyDailyBase")]
        aprtExactlyDailyBase,
        [EnumMember(Value = "aprtFirstDayOfCurrentPeriod")]
        aprtFirstDayOfCurrentPeriod,
        [EnumMember(Value = "aprtFirstDayOfNextPeriod")]
        aprtFirstDayOfNextPeriod
    }

    public enum AlertManagementDocumentEnum
    {
        [EnumMember(Value = "atd_NOB")]
        atd_NOB,
        [EnumMember(Value = "atd_Invoices")]
        atd_Invoices,
        [EnumMember(Value = "atd_RevertInvoice")]
        atd_RevertInvoice,
        [EnumMember(Value = "atd_DeliveryNotes")]
        atd_DeliveryNotes,
        [EnumMember(Value = "atd_Returns")]
        atd_Returns,
        [EnumMember(Value = "atd_Orders")]
        atd_Orders,
        [EnumMember(Value = "atd_PurchaseInvoices")]
        atd_PurchaseInvoices,
        [EnumMember(Value = "atd_PurchaseDeliveryNotes")]
        atd_PurchaseDeliveryNotes,
        [EnumMember(Value = "atd_PurchaseOrders")]
        atd_PurchaseOrders,
        [EnumMember(Value = "atd_Quotations")]
        atd_Quotations,
        [EnumMember(Value = "atd_IncomingPayments")]
        atd_IncomingPayments,
        [EnumMember(Value = "atd_JournalEntries")]
        atd_JournalEntries,
        [EnumMember(Value = "atd_OutgoingPayments")]
        atd_OutgoingPayments,
        [EnumMember(Value = "atd_ChecksForPayment")]
        atd_ChecksForPayment,
        [EnumMember(Value = "atd_CorrectionInvoice")]
        atd_CorrectionInvoice,
        [EnumMember(Value = "atd_DownPaymentIncoming")]
        atd_DownPaymentIncoming,
        [EnumMember(Value = "atd_DownPaymentOutgoing")]
        atd_DownPaymentOutgoing
    }

    public enum AlertManagementFrequencyType
    {
        [EnumMember(Value = "atfi_Minutes")]
        atfi_Minutes,
        [EnumMember(Value = "atfi_Hours")]
        atfi_Hours,
        [EnumMember(Value = "atfi_Days")]
        atfi_Days,
        [EnumMember(Value = "atfi_Weeks")]
        atfi_Weeks,
        [EnumMember(Value = "atfi_Monthly")]
        atfi_Monthly
    }

    public enum AlertManagementPriorityEnum
    {
        [EnumMember(Value = "atp_Low")]
        atp_Low,
        [EnumMember(Value = "atp_Normal")]
        atp_Normal,
        [EnumMember(Value = "atp_High")]
        atp_High
    }

    public enum AlertManagementTypeEnum
    {
        [EnumMember(Value = "att_User")]
        att_User,
        [EnumMember(Value = "att_System")]
        att_System
    }

    public enum AmountCatTypeEnum
    {
        [EnumMember(Value = "act_Open")]
        act_Open,
        [EnumMember(Value = "act_Invoiced")]
        act_Invoiced
    }

    public enum ApprovalTemplateConditionTypeEnum
    {
        [EnumMember(Value = "atctUndefined")]
        atctUndefined,
        [EnumMember(Value = "atctDeviationFromCreditLine")]
        atctDeviationFromCreditLine,
        [EnumMember(Value = "atctDeviationFromObligo")]
        atctDeviationFromObligo,
        [EnumMember(Value = "atctGrossProfitPercent")]
        atctGrossProfitPercent,
        [EnumMember(Value = "atctDiscountPercent")]
        atctDiscountPercent,
        [EnumMember(Value = "atctDeviationFromBudget")]
        atctDeviationFromBudget,
        [EnumMember(Value = "atctTotalDocument")]
        atctTotalDocument,
        [EnumMember(Value = "atctItemCode")]
        atctItemCode,
        [EnumMember(Value = "atctTotalLine")]
        atctTotalLine,
        [EnumMember(Value = "atctCountedQuantity")]
        atctCountedQuantity,
        [EnumMember(Value = "atctQuantity")]
        atctQuantity,
        [EnumMember(Value = "atctVariance")]
        atctVariance,
        [EnumMember(Value = "atctVariancePercent")]
        atctVariancePercent
    }

    public enum ApprovalTemplateOperationTypeEnum
    {
        [EnumMember(Value = "opcodeUndefined")]
        opcodeUndefined,
        [EnumMember(Value = "opcodeGreaterThan")]
        opcodeGreaterThan,
        [EnumMember(Value = "opcodeGreaterOrEqual")]
        opcodeGreaterOrEqual,
        [EnumMember(Value = "opcodeLessThan")]
        opcodeLessThan,
        [EnumMember(Value = "opcodeLessOrEqual")]
        opcodeLessOrEqual,
        [EnumMember(Value = "opcodeEqual")]
        opcodeEqual,
        [EnumMember(Value = "opcodeDoesNotEqual")]
        opcodeDoesNotEqual,
        [EnumMember(Value = "opcodeInRange")]
        opcodeInRange,
        [EnumMember(Value = "opcodeNotInRange")]
        opcodeNotInRange
    }

    public enum ApprovalTemplatesDocumentTypeEnum
    {
        [EnumMember(Value = "atdtQuotation")]
        atdtQuotation,
        [EnumMember(Value = "atdtOrder")]
        atdtOrder,
        [EnumMember(Value = "atdtDelivery")]
        atdtDelivery,
        [EnumMember(Value = "atdtReturns")]
        atdtReturns,
        [EnumMember(Value = "atdtArDownPayment")]
        atdtArDownPayment,
        [EnumMember(Value = "atdtArInvoice")]
        atdtArInvoice,
        [EnumMember(Value = "atdtArCreditMemo")]
        atdtArCreditMemo,
        [EnumMember(Value = "atdtCorrectionInvoice")]
        atdtCorrectionInvoice,
        [EnumMember(Value = "atdtPurchaseOrder")]
        atdtPurchaseOrder,
        [EnumMember(Value = "atdtGoodsReceiptPO")]
        atdtGoodsReceiptPO,
        [EnumMember(Value = "atdtGoodsReturns")]
        atdtGoodsReturns,
        [EnumMember(Value = "atdtApDownPayment")]
        atdtApDownPayment,
        [EnumMember(Value = "atdtApInvoice")]
        atdtApInvoice,
        [EnumMember(Value = "atdtApCreditMemo")]
        atdtApCreditMemo,
        [EnumMember(Value = "atdtGoodsReceipt")]
        atdtGoodsReceipt,
        [EnumMember(Value = "atdtGoodsIssue")]
        atdtGoodsIssue,
        [EnumMember(Value = "atdtInventoryTransfer")]
        atdtInventoryTransfer,
        [EnumMember(Value = "atdtPurchaseQuotation")]
        atdtPurchaseQuotation,
        [EnumMember(Value = "atdtInventoryTransferRequest")]
        atdtInventoryTransferRequest,
        [EnumMember(Value = "atdtOutgoingPayment")]
        atdtOutgoingPayment,
        [EnumMember(Value = "atdtInventoryCounting")]
        atdtInventoryCounting,
        [EnumMember(Value = "atdtInventoryPosting")]
        atdtInventoryPosting,
        [EnumMember(Value = "atdtInventoryOpeningBalance")]
        atdtInventoryOpeningBalance
    }

    public enum AreaTypeEnum
    {
        [EnumMember(Value = "atPostingtoGL")]
        atPostingtoGL,
        [EnumMember(Value = "atAdditionalArea")]
        atAdditionalArea,
        [EnumMember(Value = "atDerivedArea")]
        atDerivedArea
    }

    public enum AssesseeTypeEnum
    {
        [EnumMember(Value = "atCompany")]
        atCompany,
        [EnumMember(Value = "atOthers")]
        atOthers
    }

    public enum AssetDocumentStatusEnum
    {
        [EnumMember(Value = "adsPosted")]
        adsPosted,
        [EnumMember(Value = "adsDraft")]
        adsDraft,
        [EnumMember(Value = "adsCancelled")]
        adsCancelled
    }

    public enum AssetDocumentTypeEnum
    {
        [EnumMember(Value = "adtOrdinaryDepreciation")]
        adtOrdinaryDepreciation,
        [EnumMember(Value = "adtUnplannedDepreciation")]
        adtUnplannedDepreciation,
        [EnumMember(Value = "adtSpecialDepreciation")]
        adtSpecialDepreciation,
        [EnumMember(Value = "adtAppreciation")]
        adtAppreciation,
        [EnumMember(Value = "adtAssetTransfer")]
        adtAssetTransfer,
        [EnumMember(Value = "adtSales")]
        adtSales,
        [EnumMember(Value = "adtScrapping")]
        adtScrapping,
        [EnumMember(Value = "adtAssetClassTransfer")]
        adtAssetClassTransfer
    }

    public enum AssetOriginalTypeEnum
    {
        [EnumMember(Value = "aotARInvoice")]
        aotARInvoice,
        [EnumMember(Value = "aotAPCreditMemo")]
        aotAPCreditMemo,
        [EnumMember(Value = "aotAPInvoice")]
        aotAPInvoice,
        [EnumMember(Value = "aotOutgoingPayment")]
        aotOutgoingPayment,
        [EnumMember(Value = "aotAPCorrectionInvoice")]
        aotAPCorrectionInvoice,
        [EnumMember(Value = "aotCapitalization")]
        aotCapitalization,
        [EnumMember(Value = "aotFixedAssetsCreditMemo")]
        aotFixedAssetsCreditMemo,
        [EnumMember(Value = "aotAllTransactions")]
        aotAllTransactions,
        [EnumMember(Value = "aotManualDepreciation")]
        aotManualDepreciation,
        [EnumMember(Value = "aotFixedAssetsTransfer")]
        aotFixedAssetsTransfer,
        [EnumMember(Value = "aotRetirement")]
        aotRetirement
    }

    public enum AssetStatusEnum
    {
        [EnumMember(Value = "New")]
        New,
        [EnumMember(Value = "Active")]
        Active,
        [EnumMember(Value = "Inactive")]
        Inactive
    }

    public enum AssetTransactionTypeEnum
    {
        [EnumMember(Value = "att_BeginningOfYear")]
        att_BeginningOfYear,
        [EnumMember(Value = "att_Acquistion")]
        att_Acquistion,
        [EnumMember(Value = "att_Retirement")]
        att_Retirement,
        [EnumMember(Value = "att_Transfer")]
        att_Transfer,
        [EnumMember(Value = "att_WriteUp")]
        att_WriteUp,
        [EnumMember(Value = "att_OrdinaryDepreciation")]
        att_OrdinaryDepreciation,
        [EnumMember(Value = "att_UplannedDepreciation")]
        att_UplannedDepreciation,
        [EnumMember(Value = "att_SpecialDepreciation")]
        att_SpecialDepreciation,
        [EnumMember(Value = "att_EndOfYear")]
        att_EndOfYear
    }

    public enum AssetTypeEnum
    {
        [EnumMember(Value = "atAssetTypeGeneral")]
        atAssetTypeGeneral,
        [EnumMember(Value = "atAssetTypeLowValueAsset")]
        atAssetTypeLowValueAsset
    }

    public enum AttributeGroupFieldTypeEnum
    {
        [EnumMember(Value = "agftText")]
        agftText,
        [EnumMember(Value = "agftNumeric")]
        agftNumeric,
        [EnumMember(Value = "agftDate")]
        agftDate,
        [EnumMember(Value = "agftAmount")]
        agftAmount,
        [EnumMember(Value = "agftPrice")]
        agftPrice,
        [EnumMember(Value = "agftQuantity")]
        agftQuantity
    }

    public enum AuthenticateUserResultsEnum
    {
        [EnumMember(Value = "aturNoUserConnectedToCompany")]
        aturNoUserConnectedToCompany,
        [EnumMember(Value = "aturUsernamePasswordMatched")]
        aturUsernamePasswordMatched,
        [EnumMember(Value = "aturLogOnUserNotAdmin")]
        aturLogOnUserNotAdmin,
        [EnumMember(Value = "aturBadUserOrPassword")]
        aturBadUserOrPassword,
        [EnumMember(Value = "aturUserHasBeenLocked")]
        aturUserHasBeenLocked,
        [EnumMember(Value = "aturPasswordExpired")]
        aturPasswordExpired,
        [EnumMember(Value = "aturDBErrors")]
        aturDBErrors
    }

    public enum AutoAllocOnReceiptMethodEnum
    {
        [EnumMember(Value = "aaormDefaultBin")]
        aaormDefaultBin,
        [EnumMember(Value = "aaormItemCurrentAndHistoricalBins")]
        aaormItemCurrentAndHistoricalBins,
        [EnumMember(Value = "aaormItemCurrentBins")]
        aaormItemCurrentBins,
        [EnumMember(Value = "aaormLastBinReceivedItem")]
        aaormLastBinReceivedItem
    }

    public enum AutomaticPostingEnum
    {
        [EnumMember(Value = "apNo")]
        apNo,
        [EnumMember(Value = "apInterestAndFee")]
        apInterestAndFee,
        [EnumMember(Value = "apInterestOnly")]
        apInterestOnly,
        [EnumMember(Value = "apFeeOnly")]
        apFeeOnly
    }

    public enum BankStatementDocTypeEnum
    {
        [EnumMember(Value = "bsdtReceipts")]
        bsdtReceipts,
        [EnumMember(Value = "bsdtPaymentToVendor")]
        bsdtPaymentToVendor,
        [EnumMember(Value = "bsdtInvoices")]
        bsdtInvoices,
        [EnumMember(Value = "bsdtPurchases")]
        bsdtPurchases,
        [EnumMember(Value = "bsdtDownPaymentIncoming")]
        bsdtDownPaymentIncoming,
        [EnumMember(Value = "bsdtDownPaymentOutgoing")]
        bsdtDownPaymentOutgoing,
        [EnumMember(Value = "bsdtRevertInvoices")]
        bsdtRevertInvoices,
        [EnumMember(Value = "bsdtRevertPurchases")]
        bsdtRevertPurchases,
        [EnumMember(Value = "bsdtJournalEntry")]
        bsdtJournalEntry
    }

    public enum BankStatementRowSourceEnum
    {
        [EnumMember(Value = "bsImported")]
        bsImported,
        [EnumMember(Value = "bsImportedAndAmended")]
        bsImportedAndAmended,
        [EnumMember(Value = "bsManuallyEntered")]
        bsManuallyEntered
    }

    public enum BankStatementStatusEnum
    {
        [EnumMember(Value = "bssExecuted")]
        bssExecuted,
        [EnumMember(Value = "bssDraft")]
        bssDraft,
        [EnumMember(Value = "bssOld")]
        bssOld
    }

    public enum BaseDateSelectEnum
    {
        [EnumMember(Value = "bdsFromDueDate")]
        bdsFromDueDate,
        [EnumMember(Value = "bdsFromLastDunningRun")]
        bdsFromLastDunningRun
    }

    public enum BatchDetailServiceStatusEnum
    {
        [EnumMember(Value = "bdsStatus_Released")]
        bdsStatus_Released,
        [EnumMember(Value = "bdsStatus_NotAccessible")]
        bdsStatus_NotAccessible,
        [EnumMember(Value = "bdsStatus_Locked")]
        bdsStatus_Locked
    }

    public enum BinActionTypeEnum
    {
        [EnumMember(Value = "batToWarehouse")]
        batToWarehouse,
        [EnumMember(Value = "batFromWarehouse")]
        batFromWarehouse
    }

    public enum BinLocationFieldTypeEnum
    {
        [EnumMember(Value = "blftWarehouseSublevel")]
        blftWarehouseSublevel,
        [EnumMember(Value = "blftBinLocationAttribute")]
        blftBinLocationAttribute
    }

    public enum BinRestrictItemEnum
    {
        [EnumMember(Value = "briNone")]
        briNone,
        [EnumMember(Value = "briSpecificItem")]
        briSpecificItem,
        [EnumMember(Value = "briSingleItemOnly")]
        briSingleItemOnly,
        [EnumMember(Value = "briSpecificItemGroup")]
        briSpecificItemGroup,
        [EnumMember(Value = "briSpecificItemGroupOnly")]
        briSpecificItemGroupOnly
    }

    public enum BinRestrictTransactionEnum
    {
        [EnumMember(Value = "brtNoRestrictions")]
        brtNoRestrictions,
        [EnumMember(Value = "brtAllTrans")]
        brtAllTrans,
        [EnumMember(Value = "brtInboundTrans")]
        brtInboundTrans,
        [EnumMember(Value = "brtOutboundTrans")]
        brtOutboundTrans,
        [EnumMember(Value = "brtAllExceptInventoryTrans")]
        brtAllExceptInventoryTrans
    }

    public enum BinRestrictUoMEnum
    {
        [EnumMember(Value = "bruNone")]
        bruNone,
        [EnumMember(Value = "bruSpecificUoM")]
        bruSpecificUoM,
        [EnumMember(Value = "bruSingleUoMOnly")]
        bruSingleUoMOnly,
        [EnumMember(Value = "bruSpecificUoMGroup")]
        bruSpecificUoMGroup,
        [EnumMember(Value = "bruSpecificUoMGroupOnly")]
        bruSpecificUoMGroupOnly
    }

    public enum BinRestrictionBatchEnum
    {
        [EnumMember(Value = "brbNoRestrictions")]
        brbNoRestrictions,
        [EnumMember(Value = "brbSingleBatch")]
        brbSingleBatch
    }

    public enum BlanketAgreementDatePeriodsEnum
    {
        [EnumMember(Value = "Daily")]
        Daily,
        [EnumMember(Value = "Weekly")]
        Weekly,
        [EnumMember(Value = "Monthly")]
        Monthly,
        [EnumMember(Value = "Quarterly")]
        Quarterly,
        [EnumMember(Value = "Semiannually")]
        Semiannually,
        [EnumMember(Value = "Annually")]
        Annually,
        [EnumMember(Value = "OneTime")]
        OneTime
    }

    public enum BlanketAgreementDocTypeEnum
    {
        [EnumMember(Value = "ARInvoice")]
        ARInvoice,
        [EnumMember(Value = "ARCreditMemo")]
        ARCreditMemo,
        [EnumMember(Value = "Delivery")]
        Delivery,
        [EnumMember(Value = "Return")]
        Return,
        [EnumMember(Value = "SalesOrder")]
        SalesOrder,
        [EnumMember(Value = "APInvoice")]
        APInvoice,
        [EnumMember(Value = "APCreditMemo")]
        APCreditMemo,
        [EnumMember(Value = "GoodsReceiptPO")]
        GoodsReceiptPO,
        [EnumMember(Value = "GoodsReturn")]
        GoodsReturn,
        [EnumMember(Value = "PurchaseOrder")]
        PurchaseOrder,
        [EnumMember(Value = "SalesQuotation")]
        SalesQuotation,
        [EnumMember(Value = "APCorrectionInvoice")]
        APCorrectionInvoice,
        [EnumMember(Value = "APCorrectionInvoiceReversal")]
        APCorrectionInvoiceReversal,
        [EnumMember(Value = "ARCorrectionInvoice")]
        ARCorrectionInvoice,
        [EnumMember(Value = "ARCorrectionInvoiceReversal")]
        ARCorrectionInvoiceReversal,
        [EnumMember(Value = "ARDownPayment")]
        ARDownPayment,
        [EnumMember(Value = "APDownPayment")]
        APDownPayment,
        [EnumMember(Value = "PurchaseQuotation")]
        PurchaseQuotation
    }

    public enum BlanketAgreementMethodEnum
    {
        [EnumMember(Value = "amItem")]
        amItem,
        [EnumMember(Value = "amMonetary")]
        amMonetary
    }

    public enum BlanketAgreementStatusEnum
    {
        [EnumMember(Value = "asApproved")]
        asApproved,
        [EnumMember(Value = "asOnHold")]
        asOnHold,
        [EnumMember(Value = "asDraft")]
        asDraft,
        [EnumMember(Value = "asTerminated")]
        asTerminated
    }

    public enum BlanketAgreementTypeEnum
    {
        [EnumMember(Value = "atGeneral")]
        atGeneral,
        [EnumMember(Value = "atSpecific")]
        atSpecific
    }

    public enum BoAPARDocumentTypes
    {
        [EnumMember(Value = "bodt_Invoice")]
        bodt_Invoice,
        [EnumMember(Value = "bodt_CreditNote")]
        bodt_CreditNote,
        [EnumMember(Value = "bodt_DeliveryNote")]
        bodt_DeliveryNote,
        [EnumMember(Value = "bodt_Return")]
        bodt_Return,
        [EnumMember(Value = "bodt_Order")]
        bodt_Order,
        [EnumMember(Value = "bodt_PurchaseInvoice")]
        bodt_PurchaseInvoice,
        [EnumMember(Value = "bodt_PurchaseCreditNote")]
        bodt_PurchaseCreditNote,
        [EnumMember(Value = "bodt_PurchaseDeliveryNote")]
        bodt_PurchaseDeliveryNote,
        [EnumMember(Value = "bodt_PurchaseReturn")]
        bodt_PurchaseReturn,
        [EnumMember(Value = "bodt_PurchaseOrder")]
        bodt_PurchaseOrder,
        [EnumMember(Value = "bodt_Quotation")]
        bodt_Quotation,
        [EnumMember(Value = "bodt_CorrectionAPInvoice")]
        bodt_CorrectionAPInvoice,
        [EnumMember(Value = "bodt_CorrectionARInvoice")]
        bodt_CorrectionARInvoice,
        [EnumMember(Value = "bodt_Zero")]
        bodt_Zero,
        [EnumMember(Value = "bodt_MinusOne")]
        bodt_MinusOne,
        [EnumMember(Value = "bodt_PurchaseQutation")]
        bodt_PurchaseQutation
    }

    public enum BoAccountTypes
    {
        [EnumMember(Value = "at_Expenses")]
        at_Expenses,
        [EnumMember(Value = "at_Other")]
        at_Other,
        [EnumMember(Value = "at_Revenues")]
        at_Revenues
    }

    public enum BoActivities
    {
        [EnumMember(Value = "cn_Conversation")]
        cn_Conversation,
        [EnumMember(Value = "cn_Meeting")]
        cn_Meeting,
        [EnumMember(Value = "cn_Task")]
        cn_Task,
        [EnumMember(Value = "cn_Other")]
        cn_Other,
        [EnumMember(Value = "cn_Note")]
        cn_Note,
        [EnumMember(Value = "cn_Campaign")]
        cn_Campaign
    }

    public enum BoAdEpnsDistribMethods
    {
        [EnumMember(Value = "aedm_None")]
        aedm_None,
        [EnumMember(Value = "aedm_Quantity")]
        aedm_Quantity,
        [EnumMember(Value = "aedm_Volume")]
        aedm_Volume,
        [EnumMember(Value = "aedm_Weight")]
        aedm_Weight,
        [EnumMember(Value = "aedm_Equally")]
        aedm_Equally,
        [EnumMember(Value = "aedm_RowTotal")]
        aedm_RowTotal
    }

    public enum BoAdEpnsTaxTypes
    {
        [EnumMember(Value = "aext_NormalTax")]
        aext_NormalTax,
        [EnumMember(Value = "aext_NoTax")]
        aext_NoTax,
        [EnumMember(Value = "aext_UseTax")]
        aext_UseTax
    }

    public enum BoAddressType
    {
        [EnumMember(Value = "bo_ShipTo")]
        bo_ShipTo,
        [EnumMember(Value = "bo_BillTo")]
        bo_BillTo
    }

    public enum BoAeDistMthd
    {
        [EnumMember(Value = "aed_Equally")]
        aed_Equally,
        [EnumMember(Value = "aed_LineTotal")]
        aed_LineTotal,
        [EnumMember(Value = "aed_None")]
        aed_None,
        [EnumMember(Value = "aed_Quantity")]
        aed_Quantity,
        [EnumMember(Value = "aed_Volume")]
        aed_Volume,
        [EnumMember(Value = "aed_Weight")]
        aed_Weight
    }

    public enum BoAlertTypeforWHStockEnum
    {
        [EnumMember(Value = "atfwhs_WarningOnly")]
        atfwhs_WarningOnly,
        [EnumMember(Value = "atfwhs_Block")]
        atfwhs_Block,
        [EnumMember(Value = "atfwhs_NoMessage")]
        atfwhs_NoMessage
    }

    public enum BoAllocationByEnum
    {
        [EnumMember(Value = "ab_CashValueAfterCustoms")]
        ab_CashValueAfterCustoms,
        [EnumMember(Value = "ab_CashValueBeforeCustoms")]
        ab_CashValueBeforeCustoms,
        [EnumMember(Value = "ab_Equal")]
        ab_Equal,
        [EnumMember(Value = "ab_Quantity")]
        ab_Quantity,
        [EnumMember(Value = "ab_Volume")]
        ab_Volume,
        [EnumMember(Value = "ab_Weight")]
        ab_Weight
    }

    public enum BoApprovalRequestDecisionEnum
    {
        [EnumMember(Value = "ardPending")]
        ardPending,
        [EnumMember(Value = "ardApproved")]
        ardApproved,
        [EnumMember(Value = "ardNotApproved")]
        ardNotApproved
    }

    public enum BoApprovalRequestStatusEnum
    {
        [EnumMember(Value = "arsPending")]
        arsPending,
        [EnumMember(Value = "arsApproved")]
        arsApproved,
        [EnumMember(Value = "arsNotApproved")]
        arsNotApproved,
        [EnumMember(Value = "arsGenerated")]
        arsGenerated,
        [EnumMember(Value = "arsGeneratedByAuthorizer")]
        arsGeneratedByAuthorizer,
        [EnumMember(Value = "arsCancelled")]
        arsCancelled
    }

    public enum BoBOETypes
    {
        [EnumMember(Value = "bobt_Incoming")]
        bobt_Incoming,
        [EnumMember(Value = "bobt_Outgoing")]
        bobt_Outgoing
    }

    public enum BoBOTFromStatus
    {
        [EnumMember(Value = "btfs_Sent")]
        btfs_Sent,
        [EnumMember(Value = "btfs_Generated")]
        btfs_Generated,
        [EnumMember(Value = "btfs_Deposited")]
        btfs_Deposited,
        [EnumMember(Value = "btfs_Paid")]
        btfs_Paid
    }

    public enum BoBOTToStatus
    {
        [EnumMember(Value = "btts_Canceled")]
        btts_Canceled,
        [EnumMember(Value = "btts_Generated")]
        btts_Generated,
        [EnumMember(Value = "btts_Deposit")]
        btts_Deposit,
        [EnumMember(Value = "btts_Paid")]
        btts_Paid,
        [EnumMember(Value = "btts_Failed")]
        btts_Failed,
        [EnumMember(Value = "btts_Closed")]
        btts_Closed
    }

    public enum BoBarCodeStandardEnum
    {
        [EnumMember(Value = "rlbsan13")]
        rlbsan13,
        [EnumMember(Value = "rlbsCode39")]
        rlbsCode39,
        [EnumMember(Value = "rlbsCode128")]
        rlbsCode128
    }

    public enum BoBaseDateRateEnum
    {
        [EnumMember(Value = "bdr_PostingDate")]
        bdr_PostingDate,
        [EnumMember(Value = "bdr_TaxDate")]
        bdr_TaxDate
    }

    public enum BoBaselineDate
    {
        [EnumMember(Value = "bld_ClosingDate")]
        bld_ClosingDate,
        [EnumMember(Value = "bld_PostingDate")]
        bld_PostingDate,
        [EnumMember(Value = "bld_SystemDate")]
        bld_SystemDate,
        [EnumMember(Value = "bld_TaxDate")]
        bld_TaxDate
    }

    public enum BoBlockBudget
    {
        [EnumMember(Value = "bb_OnlyAnnualAlert")]
        bb_OnlyAnnualAlert,
        [EnumMember(Value = "bb_MonthlyAlertOnly")]
        bb_MonthlyAlertOnly,
        [EnumMember(Value = "bb_Block")]
        bb_Block
    }

    public enum BoBoeStatus
    {
        [EnumMember(Value = "boes_Created")]
        boes_Created,
        [EnumMember(Value = "boes_Sent")]
        boes_Sent,
        [EnumMember(Value = "boes_Deposited")]
        boes_Deposited,
        [EnumMember(Value = "boes_Paid")]
        boes_Paid,
        [EnumMember(Value = "boes_Cancelled")]
        boes_Cancelled,
        [EnumMember(Value = "boes_Closed")]
        boes_Closed,
        [EnumMember(Value = "boes_Failed")]
        boes_Failed
    }

    public enum BoBpAccountTypes
    {
        [EnumMember(Value = "bpat_General")]
        bpat_General,
        [EnumMember(Value = "bpat_DownPayment")]
        bpat_DownPayment,
        [EnumMember(Value = "bpat_AssetsAccount")]
        bpat_AssetsAccount,
        [EnumMember(Value = "bpat_Receivable")]
        bpat_Receivable,
        [EnumMember(Value = "bpat_Payable")]
        bpat_Payable,
        [EnumMember(Value = "bpat_OnCollection")]
        bpat_OnCollection,
        [EnumMember(Value = "bpat_Presentation")]
        bpat_Presentation,
        [EnumMember(Value = "bpat_AssetsPayable")]
        bpat_AssetsPayable,
        [EnumMember(Value = "bpat_Discounted")]
        bpat_Discounted,
        [EnumMember(Value = "bpat_Unpaid")]
        bpat_Unpaid,
        [EnumMember(Value = "bpat_OpenDebts")]
        bpat_OpenDebts,
        [EnumMember(Value = "bpat_Domestic")]
        bpat_Domestic,
        [EnumMember(Value = "bpat_Foreign")]
        bpat_Foreign,
        [EnumMember(Value = "bpat_CashDiscountInterim")]
        bpat_CashDiscountInterim,
        [EnumMember(Value = "bpat_ExchangeRateInterim")]
        bpat_ExchangeRateInterim
    }

    public enum BoBpsDocTypes
    {
        [EnumMember(Value = "bpdt_PaymentReference")]
        bpdt_PaymentReference,
        [EnumMember(Value = "bpdt_ISR")]
        bpdt_ISR,
        [EnumMember(Value = "bpdt_DocNum")]
        bpdt_DocNum
    }

    public enum BoBudgetAlert
    {
        [EnumMember(Value = "ba_AnnualAlert")]
        ba_AnnualAlert,
        [EnumMember(Value = "ba_MonthlyAlert")]
        ba_MonthlyAlert
    }

    public enum BoBusinessAreaEnum
    {
        [EnumMember(Value = "baSales")]
        baSales,
        [EnumMember(Value = "baPurchase")]
        baPurchase,
        [EnumMember(Value = "baSalesAndPurchase")]
        baSalesAndPurchase
    }

    public enum BoBusinessPartnerGroupTypes
    {
        [EnumMember(Value = "bbpgt_CustomerGroup")]
        bbpgt_CustomerGroup,
        [EnumMember(Value = "bbpgt_VendorGroup")]
        bbpgt_VendorGroup
    }

    public enum BoBusinessPartnerTypes
    {
        [EnumMember(Value = "garAll")]
        garAll,
        [EnumMember(Value = "garCompany")]
        garCompany,
        [EnumMember(Value = "garPrivate")]
        garPrivate,
        [EnumMember(Value = "garGovernment")]
        garGovernment
    }

    public enum BoCardCompanyTypes
    {
        [EnumMember(Value = "cCompany")]
        cCompany,
        [EnumMember(Value = "cPrivate")]
        cPrivate,
        [EnumMember(Value = "cGovernment")]
        cGovernment
    }

    public enum BoCardTypes
    {
        [EnumMember(Value = "cCustomer")]
        cCustomer,
        [EnumMember(Value = "cSupplier")]
        cSupplier,
        [EnumMember(Value = "cLid")]
        cLid
    }

    public enum BoChangeLogEnum
    {
        [EnumMember(Value = "clChartOfAccounts")]
        clChartOfAccounts,
        [EnumMember(Value = "clBusinessPartners")]
        clBusinessPartners,
        [EnumMember(Value = "clItems")]
        clItems,
        [EnumMember(Value = "clVatGroups")]
        clVatGroups,
        [EnumMember(Value = "clUsers")]
        clUsers,
        [EnumMember(Value = "clInvoices")]
        clInvoices,
        [EnumMember(Value = "clCreditNotes")]
        clCreditNotes,
        [EnumMember(Value = "clDeliveryNotes")]
        clDeliveryNotes,
        [EnumMember(Value = "clReturns")]
        clReturns,
        [EnumMember(Value = "clOrders")]
        clOrders,
        [EnumMember(Value = "clPurchaseInvoices")]
        clPurchaseInvoices,
        [EnumMember(Value = "clPurchaseCreditNotes")]
        clPurchaseCreditNotes,
        [EnumMember(Value = "clPurchaseDeliveryNotes")]
        clPurchaseDeliveryNotes,
        [EnumMember(Value = "clPurchaseReturns")]
        clPurchaseReturns,
        [EnumMember(Value = "clPurchaseOrders")]
        clPurchaseOrders,
        [EnumMember(Value = "clQuotations")]
        clQuotations,
        [EnumMember(Value = "clIncomingPayments")]
        clIncomingPayments,
        [EnumMember(Value = "clJournalEntries")]
        clJournalEntries,
        [EnumMember(Value = "clCreditCards")]
        clCreditCards,
        [EnumMember(Value = "clAdminInfo")]
        clAdminInfo,
        [EnumMember(Value = "clVendorPayments")]
        clVendorPayments,
        [EnumMember(Value = "clItemGroups")]
        clItemGroups,
        [EnumMember(Value = "clInventoryGeneralEntry")]
        clInventoryGeneralEntry,
        [EnumMember(Value = "clInventoryGeneralExit")]
        clInventoryGeneralExit,
        [EnumMember(Value = "clWarehouses")]
        clWarehouses,
        [EnumMember(Value = "clProductTrees")]
        clProductTrees,
        [EnumMember(Value = "clStockTransfers")]
        clStockTransfers,
        [EnumMember(Value = "clFinancePeriods")]
        clFinancePeriods,
        [EnumMember(Value = "clAdditionalExpenses")]
        clAdditionalExpenses,
        [EnumMember(Value = "clPickLists")]
        clPickLists,
        [EnumMember(Value = "clMaterialRevaluation")]
        clMaterialRevaluation,
        [EnumMember(Value = "clCorrectionPurchaseInvoice")]
        clCorrectionPurchaseInvoice,
        [EnumMember(Value = "clCorrectionPurchaseInvoiceReversal")]
        clCorrectionPurchaseInvoiceReversal,
        [EnumMember(Value = "clCorrectionInvoice")]
        clCorrectionInvoice,
        [EnumMember(Value = "clCorrectionInvoiceReversal")]
        clCorrectionInvoiceReversal,
        [EnumMember(Value = "clEmployeesInfo")]
        clEmployeesInfo,
        [EnumMember(Value = "clCustomerEquipmentCards")]
        clCustomerEquipmentCards,
        [EnumMember(Value = "clWithholdingTaxCodes")]
        clWithholdingTaxCodes,
        [EnumMember(Value = "clBillOfExchange")]
        clBillOfExchange,
        [EnumMember(Value = "clServiceCalls")]
        clServiceCalls,
        [EnumMember(Value = "clProductionOrders")]
        clProductionOrders,
        [EnumMember(Value = "clDownPayments")]
        clDownPayments,
        [EnumMember(Value = "clPurchaseDownPayments")]
        clPurchaseDownPayments,
        [EnumMember(Value = "clPeriodCategory")]
        clPeriodCategory,
        [EnumMember(Value = "clHouseBankAccounts")]
        clHouseBankAccounts,
        [EnumMember(Value = "clSalesTaxInvoice")]
        clSalesTaxInvoice,
        [EnumMember(Value = "clPurchaseTaxInvoice")]
        clPurchaseTaxInvoice,
        [EnumMember(Value = "clExternalBankOperationCodes")]
        clExternalBankOperationCodes,
        [EnumMember(Value = "clInternalBankOperationCodes")]
        clInternalBankOperationCodes,
        [EnumMember(Value = "clOutgoingExciseInvoice")]
        clOutgoingExciseInvoice,
        [EnumMember(Value = "clIncomingExciseInvoice")]
        clIncomingExciseInvoice,
        [EnumMember(Value = "clInventoryTransferRequests")]
        clInventoryTransferRequests,
        [EnumMember(Value = "clPurchaseQuotation")]
        clPurchaseQuotation,
        [EnumMember(Value = "clUDO")]
        clUDO
    }

    public enum BoCheckDepositTypeEnum
    {
        [EnumMember(Value = "cdtCashChecks")]
        cdtCashChecks,
        [EnumMember(Value = "cdtPostdatedChecks")]
        cdtPostdatedChecks
    }

    public enum BoClosingDateProcedureBaseDateEnum
    {
        [EnumMember(Value = "bocpdbld_BaseSystemDate")]
        bocpdbld_BaseSystemDate,
        [EnumMember(Value = "bocpdbld_PostingDate")]
        bocpdbld_PostingDate
    }

    public enum BoClosingDateProcedureDueMonthEnum
    {
        [EnumMember(Value = "bocpddm_HalfMonth")]
        bocpddm_HalfMonth,
        [EnumMember(Value = "bocpddm_MonthEnd")]
        bocpddm_MonthEnd,
        [EnumMember(Value = "bocpddm_MonthStart")]
        bocpddm_MonthStart,
        [EnumMember(Value = "bocpddm_None")]
        bocpddm_None
    }

    public enum BoCockpitTypeEnum
    {
        [EnumMember(Value = "cptt_UserCockpit")]
        cptt_UserCockpit,
        [EnumMember(Value = "cptt_TemplateCockpit")]
        cptt_TemplateCockpit
    }

    public enum BoConsumptionMethod
    {
        [EnumMember(Value = "cm_BackwardForward")]
        cm_BackwardForward,
        [EnumMember(Value = "cm_ForwardBackward")]
        cm_ForwardBackward
    }

    public enum BoContractTypes
    {
        [EnumMember(Value = "ct_Customer")]
        ct_Customer,
        [EnumMember(Value = "ct_ItemGroup")]
        ct_ItemGroup,
        [EnumMember(Value = "ct_SerialNumber")]
        ct_SerialNumber
    }

    public enum BoCorInvItemStatus
    {
        [EnumMember(Value = "ciis_Was")]
        ciis_Was,
        [EnumMember(Value = "ciis_ShouldBe")]
        ciis_ShouldBe
    }

    public enum BoCpCardAcct
    {
        [EnumMember(Value = "cfp_Card")]
        cfp_Card,
        [EnumMember(Value = "cfp_Account")]
        cfp_Account
    }

    public enum BoCurrencyCheck
    {
        [EnumMember(Value = "cc_Block")]
        cc_Block,
        [EnumMember(Value = "cc_NoMessage")]
        cc_NoMessage
    }

    public enum BoCurrencySources
    {
        [EnumMember(Value = "bocs_LocalCurrency")]
        bocs_LocalCurrency,
        [EnumMember(Value = "bocs_SystemCurrency")]
        bocs_SystemCurrency,
        [EnumMember(Value = "bocs_BPCurrency")]
        bocs_BPCurrency
    }

    public enum BoDataOwnershipManageMethodEnum
    {
        [EnumMember(Value = "doManageByDocOnly")]
        doManageByDocOnly,
        [EnumMember(Value = "doManageByBPOnly")]
        doManageByBPOnly,
        [EnumMember(Value = "doManageByBPnDoc")]
        doManageByBPnDoc
    }

    public enum BoDataSourceEnum
    {
        [EnumMember(Value = "rldsFreeText")]
        rldsFreeText,
        [EnumMember(Value = "rldsSystemVariable")]
        rldsSystemVariable,
        [EnumMember(Value = "rldsDatabase")]
        rldsDatabase,
        [EnumMember(Value = "rldsFormula")]
        rldsFormula
    }

    public enum BoDateTemplate
    {
        [EnumMember(Value = "dt_DDMMYY")]
        dt_DDMMYY,
        [EnumMember(Value = "dt_DDMMCCYY")]
        dt_DDMMCCYY,
        [EnumMember(Value = "dt_MMDDYY")]
        dt_MMDDYY,
        [EnumMember(Value = "dt_MMDDCCYY")]
        dt_MMDDCCYY,
        [EnumMember(Value = "dt_CCYYMMDD")]
        dt_CCYYMMDD,
        [EnumMember(Value = "dt_DDMonthYYYY")]
        dt_DDMonthYYYY
    }

    public enum BoDeductionTaxGroupCodeEnum
    {
        [EnumMember(Value = "dtgcInterestReceivers")]
        dtgcInterestReceivers,
        [EnumMember(Value = "dtgcEmployeeReceivingCommission")]
        dtgcEmployeeReceivingCommission,
        [EnumMember(Value = "dtgcWritersPrice")]
        dtgcWritersPrice,
        [EnumMember(Value = "dtgcPaidServices")]
        dtgcPaidServices,
        [EnumMember(Value = "dtgcPaymentsToForeignCitizens")]
        dtgcPaymentsToForeignCitizens,
        [EnumMember(Value = "dtgcPaymentsForCitizensInForeignCountries")]
        dtgcPaymentsForCitizensInForeignCountries,
        [EnumMember(Value = "dtgcInvalidPaymentFromCompensationFund")]
        dtgcInvalidPaymentFromCompensationFund,
        [EnumMember(Value = "dtgcRepaymentToEmployerFromCompensationFund")]
        dtgcRepaymentToEmployerFromCompensationFund,
        [EnumMember(Value = "dtgcRentalPayments")]
        dtgcRentalPayments,
        [EnumMember(Value = "dtgcPaymentsFromStudyFund")]
        dtgcPaymentsFromStudyFund,
        [EnumMember(Value = "dtgcDividendPayments")]
        dtgcDividendPayments
    }

    public enum BoDefaultBatchStatus
    {
        [EnumMember(Value = "dbs_Released")]
        dbs_Released,
        [EnumMember(Value = "dbs_NotAccessible")]
        dbs_NotAccessible,
        [EnumMember(Value = "dbs_Locked")]
        dbs_Locked
    }

    public enum BoDepositAccountTypeEnum
    {
        [EnumMember(Value = "datBankAccount")]
        datBankAccount,
        [EnumMember(Value = "datBusinessPartner")]
        datBusinessPartner
    }

    public enum BoDepositCheckEnum
    {
        [EnumMember(Value = "dtNo")]
        dtNo,
        [EnumMember(Value = "dcAsCash")]
        dcAsCash,
        [EnumMember(Value = "dtAsPostdated")]
        dtAsPostdated
    }

    public enum BoDepositPostingTypes
    {
        [EnumMember(Value = "dpt_Collection")]
        dpt_Collection,
        [EnumMember(Value = "dpt_Discounted")]
        dpt_Discounted
    }

    public enum BoDepositTypeEnum
    {
        [EnumMember(Value = "dtChecks")]
        dtChecks,
        [EnumMember(Value = "dtCredit")]
        dtCredit,
        [EnumMember(Value = "dtCash")]
        dtCash,
        [EnumMember(Value = "dtBOE")]
        dtBOE
    }

    public enum BoDocItemType
    {
        [EnumMember(Value = "dit_Item")]
        dit_Item,
        [EnumMember(Value = "dit_Resource")]
        dit_Resource
    }

    public enum BoDocLineType
    {
        [EnumMember(Value = "dlt_Regular")]
        dlt_Regular,
        [EnumMember(Value = "dlt_Alternative")]
        dlt_Alternative
    }

    public enum BoDocSpecialLineType
    {
        [EnumMember(Value = "dslt_Text")]
        dslt_Text,
        [EnumMember(Value = "dslt_Subtotal")]
        dslt_Subtotal
    }

    public enum BoDocSummaryTypes
    {
        [EnumMember(Value = "dNoSummary")]
        dNoSummary,
        [EnumMember(Value = "dByItems")]
        dByItems,
        [EnumMember(Value = "dByDocuments")]
        dByDocuments
    }

    public enum BoDocWhsAutoIssueMethod
    {
        [EnumMember(Value = "whsBinSingleChoiceOnly")]
        whsBinSingleChoiceOnly,
        [EnumMember(Value = "whsBinBinCodeOrder")]
        whsBinBinCodeOrder,
        [EnumMember(Value = "whsBinAltSortCodeOrder")]
        whsBinAltSortCodeOrder,
        [EnumMember(Value = "whsBinQtyDescendingOrder")]
        whsBinQtyDescendingOrder,
        [EnumMember(Value = "whsBinQtyAscendingOrder")]
        whsBinQtyAscendingOrder,
        [EnumMember(Value = "whsBinFIFO")]
        whsBinFIFO,
        [EnumMember(Value = "whsBinLIFO")]
        whsBinLIFO,
        [EnumMember(Value = "whsBinSingleBinPreferred")]
        whsBinSingleBinPreferred
    }

    public enum BoDocWhsUpdateTypes
    {
        [EnumMember(Value = "dwh_No")]
        dwh_No,
        [EnumMember(Value = "dwh_OrdersFromVendors")]
        dwh_OrdersFromVendors,
        [EnumMember(Value = "dwh_CustomerOrders")]
        dwh_CustomerOrders,
        [EnumMember(Value = "dwh_Consignment")]
        dwh_Consignment,
        [EnumMember(Value = "dwh_Stock")]
        dwh_Stock
    }

    public enum BoDocumentLinePickStatus
    {
        [EnumMember(Value = "dlps_Picked")]
        dlps_Picked,
        [EnumMember(Value = "dlps_NotPicked")]
        dlps_NotPicked,
        [EnumMember(Value = "dlps_ReleasedForPicking")]
        dlps_ReleasedForPicking,
        [EnumMember(Value = "dlps_PartiallyPicked")]
        dlps_PartiallyPicked
    }

    public enum BoDocumentSubType
    {
        [EnumMember(Value = "bod_None")]
        bod_None,
        [EnumMember(Value = "bod_InvoiceExempt")]
        bod_InvoiceExempt,
        [EnumMember(Value = "bod_DebitMemo")]
        bod_DebitMemo,
        [EnumMember(Value = "bod_Bill")]
        bod_Bill,
        [EnumMember(Value = "bod_ExemptBill")]
        bod_ExemptBill,
        [EnumMember(Value = "bod_PurchaseDebitMemo")]
        bod_PurchaseDebitMemo,
        [EnumMember(Value = "bod_ExportInvoice")]
        bod_ExportInvoice
    }

    public enum BoDocumentTypes
    {
        [EnumMember(Value = "dDocument_Items")]
        dDocument_Items,
        [EnumMember(Value = "dDocument_Service")]
        dDocument_Service
    }

    public enum BoDueDateEnum
    {
        [EnumMember(Value = "boddDateOfPaymentRun")]
        boddDateOfPaymentRun,
        [EnumMember(Value = "boddDueDateOfInvoice")]
        boddDueDateOfInvoice,
        [EnumMember(Value = "boddPaymentTerms")]
        boddPaymentTerms
    }

    public enum BoDurations
    {
        [EnumMember(Value = "du_Minuts")]
        du_Minuts,
        [EnumMember(Value = "du_Hours")]
        du_Hours,
        [EnumMember(Value = "du_Days")]
        du_Days
    }

    public enum BoExtensionErrorActionEnum
    {
        [EnumMember(Value = "eeaStop")]
        eeaStop,
        [EnumMember(Value = "eeaIgnore")]
        eeaIgnore,
        [EnumMember(Value = "eeaPrompt")]
        eeaPrompt
    }

    public enum BoFatherCardTypes
    {
        [EnumMember(Value = "cPayments_sum")]
        cPayments_sum,
        [EnumMember(Value = "cDelivery_sum")]
        cDelivery_sum
    }

    public enum BoFieldTypes
    {
        [EnumMember(Value = "db_Alpha")]
        db_Alpha,
        [EnumMember(Value = "db_Memo")]
        db_Memo,
        [EnumMember(Value = "db_Numeric")]
        db_Numeric,
        [EnumMember(Value = "db_Date")]
        db_Date,
        [EnumMember(Value = "db_Float")]
        db_Float
    }

    public enum BoFldSubTypes
    {
        [EnumMember(Value = "st_None")]
        st_None,
        [EnumMember(Value = "st_Address")]
        st_Address,
        [EnumMember(Value = "st_Phone")]
        st_Phone,
        [EnumMember(Value = "st_Time")]
        st_Time,
        [EnumMember(Value = "st_Rate")]
        st_Rate,
        [EnumMember(Value = "st_Sum")]
        st_Sum,
        [EnumMember(Value = "st_Price")]
        st_Price,
        [EnumMember(Value = "st_Quantity")]
        st_Quantity,
        [EnumMember(Value = "st_Percentage")]
        st_Percentage,
        [EnumMember(Value = "st_Measurement")]
        st_Measurement,
        [EnumMember(Value = "st_Link")]
        st_Link,
        [EnumMember(Value = "st_Image")]
        st_Image
    }

    public enum BoForecastViewType
    {
        [EnumMember(Value = "fvtDaily")]
        fvtDaily,
        [EnumMember(Value = "fvtWeekly")]
        fvtWeekly,
        [EnumMember(Value = "fvtMonthly")]
        fvtMonthly
    }

    public enum BoFormattedSearchActionEnum
    {
        [EnumMember(Value = "bofsaNone")]
        bofsaNone,
        [EnumMember(Value = "bofsaQuery")]
        bofsaQuery,
        [EnumMember(Value = "bofsaValidValues")]
        bofsaValidValues
    }

    public enum BoFrequency
    {
        [EnumMember(Value = "bof_Daily")]
        bof_Daily,
        [EnumMember(Value = "bof_Weekly")]
        bof_Weekly,
        [EnumMember(Value = "bof_Every4Weeks")]
        bof_Every4Weeks,
        [EnumMember(Value = "bof_Monthly")]
        bof_Monthly,
        [EnumMember(Value = "bof_Quarterly")]
        bof_Quarterly,
        [EnumMember(Value = "bof_HalfYearly")]
        bof_HalfYearly,
        [EnumMember(Value = "bof_Annually")]
        bof_Annually,
        [EnumMember(Value = "bof_OneTime")]
        bof_OneTime,
        [EnumMember(Value = "bof_EveryXDays")]
        bof_EveryXDays
    }

    public enum BoGLMethods
    {
        [EnumMember(Value = "glm_WH")]
        glm_WH,
        [EnumMember(Value = "glm_ItemClass")]
        glm_ItemClass,
        [EnumMember(Value = "glm_ItemLevel")]
        glm_ItemLevel
    }

    public enum BoGenderTypes
    {
        [EnumMember(Value = "gt_Female")]
        gt_Female,
        [EnumMember(Value = "gt_Male")]
        gt_Male,
        [EnumMember(Value = "gt_Undefined")]
        gt_Undefined
    }

    public enum BoGridTypeEnum
    {
        [EnumMember(Value = "gtCombination")]
        gtCombination,
        [EnumMember(Value = "gtContinuousLine")]
        gtContinuousLine,
        [EnumMember(Value = "gtBrokenLine")]
        gtBrokenLine,
        [EnumMember(Value = "gtDots")]
        gtDots
    }

    public enum BoHorizontalAlignmentEnum
    {
        [EnumMember(Value = "rlhjRight")]
        rlhjRight,
        [EnumMember(Value = "rlhjLeft")]
        rlhjLeft,
        [EnumMember(Value = "rlhjCentralized")]
        rlhjCentralized,
        [EnumMember(Value = "rlhjLanguageDependent")]
        rlhjLanguageDependent
    }

    public enum BoInterimDocTypes
    {
        [EnumMember(Value = "boidt_None")]
        boidt_None,
        [EnumMember(Value = "boidt_ExchangeRate")]
        boidt_ExchangeRate,
        [EnumMember(Value = "boidt_CashDiscount")]
        boidt_CashDiscount
    }

    public enum BoInventorySystem
    {
        [EnumMember(Value = "bis_MovingAverage")]
        bis_MovingAverage,
        [EnumMember(Value = "bis_Standard")]
        bis_Standard,
        [EnumMember(Value = "bis_FIFO")]
        bis_FIFO,
        [EnumMember(Value = "bis_SNB")]
        bis_SNB
    }

    public enum BoIssueMethod
    {
        [EnumMember(Value = "im_Backflush")]
        im_Backflush,
        [EnumMember(Value = "im_Manual")]
        im_Manual
    }

    public enum BoItemTreeTypes
    {
        [EnumMember(Value = "iNotATree")]
        iNotATree,
        [EnumMember(Value = "iAssemblyTree")]
        iAssemblyTree,
        [EnumMember(Value = "iSalesTree")]
        iSalesTree,
        [EnumMember(Value = "iProductionTree")]
        iProductionTree,
        [EnumMember(Value = "iTemplateTree")]
        iTemplateTree,
        [EnumMember(Value = "iIngredient")]
        iIngredient
    }

    public enum BoLineBreakEnum
    {
        [EnumMember(Value = "rlsAllowOverflow")]
        rlsAllowOverflow,
        [EnumMember(Value = "rlsAdjustToCell")]
        rlsAdjustToCell,
        [EnumMember(Value = "rlsDivideIntoRows")]
        rlsDivideIntoRows
    }

    public enum BoMRPComponentWarehouse
    {
        [EnumMember(Value = "bomcw_BOM")]
        bomcw_BOM,
        [EnumMember(Value = "bomcw_Parent")]
        bomcw_Parent
    }

    public enum BoManageMethod
    {
        [EnumMember(Value = "bomm_OnEveryTransaction")]
        bomm_OnEveryTransaction,
        [EnumMember(Value = "bomm_OnReleaseOnly")]
        bomm_OnReleaseOnly
    }

    public enum BoMaterialTypes
    {
        [EnumMember(Value = "mt_GoodsForReseller")]
        mt_GoodsForReseller,
        [EnumMember(Value = "mt_FinishedGoods")]
        mt_FinishedGoods,
        [EnumMember(Value = "mt_GoodsInProcess")]
        mt_GoodsInProcess,
        [EnumMember(Value = "mt_RawMaterial")]
        mt_RawMaterial,
        [EnumMember(Value = "mt_Package")]
        mt_Package,
        [EnumMember(Value = "mt_SubProduct")]
        mt_SubProduct,
        [EnumMember(Value = "mt_IntermediateMaterial")]
        mt_IntermediateMaterial,
        [EnumMember(Value = "mt_ConsumerMaterial")]
        mt_ConsumerMaterial,
        [EnumMember(Value = "mt_FixedAsset")]
        mt_FixedAsset,
        [EnumMember(Value = "mt_Service")]
        mt_Service,
        [EnumMember(Value = "mt_OtherInput")]
        mt_OtherInput,
        [EnumMember(Value = "mt_Other")]
        mt_Other
    }

    public enum BoMeritalStatuses
    {
        [EnumMember(Value = "mts_Single")]
        mts_Single,
        [EnumMember(Value = "mts_Married")]
        mts_Married,
        [EnumMember(Value = "mts_Divorced")]
        mts_Divorced,
        [EnumMember(Value = "mts_Widowed")]
        mts_Widowed
    }

    public enum BoMoneyPrecisionTypes
    {
        [EnumMember(Value = "mpt_Sum")]
        mpt_Sum,
        [EnumMember(Value = "mpt_Price")]
        mpt_Price,
        [EnumMember(Value = "mpt_Rate")]
        mpt_Rate,
        [EnumMember(Value = "mpt_Quantity")]
        mpt_Quantity,
        [EnumMember(Value = "mpt_Percent")]
        mpt_Percent,
        [EnumMember(Value = "mpt_Measure")]
        mpt_Measure,
        [EnumMember(Value = "mpt_Tax")]
        mpt_Tax
    }

    public enum BoMsgPriorities
    {
        [EnumMember(Value = "pr_Low")]
        pr_Low,
        [EnumMember(Value = "pr_Normal")]
        pr_Normal,
        [EnumMember(Value = "pr_High")]
        pr_High
    }

    public enum BoMsgRcpTypes
    {
        [EnumMember(Value = "rt_RandomUser")]
        rt_RandomUser,
        [EnumMember(Value = "rt_ContactPerson")]
        rt_ContactPerson,
        [EnumMember(Value = "rt_InternalUser")]
        rt_InternalUser
    }

    public enum BoORCTPaymentTypeEnum
    {
        [EnumMember(Value = "bopt_None")]
        bopt_None,
        [EnumMember(Value = "bopt_Electronic")]
        bopt_Electronic,
        [EnumMember(Value = "bopt_Post")]
        bopt_Post,
        [EnumMember(Value = "bopt_Telegraph")]
        bopt_Telegraph,
        [EnumMember(Value = "bopt_Express")]
        bopt_Express
    }

    public enum BoObjectTypes
    {
        [EnumMember(Value = "oChartOfAccounts")]
        oChartOfAccounts,
        [EnumMember(Value = "oBusinessPartners")]
        oBusinessPartners,
        [EnumMember(Value = "oBanks")]
        oBanks,
        [EnumMember(Value = "oItems")]
        oItems,
        [EnumMember(Value = "oVatGroups")]
        oVatGroups,
        [EnumMember(Value = "oPriceLists")]
        oPriceLists,
        [EnumMember(Value = "oSpecialPrices")]
        oSpecialPrices,
        [EnumMember(Value = "oItemProperties")]
        oItemProperties,
        [EnumMember(Value = "oBusinessPartnerGroups")]
        oBusinessPartnerGroups,
        [EnumMember(Value = "oUsers")]
        oUsers,
        [EnumMember(Value = "oInvoices")]
        oInvoices,
        [EnumMember(Value = "oCreditNotes")]
        oCreditNotes,
        [EnumMember(Value = "oDeliveryNotes")]
        oDeliveryNotes,
        [EnumMember(Value = "oReturns")]
        oReturns,
        [EnumMember(Value = "oOrders")]
        oOrders,
        [EnumMember(Value = "oPurchaseInvoices")]
        oPurchaseInvoices,
        [EnumMember(Value = "oPurchaseCreditNotes")]
        oPurchaseCreditNotes,
        [EnumMember(Value = "oPurchaseDeliveryNotes")]
        oPurchaseDeliveryNotes,
        [EnumMember(Value = "oPurchaseReturns")]
        oPurchaseReturns,
        [EnumMember(Value = "oPurchaseOrders")]
        oPurchaseOrders,
        [EnumMember(Value = "oQuotations")]
        oQuotations,
        [EnumMember(Value = "oIncomingPayments")]
        oIncomingPayments,
        [EnumMember(Value = "oJournalVouchers")]
        oJournalVouchers,
        [EnumMember(Value = "oJournalEntries")]
        oJournalEntries,
        [EnumMember(Value = "oStockTakings")]
        oStockTakings,
        [EnumMember(Value = "oContacts")]
        oContacts,
        [EnumMember(Value = "oCreditCards")]
        oCreditCards,
        [EnumMember(Value = "oCurrencyCodes")]
        oCurrencyCodes,
        [EnumMember(Value = "oPaymentTermsTypes")]
        oPaymentTermsTypes,
        [EnumMember(Value = "oBankPages")]
        oBankPages,
        [EnumMember(Value = "oManufacturers")]
        oManufacturers,
        [EnumMember(Value = "oVendorPayments")]
        oVendorPayments,
        [EnumMember(Value = "oLandedCostsCodes")]
        oLandedCostsCodes,
        [EnumMember(Value = "oShippingTypes")]
        oShippingTypes,
        [EnumMember(Value = "oLengthMeasures")]
        oLengthMeasures,
        [EnumMember(Value = "oWeightMeasures")]
        oWeightMeasures,
        [EnumMember(Value = "oItemGroups")]
        oItemGroups,
        [EnumMember(Value = "oSalesPersons")]
        oSalesPersons,
        [EnumMember(Value = "oCustomsGroups")]
        oCustomsGroups,
        [EnumMember(Value = "oChecksforPayment")]
        oChecksforPayment,
        [EnumMember(Value = "oInventoryGenEntry")]
        oInventoryGenEntry,
        [EnumMember(Value = "oInventoryGenExit")]
        oInventoryGenExit,
        [EnumMember(Value = "oWarehouses")]
        oWarehouses,
        [EnumMember(Value = "oCommissionGroups")]
        oCommissionGroups,
        [EnumMember(Value = "oProductTrees")]
        oProductTrees,
        [EnumMember(Value = "oStockTransfer")]
        oStockTransfer,
        [EnumMember(Value = "oWorkOrders")]
        oWorkOrders,
        [EnumMember(Value = "oCreditPaymentMethods")]
        oCreditPaymentMethods,
        [EnumMember(Value = "oCreditCardPayments")]
        oCreditCardPayments,
        [EnumMember(Value = "oAlternateCatNum")]
        oAlternateCatNum,
        [EnumMember(Value = "oBudget")]
        oBudget,
        [EnumMember(Value = "oBudgetDistribution")]
        oBudgetDistribution,
        [EnumMember(Value = "oMessages")]
        oMessages,
        [EnumMember(Value = "oBudgetScenarios")]
        oBudgetScenarios,
        [EnumMember(Value = "oUserDefaultGroups")]
        oUserDefaultGroups,
        [EnumMember(Value = "oSalesOpportunities")]
        oSalesOpportunities,
        [EnumMember(Value = "oSalesStages")]
        oSalesStages,
        [EnumMember(Value = "oActivityTypes")]
        oActivityTypes,
        [EnumMember(Value = "oActivityLocations")]
        oActivityLocations,
        [EnumMember(Value = "oDrafts")]
        oDrafts,
        [EnumMember(Value = "oDeductionTaxHierarchies")]
        oDeductionTaxHierarchies,
        [EnumMember(Value = "oDeductionTaxGroups")]
        oDeductionTaxGroups,
        [EnumMember(Value = "oAdditionalExpenses")]
        oAdditionalExpenses,
        [EnumMember(Value = "oSalesTaxAuthorities")]
        oSalesTaxAuthorities,
        [EnumMember(Value = "oSalesTaxAuthoritiesTypes")]
        oSalesTaxAuthoritiesTypes,
        [EnumMember(Value = "oSalesTaxCodes")]
        oSalesTaxCodes,
        [EnumMember(Value = "oQueryCategories")]
        oQueryCategories,
        [EnumMember(Value = "oFactoringIndicators")]
        oFactoringIndicators,
        [EnumMember(Value = "oPaymentsDrafts")]
        oPaymentsDrafts,
        [EnumMember(Value = "oAccountSegmentations")]
        oAccountSegmentations,
        [EnumMember(Value = "oAccountSegmentationCategories")]
        oAccountSegmentationCategories,
        [EnumMember(Value = "oWarehouseLocations")]
        oWarehouseLocations,
        [EnumMember(Value = "oForms1099")]
        oForms1099,
        [EnumMember(Value = "oInventoryCycles")]
        oInventoryCycles,
        [EnumMember(Value = "oWizardPaymentMethods")]
        oWizardPaymentMethods,
        [EnumMember(Value = "oBPPriorities")]
        oBPPriorities,
        [EnumMember(Value = "oDunningLetters")]
        oDunningLetters,
        [EnumMember(Value = "oUserFields")]
        oUserFields,
        [EnumMember(Value = "oUserTables")]
        oUserTables,
        [EnumMember(Value = "oPickLists")]
        oPickLists,
        [EnumMember(Value = "oPaymentRunExport")]
        oPaymentRunExport,
        [EnumMember(Value = "oUserQueries")]
        oUserQueries,
        [EnumMember(Value = "oMaterialRevaluation")]
        oMaterialRevaluation,
        [EnumMember(Value = "oCorrectionPurchaseInvoice")]
        oCorrectionPurchaseInvoice,
        [EnumMember(Value = "oCorrectionPurchaseInvoiceReversal")]
        oCorrectionPurchaseInvoiceReversal,
        [EnumMember(Value = "oCorrectionInvoice")]
        oCorrectionInvoice,
        [EnumMember(Value = "oCorrectionInvoiceReversal")]
        oCorrectionInvoiceReversal,
        [EnumMember(Value = "oContractTemplates")]
        oContractTemplates,
        [EnumMember(Value = "oEmployeesInfo")]
        oEmployeesInfo,
        [EnumMember(Value = "oCustomerEquipmentCards")]
        oCustomerEquipmentCards,
        [EnumMember(Value = "oWithholdingTaxCodes")]
        oWithholdingTaxCodes,
        [EnumMember(Value = "oBillOfExchangeTransactions")]
        oBillOfExchangeTransactions,
        [EnumMember(Value = "oKnowledgeBaseSolutions")]
        oKnowledgeBaseSolutions,
        [EnumMember(Value = "oServiceContracts")]
        oServiceContracts,
        [EnumMember(Value = "oServiceCalls")]
        oServiceCalls,
        [EnumMember(Value = "oUserKeys")]
        oUserKeys,
        [EnumMember(Value = "oQueue")]
        oQueue,
        [EnumMember(Value = "oSalesForecast")]
        oSalesForecast,
        [EnumMember(Value = "oTerritories")]
        oTerritories,
        [EnumMember(Value = "oIndustries")]
        oIndustries,
        [EnumMember(Value = "oProductionOrders")]
        oProductionOrders,
        [EnumMember(Value = "oDownPayments")]
        oDownPayments,
        [EnumMember(Value = "oPurchaseDownPayments")]
        oPurchaseDownPayments,
        [EnumMember(Value = "oPackagesTypes")]
        oPackagesTypes,
        [EnumMember(Value = "oUserObjectsMD")]
        oUserObjectsMD,
        [EnumMember(Value = "oTeams")]
        oTeams,
        [EnumMember(Value = "oRelationships")]
        oRelationships,
        [EnumMember(Value = "oUserPermissionTree")]
        oUserPermissionTree,
        [EnumMember(Value = "oActivityStatus")]
        oActivityStatus,
        [EnumMember(Value = "oChooseFromList")]
        oChooseFromList,
        [EnumMember(Value = "oFormattedSearches")]
        oFormattedSearches,
        [EnumMember(Value = "oAttachments2")]
        oAttachments2,
        [EnumMember(Value = "oUserLanguages")]
        oUserLanguages,
        [EnumMember(Value = "oMultiLanguageTranslations")]
        oMultiLanguageTranslations,
        [EnumMember(Value = "oDynamicSystemStrings")]
        oDynamicSystemStrings,
        [EnumMember(Value = "oHouseBankAccounts")]
        oHouseBankAccounts,
        [EnumMember(Value = "oBusinessPlaces")]
        oBusinessPlaces,
        [EnumMember(Value = "oLocalEra")]
        oLocalEra,
        [EnumMember(Value = "oNotaFiscalCFOP")]
        oNotaFiscalCFOP,
        [EnumMember(Value = "oNotaFiscalCST")]
        oNotaFiscalCST,
        [EnumMember(Value = "oNotaFiscalUsage")]
        oNotaFiscalUsage,
        [EnumMember(Value = "oClosingDateProcedure")]
        oClosingDateProcedure,
        [EnumMember(Value = "oBPFiscalRegistryID")]
        oBPFiscalRegistryID,
        [EnumMember(Value = "oSalesTaxInvoice")]
        oSalesTaxInvoice,
        [EnumMember(Value = "oPurchaseTaxInvoice")]
        oPurchaseTaxInvoice,
        [EnumMember(Value = "oPurchaseQuotations")]
        oPurchaseQuotations,
        [EnumMember(Value = "oStockTransferDraft")]
        oStockTransferDraft,
        [EnumMember(Value = "oInventoryTransferRequest")]
        oInventoryTransferRequest,
        [EnumMember(Value = "oPurchaseRequest")]
        oPurchaseRequest
    }

    public enum BoOpenIncPayment
    {
        [EnumMember(Value = "oip_BankTransfer")]
        oip_BankTransfer,
        [EnumMember(Value = "oip_Cash")]
        oip_Cash,
        [EnumMember(Value = "oip_Checks")]
        oip_Checks,
        [EnumMember(Value = "oip_Credit")]
        oip_Credit,
        [EnumMember(Value = "oip_No")]
        oip_No
    }

    public enum BoOperationEnum
    {
        [EnumMember(Value = "rloNone")]
        rloNone,
        [EnumMember(Value = "rloAddition")]
        rloAddition,
        [EnumMember(Value = "rloSubtraction")]
        rloSubtraction,
        [EnumMember(Value = "rloMultiplication")]
        rloMultiplication,
        [EnumMember(Value = "rloDivision")]
        rloDivision,
        [EnumMember(Value = "rloPercentage")]
        rloPercentage,
        [EnumMember(Value = "rloLeftPartCharacters")]
        rloLeftPartCharacters,
        [EnumMember(Value = "rloRightPartMantissa")]
        rloRightPartMantissa,
        [EnumMember(Value = "rloRound")]
        rloRound,
        [EnumMember(Value = "rloConcat")]
        rloConcat,
        [EnumMember(Value = "rloRight")]
        rloRight,
        [EnumMember(Value = "rloLeft")]
        rloLeft,
        [EnumMember(Value = "rloSentence")]
        rloSentence,
        [EnumMember(Value = "rloLength")]
        rloLength,
        [EnumMember(Value = "rloCurrency")]
        rloCurrency,
        [EnumMember(Value = "rloNumber")]
        rloNumber,
        [EnumMember(Value = "rloLessThan")]
        rloLessThan,
        [EnumMember(Value = "rloLessOrEqual")]
        rloLessOrEqual,
        [EnumMember(Value = "rloEqual")]
        rloEqual,
        [EnumMember(Value = "rloNotEqual")]
        rloNotEqual,
        [EnumMember(Value = "rloGreaterOrEqual")]
        rloGreaterOrEqual,
        [EnumMember(Value = "rloGreaterThan")]
        rloGreaterThan
    }

    public enum BoOpexStatus
    {
        [EnumMember(Value = "bos_Open")]
        bos_Open,
        [EnumMember(Value = "bos_Close")]
        bos_Close
    }

    public enum BoOrientationEnum
    {
        [EnumMember(Value = "ortVertical")]
        ortVertical,
        [EnumMember(Value = "ortHorizontal")]
        ortHorizontal
    }

    public enum BoPayTermDueTypes
    {
        [EnumMember(Value = "pdt_MonthEnd")]
        pdt_MonthEnd,
        [EnumMember(Value = "pdt_HalfMonth")]
        pdt_HalfMonth,
        [EnumMember(Value = "pdt_MonthStart")]
        pdt_MonthStart,
        [EnumMember(Value = "pdt_None")]
        pdt_None
    }

    public enum BoPaymentMeansEnum
    {
        [EnumMember(Value = "bopmCheck")]
        bopmCheck,
        [EnumMember(Value = "bopmBankTransfer")]
        bopmBankTransfer,
        [EnumMember(Value = "bopmBillOfExchange")]
        bopmBillOfExchange
    }

    public enum BoPaymentPriorities
    {
        [EnumMember(Value = "bopp_Priority_1")]
        bopp_Priority_1,
        [EnumMember(Value = "bopp_Priority_2")]
        bopp_Priority_2,
        [EnumMember(Value = "bopp_Priority_3")]
        bopp_Priority_3,
        [EnumMember(Value = "bopp_Priority_4")]
        bopp_Priority_4,
        [EnumMember(Value = "bopp_Priority_5")]
        bopp_Priority_5,
        [EnumMember(Value = "bopp_Priority_6")]
        bopp_Priority_6
    }

    public enum BoPaymentTypeEnum
    {
        [EnumMember(Value = "boptIncoming")]
        boptIncoming,
        [EnumMember(Value = "boptOutgoing")]
        boptOutgoing
    }

    public enum BoPaymentsObjectType
    {
        [EnumMember(Value = "bopot_IncomingPayments")]
        bopot_IncomingPayments,
        [EnumMember(Value = "bopot_OutgoingPayments")]
        bopot_OutgoingPayments
    }

    public enum BoPermission
    {
        [EnumMember(Value = "boper_Full")]
        boper_Full,
        [EnumMember(Value = "boper_ReadOnly")]
        boper_ReadOnly,
        [EnumMember(Value = "boper_None")]
        boper_None,
        [EnumMember(Value = "boper_Various")]
        boper_Various,
        [EnumMember(Value = "boper_Undefined")]
        boper_Undefined
    }

    public enum BoPickStatus
    {
        [EnumMember(Value = "ps_Released")]
        ps_Released,
        [EnumMember(Value = "ps_Picked")]
        ps_Picked,
        [EnumMember(Value = "ps_PartiallyPicked")]
        ps_PartiallyPicked,
        [EnumMember(Value = "ps_PartiallyDelivered")]
        ps_PartiallyDelivered,
        [EnumMember(Value = "ps_Closed")]
        ps_Closed
    }

    public enum BoPictureSizeEnum
    {
        [EnumMember(Value = "rlpsOriginalSize")]
        rlpsOriginalSize,
        [EnumMember(Value = "rlpsFitFieldSizeNonProportionally")]
        rlpsFitFieldSizeNonProportionally,
        [EnumMember(Value = "rlpsFitFieldSizeProportionally")]
        rlpsFitFieldSizeProportionally,
        [EnumMember(Value = "rlpsFitFieldHeight")]
        rlpsFitFieldHeight,
        [EnumMember(Value = "rlpsFitFieldWidth")]
        rlpsFitFieldWidth
    }

    public enum BoPlanningSystem
    {
        [EnumMember(Value = "bop_MRP")]
        bop_MRP,
        [EnumMember(Value = "bop_None")]
        bop_None
    }

    public enum BoPriceListGroupNum
    {
        [EnumMember(Value = "boplgn_Group1")]
        boplgn_Group1,
        [EnumMember(Value = "boplgn_Group2")]
        boplgn_Group2,
        [EnumMember(Value = "boplgn_Group3")]
        boplgn_Group3,
        [EnumMember(Value = "boplgn_Group4")]
        boplgn_Group4
    }

    public enum BoPrintReceiptEnum
    {
        [EnumMember(Value = "boprcAlways")]
        boprcAlways,
        [EnumMember(Value = "boprcNo")]
        boprcNo,
        [EnumMember(Value = "boprcOnlyWhenAdding")]
        boprcOnlyWhenAdding
    }

    public enum BoProcurementMethod
    {
        [EnumMember(Value = "bom_Buy")]
        bom_Buy,
        [EnumMember(Value = "bom_Make")]
        bom_Make
    }

    public enum BoProductSources
    {
        [EnumMember(Value = "bps_PurchasedFromDomVendor")]
        bps_PurchasedFromDomVendor,
        [EnumMember(Value = "bps_ImportedByCompany")]
        bps_ImportedByCompany,
        [EnumMember(Value = "bps_ImportedGoodsPurchasedFromDomVendor")]
        bps_ImportedGoodsPurchasedFromDomVendor,
        [EnumMember(Value = "bps_ProducedByCompany")]
        bps_ProducedByCompany
    }

    public enum BoProductionOrderOriginEnum
    {
        [EnumMember(Value = "bopooManual")]
        bopooManual,
        [EnumMember(Value = "bopooMRP")]
        bopooMRP,
        [EnumMember(Value = "bopooSalesOrder")]
        bopooSalesOrder
    }

    public enum BoProductionOrderStatusEnum
    {
        [EnumMember(Value = "boposPlanned")]
        boposPlanned,
        [EnumMember(Value = "boposReleased")]
        boposReleased,
        [EnumMember(Value = "boposClosed")]
        boposClosed,
        [EnumMember(Value = "boposCancelled")]
        boposCancelled
    }

    public enum BoProductionOrderTypeEnum
    {
        [EnumMember(Value = "bopotStandard")]
        bopotStandard,
        [EnumMember(Value = "bopotSpecial")]
        bopotSpecial,
        [EnumMember(Value = "bopotDisassembly")]
        bopotDisassembly
    }

    public enum BoQueryTypeEnum
    {
        [EnumMember(Value = "qtRegular")]
        qtRegular,
        [EnumMember(Value = "qtWizard")]
        qtWizard
    }

    public enum BoRcptCredTypes
    {
        [EnumMember(Value = "cr_Regular")]
        cr_Regular,
        [EnumMember(Value = "cr_Telephone")]
        cr_Telephone,
        [EnumMember(Value = "cr_InternetTransaction")]
        cr_InternetTransaction
    }

    public enum BoRcptInvTypes
    {
        [EnumMember(Value = "it_AllTransactions")]
        it_AllTransactions,
        [EnumMember(Value = "it_OpeningBalance")]
        it_OpeningBalance,
        [EnumMember(Value = "it_ClosingBalance")]
        it_ClosingBalance,
        [EnumMember(Value = "it_Invoice")]
        it_Invoice,
        [EnumMember(Value = "it_CredItnote")]
        it_CredItnote,
        [EnumMember(Value = "it_TaxInvoice")]
        it_TaxInvoice,
        [EnumMember(Value = "it_Return")]
        it_Return,
        [EnumMember(Value = "it_PurchaseInvoice")]
        it_PurchaseInvoice,
        [EnumMember(Value = "it_PurchaseCreditNote")]
        it_PurchaseCreditNote,
        [EnumMember(Value = "it_PurchaseDeliveryNote")]
        it_PurchaseDeliveryNote,
        [EnumMember(Value = "it_PurchaseReturn")]
        it_PurchaseReturn,
        [EnumMember(Value = "it_Receipt")]
        it_Receipt,
        [EnumMember(Value = "it_Deposit")]
        it_Deposit,
        [EnumMember(Value = "it_JournalEntry")]
        it_JournalEntry,
        [EnumMember(Value = "it_PaymentAdvice")]
        it_PaymentAdvice,
        [EnumMember(Value = "it_ChequesForPayment")]
        it_ChequesForPayment,
        [EnumMember(Value = "it_StockReconciliations")]
        it_StockReconciliations,
        [EnumMember(Value = "it_GeneralReceiptToStock")]
        it_GeneralReceiptToStock,
        [EnumMember(Value = "it_GeneralReleaseFromStock")]
        it_GeneralReleaseFromStock,
        [EnumMember(Value = "it_TransferBetweenWarehouses")]
        it_TransferBetweenWarehouses,
        [EnumMember(Value = "it_WorkInstructions")]
        it_WorkInstructions,
        [EnumMember(Value = "it_DeferredDeposit")]
        it_DeferredDeposit,
        [EnumMember(Value = "it_CorrectionInvoice")]
        it_CorrectionInvoice,
        [EnumMember(Value = "it_APCorrectionInvoice")]
        it_APCorrectionInvoice,
        [EnumMember(Value = "it_ARCorrectionInvoice")]
        it_ARCorrectionInvoice,
        [EnumMember(Value = "it_DownPayment")]
        it_DownPayment,
        [EnumMember(Value = "it_PurchaseDownPayment")]
        it_PurchaseDownPayment
    }

    public enum BoRcptTypes
    {
        [EnumMember(Value = "rCustomer")]
        rCustomer,
        [EnumMember(Value = "rAccount")]
        rAccount,
        [EnumMember(Value = "rSupplier")]
        rSupplier
    }

    public enum BoRemindUnits
    {
        [EnumMember(Value = "reu_Days")]
        reu_Days,
        [EnumMember(Value = "reu_Weeks")]
        reu_Weeks,
        [EnumMember(Value = "reu_Month")]
        reu_Month
    }

    public enum BoReportLayoutItemTypeEnum
    {
        [EnumMember(Value = "rlitPageHeader")]
        rlitPageHeader,
        [EnumMember(Value = "rlitStartOfReport")]
        rlitStartOfReport,
        [EnumMember(Value = "rlitRepetitiveAreaHeader")]
        rlitRepetitiveAreaHeader,
        [EnumMember(Value = "rlitRepetitiveArea")]
        rlitRepetitiveArea,
        [EnumMember(Value = "rlitRepetitiveAreaFooter")]
        rlitRepetitiveAreaFooter,
        [EnumMember(Value = "rlitEndOfReport")]
        rlitEndOfReport,
        [EnumMember(Value = "rlitPageFooter")]
        rlitPageFooter,
        [EnumMember(Value = "rlitTextField")]
        rlitTextField,
        [EnumMember(Value = "rlitPictureField")]
        rlitPictureField,
        [EnumMember(Value = "rlitUserField")]
        rlitUserField
    }

    public enum BoResolutionUnits
    {
        [EnumMember(Value = "rsu_Days")]
        rsu_Days,
        [EnumMember(Value = "rsu_Hours")]
        rsu_Hours
    }

    public enum BoResponseUnit
    {
        [EnumMember(Value = "boru_Day")]
        boru_Day,
        [EnumMember(Value = "boru_Hour")]
        boru_Hour
    }

    public enum BoRoleInTeam
    {
        [EnumMember(Value = "borit_Leader")]
        borit_Leader,
        [EnumMember(Value = "borit_Member")]
        borit_Member
    }

    public enum BoRoundingMethod
    {
        [EnumMember(Value = "borm_FixedEnding")]
        borm_FixedEnding,
        [EnumMember(Value = "borm_FixedInterval")]
        borm_FixedInterval,
        [EnumMember(Value = "borm_NoRounding")]
        borm_NoRounding,
        [EnumMember(Value = "borm_RoundToFullAmount")]
        borm_RoundToFullAmount,
        [EnumMember(Value = "borm_RoundToFullDecAmount")]
        borm_RoundToFullDecAmount,
        [EnumMember(Value = "borm_RoundToFullTensAmount")]
        borm_RoundToFullTensAmount
    }

    public enum BoRoundingRule
    {
        [EnumMember(Value = "borrRoundDown")]
        borrRoundDown,
        [EnumMember(Value = "borrRoundOff")]
        borrRoundOff,
        [EnumMember(Value = "borrRoundUp")]
        borrRoundUp
    }

    public enum BoSalaryCostUnits
    {
        [EnumMember(Value = "scu_Hour")]
        scu_Hour,
        [EnumMember(Value = "scu_Day")]
        scu_Day,
        [EnumMember(Value = "scu_Week")]
        scu_Week,
        [EnumMember(Value = "scu_Month")]
        scu_Month,
        [EnumMember(Value = "scu_Year")]
        scu_Year,
        [EnumMember(Value = "scu_Semimonthly")]
        scu_Semimonthly,
        [EnumMember(Value = "scu_Biweekly")]
        scu_Biweekly
    }

    public enum BoSerialNumberStatus
    {
        [EnumMember(Value = "sns_Active")]
        sns_Active,
        [EnumMember(Value = "sns_InLab")]
        sns_InLab,
        [EnumMember(Value = "sns_Loaned")]
        sns_Loaned,
        [EnumMember(Value = "sns_Returned")]
        sns_Returned,
        [EnumMember(Value = "sns_Terminated")]
        sns_Terminated
    }

    public enum BoSeriesGroupEnum
    {
        [EnumMember(Value = "sg_Group1")]
        sg_Group1,
        [EnumMember(Value = "sg_Group2")]
        sg_Group2,
        [EnumMember(Value = "sg_Group3")]
        sg_Group3,
        [EnumMember(Value = "sg_Group4")]
        sg_Group4,
        [EnumMember(Value = "sg_Group5")]
        sg_Group5,
        [EnumMember(Value = "sg_Group6")]
        sg_Group6,
        [EnumMember(Value = "sg_Group7")]
        sg_Group7,
        [EnumMember(Value = "sg_Group8")]
        sg_Group8,
        [EnumMember(Value = "sg_Group9")]
        sg_Group9,
        [EnumMember(Value = "sg_Group10")]
        sg_Group10
    }

    public enum BoSeriesTypeEnum
    {
        [EnumMember(Value = "stDocument")]
        stDocument,
        [EnumMember(Value = "stBusinessPartner")]
        stBusinessPartner,
        [EnumMember(Value = "stItem")]
        stItem,
        [EnumMember(Value = "stResource")]
        stResource
    }

    public enum BoServicePaymentMethods
    {
        [EnumMember(Value = "spmAccreditedToBankAccount")]
        spmAccreditedToBankAccount,
        [EnumMember(Value = "spmBankTransfer")]
        spmBankTransfer,
        [EnumMember(Value = "spmOther")]
        spmOther
    }

    public enum BoServiceSupplyMethods
    {
        [EnumMember(Value = "ssmImmediate")]
        ssmImmediate,
        [EnumMember(Value = "ssmToMoreResumptions")]
        ssmToMoreResumptions
    }

    public enum BoServiceTypes
    {
        [EnumMember(Value = "bst_Regular")]
        bst_Regular,
        [EnumMember(Value = "bst_Warranty")]
        bst_Warranty
    }

    public enum BoSoClosedInTypes
    {
        [EnumMember(Value = "sos_Months")]
        sos_Months,
        [EnumMember(Value = "sos_Weeks")]
        sos_Weeks,
        [EnumMember(Value = "sos_Days")]
        sos_Days
    }

    public enum BoSoOsStatus
    {
        [EnumMember(Value = "sos_Open")]
        sos_Open,
        [EnumMember(Value = "sos_Missed")]
        sos_Missed,
        [EnumMember(Value = "sos_Sold")]
        sos_Sold
    }

    public enum BoSoStatus
    {
        [EnumMember(Value = "so_Open")]
        so_Open,
        [EnumMember(Value = "so_Closed")]
        so_Closed
    }

    public enum BoSortTypeEnum
    {
        [EnumMember(Value = "rlstAlpha")]
        rlstAlpha,
        [EnumMember(Value = "rlstNumeric")]
        rlstNumeric,
        [EnumMember(Value = "rlstMoney")]
        rlstMoney,
        [EnumMember(Value = "rlstDate")]
        rlstDate
    }

    public enum BoStatus
    {
        [EnumMember(Value = "bost_Open")]
        bost_Open,
        [EnumMember(Value = "bost_Close")]
        bost_Close,
        [EnumMember(Value = "bost_Paid")]
        bost_Paid,
        [EnumMember(Value = "bost_Delivered")]
        bost_Delivered
    }

    public enum BoStckTrnDir
    {
        [EnumMember(Value = "bos_TransferToTechnician")]
        bos_TransferToTechnician,
        [EnumMember(Value = "bos_TransferFromTechnician")]
        bos_TransferFromTechnician
    }

    public enum BoSubPeriodTypeEnum
    {
        [EnumMember(Value = "spt_Year")]
        spt_Year,
        [EnumMember(Value = "spt_Quarters")]
        spt_Quarters,
        [EnumMember(Value = "spt_Months")]
        spt_Months,
        [EnumMember(Value = "spt_Days")]
        spt_Days
    }

    public enum BoSvcCallPriorities
    {
        [EnumMember(Value = "scp_Low")]
        scp_Low,
        [EnumMember(Value = "scp_Medium")]
        scp_Medium,
        [EnumMember(Value = "scp_High")]
        scp_High
    }

    public enum BoSvcContractStatus
    {
        [EnumMember(Value = "scs_Approved")]
        scs_Approved,
        [EnumMember(Value = "scs_Frozen")]
        scs_Frozen,
        [EnumMember(Value = "scs_Draft")]
        scs_Draft,
        [EnumMember(Value = "scs_Terminated")]
        scs_Terminated
    }

    public enum BoSvcEpxDocTypes
    {
        [EnumMember(Value = "edt_Invoice")]
        edt_Invoice,
        [EnumMember(Value = "edt_Delivery")]
        edt_Delivery,
        [EnumMember(Value = "edt_Return")]
        edt_Return,
        [EnumMember(Value = "edt_StockTransfer")]
        edt_StockTransfer,
        [EnumMember(Value = "edt_CreditMemo")]
        edt_CreditMemo,
        [EnumMember(Value = "edt_Order")]
        edt_Order
    }

    public enum BoSvcExpPartTypes
    {
        [EnumMember(Value = "sep_Inventory")]
        sep_Inventory,
        [EnumMember(Value = "sep_NonInventory")]
        sep_NonInventory
    }

    public enum BoTCDConditionEnum
    {
        [EnumMember(Value = "tcdcNone")]
        tcdcNone,
        [EnumMember(Value = "tcdcFederalTaxID")]
        tcdcFederalTaxID,
        [EnumMember(Value = "tcdcShipToAddress")]
        tcdcShipToAddress,
        [EnumMember(Value = "tcdcShipToStreePOBox")]
        tcdcShipToStreePOBox,
        [EnumMember(Value = "tcdcShipToCity")]
        tcdcShipToCity,
        [EnumMember(Value = "tcdcShipToZipCode")]
        tcdcShipToZipCode,
        [EnumMember(Value = "tcdcShipToCounty")]
        tcdcShipToCounty,
        [EnumMember(Value = "tcdcShipToState")]
        tcdcShipToState,
        [EnumMember(Value = "tcdcShipToCountry")]
        tcdcShipToCountry,
        [EnumMember(Value = "tcdcItem")]
        tcdcItem,
        [EnumMember(Value = "tcdcItemGroup")]
        tcdcItemGroup,
        [EnumMember(Value = "tcdcBusinessPartner")]
        tcdcBusinessPartner,
        [EnumMember(Value = "tcdcCustomerGroup")]
        tcdcCustomerGroup,
        [EnumMember(Value = "tcdcVendorGroup")]
        tcdcVendorGroup,
        [EnumMember(Value = "tcdcWarehouse")]
        tcdcWarehouse,
        [EnumMember(Value = "tcdcGLAccount")]
        tcdcGLAccount,
        [EnumMember(Value = "tcdcCustomerEquTax")]
        tcdcCustomerEquTax,
        [EnumMember(Value = "tcdcTaxStatus")]
        tcdcTaxStatus,
        [EnumMember(Value = "tcdcFreight")]
        tcdcFreight,
        [EnumMember(Value = "tcdcUDF")]
        tcdcUDF,
        [EnumMember(Value = "tcdcBranchNumber")]
        tcdcBranchNumber
    }

    public enum BoTCDDocumentTypeEnum
    {
        [EnumMember(Value = "tcddtItem")]
        tcddtItem,
        [EnumMember(Value = "tcddtService")]
        tcddtService,
        [EnumMember(Value = "tcddtItemAndService")]
        tcddtItemAndService
    }

    public enum BoTaxInvoiceTypes
    {
        [EnumMember(Value = "botit_AlterationCorrectionInvoice")]
        botit_AlterationCorrectionInvoice,
        [EnumMember(Value = "botit_AlterationInvoice")]
        botit_AlterationInvoice,
        [EnumMember(Value = "botit_CorrectionInvoice")]
        botit_CorrectionInvoice,
        [EnumMember(Value = "botit_Invoice")]
        botit_Invoice,
        [EnumMember(Value = "botit_JournalEntry")]
        botit_JournalEntry,
        [EnumMember(Value = "botit_Payment")]
        botit_Payment
    }

    public enum BoTaxPostAccEnum
    {
        [EnumMember(Value = "tpa_Default")]
        tpa_Default,
        [EnumMember(Value = "tpa_SalesTaxAccount")]
        tpa_SalesTaxAccount,
        [EnumMember(Value = "tpa_PurchaseTaxAccount")]
        tpa_PurchaseTaxAccount
    }

    public enum BoTaxRoundingRuleTypes
    {
        [EnumMember(Value = "trr_RoundDown")]
        trr_RoundDown,
        [EnumMember(Value = "trr_RoundUp")]
        trr_RoundUp,
        [EnumMember(Value = "trr_RoundOff")]
        trr_RoundOff,
        [EnumMember(Value = "trr_CompanyDefault")]
        trr_CompanyDefault
    }

    public enum BoTaxTypes
    {
        [EnumMember(Value = "tt_Yes")]
        tt_Yes,
        [EnumMember(Value = "tt_No")]
        tt_No,
        [EnumMember(Value = "tt_UseTax")]
        tt_UseTax,
        [EnumMember(Value = "tt_OffsetTax")]
        tt_OffsetTax
    }

    public enum BoTimeTemplate
    {
        [EnumMember(Value = "tt_24H")]
        tt_24H,
        [EnumMember(Value = "tt_12H")]
        tt_12H
    }

    public enum BoTransactionTypeEnum
    {
        [EnumMember(Value = "botrntComplete")]
        botrntComplete,
        [EnumMember(Value = "botrntReject")]
        botrntReject
    }

    public enum BoUDOObjType
    {
        [EnumMember(Value = "boud_Document")]
        boud_Document,
        [EnumMember(Value = "boud_MasterData")]
        boud_MasterData
    }

    public enum BoUPTOptions
    {
        [EnumMember(Value = "bou_FullNone")]
        bou_FullNone,
        [EnumMember(Value = "bou_FullReadNone")]
        bou_FullReadNone
    }

    public enum BoUTBTableType
    {
        [EnumMember(Value = "bott_Document")]
        bott_Document,
        [EnumMember(Value = "bott_DocumentLines")]
        bott_DocumentLines,
        [EnumMember(Value = "bott_MasterData")]
        bott_MasterData,
        [EnumMember(Value = "bott_MasterDataLines")]
        bott_MasterDataLines,
        [EnumMember(Value = "bott_NoObject")]
        bott_NoObject,
        [EnumMember(Value = "bott_NoObjectAutoIncrement")]
        bott_NoObjectAutoIncrement
    }

    public enum BoUniqueSerialNumber
    {
        [EnumMember(Value = "usn_None")]
        usn_None,
        [EnumMember(Value = "usn_MfrSerialNumber")]
        usn_MfrSerialNumber,
        [EnumMember(Value = "usn_SerialNumber")]
        usn_SerialNumber,
        [EnumMember(Value = "usn_LotNumber")]
        usn_LotNumber
    }

    public enum BoUserGroup
    {
        [EnumMember(Value = "ug_Regular")]
        ug_Regular,
        [EnumMember(Value = "ug_Deleted")]
        ug_Deleted
    }

    public enum BoVatCategoryEnum
    {
        [EnumMember(Value = "bovcInputTax")]
        bovcInputTax,
        [EnumMember(Value = "bovcOutputTax")]
        bovcOutputTax
    }

    public enum BoVatStatus
    {
        [EnumMember(Value = "vExempted")]
        vExempted,
        [EnumMember(Value = "vLiable")]
        vLiable,
        [EnumMember(Value = "vEC")]
        vEC
    }

    public enum BoVerticalAlignmentEnum
    {
        [EnumMember(Value = "rlvaTop")]
        rlvaTop,
        [EnumMember(Value = "rlvaBottom")]
        rlvaBottom,
        [EnumMember(Value = "rlvaCentralized")]
        rlvaCentralized
    }

    public enum BoWorkOrderStat
    {
        [EnumMember(Value = "wk_ProductComplete")]
        wk_ProductComplete,
        [EnumMember(Value = "wk_WorkInstruction")]
        wk_WorkInstruction,
        [EnumMember(Value = "wk_WorkOrder")]
        wk_WorkOrder
    }

    public enum BoYesNoEnum
    {
        [EnumMember(Value = "tNO")]
        tNO,
        [EnumMember(Value = "tYES")]
        tYES
    }

    public enum BrazilMultiIndexerTypes
    {
        [EnumMember(Value = "bmitInvalid")]
        bmitInvalid,
        [EnumMember(Value = "bmitIncomeNature")]
        bmitIncomeNature
    }

    public enum BrazilNumericIndexerTypes
    {
        [EnumMember(Value = "bnitInvalid")]
        bnitInvalid,
        [EnumMember(Value = "bnitBeverageCommercialBrand")]
        bnitBeverageCommercialBrand,
        [EnumMember(Value = "bnitFuelGroup")]
        bnitFuelGroup,
        [EnumMember(Value = "bnitNatureOfCompany")]
        bnitNatureOfCompany,
        [EnumMember(Value = "bnitEconomicActivityType")]
        bnitEconomicActivityType,
        [EnumMember(Value = "bnitCooperativeAssociationType")]
        bnitCooperativeAssociationType,
        [EnumMember(Value = "bnitProfitTaxation")]
        bnitProfitTaxation,
        [EnumMember(Value = "bnitCompanyQualification")]
        bnitCompanyQualification,
        [EnumMember(Value = "bnitDeclarerType")]
        bnitDeclarerType,
        [EnumMember(Value = "bnitEnvironmentType")]
        bnitEnvironmentType,
        [EnumMember(Value = "bnitTributaryType")]
        bnitTributaryType,
        [EnumMember(Value = "bnitTributaryRegimeCode")]
        bnitTributaryRegimeCode,
        [EnumMember(Value = "bnitIncomeNatureTable")]
        bnitIncomeNatureTable,
        [EnumMember(Value = "bnitIncomeNatureCode")]
        bnitIncomeNatureCode,
        [EnumMember(Value = "bnitExportationDocumentType")]
        bnitExportationDocumentType,
        [EnumMember(Value = "bnitExportationNature")]
        bnitExportationNature,
        [EnumMember(Value = "bnitLadingBillType")]
        bnitLadingBillType
    }

    public enum BrazilStringIndexerTypes
    {
        [EnumMember(Value = "bsitInvalid")]
        bsitInvalid,
        [EnumMember(Value = "bsitBeverageTable")]
        bsitBeverageTable,
        [EnumMember(Value = "bsitNatureOfCalculationBase")]
        bsitNatureOfCalculationBase,
        [EnumMember(Value = "bsitCreditOrigin")]
        bsitCreditOrigin,
        [EnumMember(Value = "bsitBeverageGroup")]
        bsitBeverageGroup,
        [EnumMember(Value = "bsitCreditContributionOrigin")]
        bsitCreditContributionOrigin,
        [EnumMember(Value = "bsitIPIPeriod")]
        bsitIPIPeriod,
        [EnumMember(Value = "bsitSPEDProfile")]
        bsitSPEDProfile,
        [EnumMember(Value = "bsitImportationDocumentType")]
        bsitImportationDocumentType,
        [EnumMember(Value = "bsitReferentialAccountCode")]
        bsitReferentialAccountCode
    }

    public enum CalculateInterestMethodEnum
    {
        [EnumMember(Value = "cimOnRemainingAmount")]
        cimOnRemainingAmount,
        [EnumMember(Value = "cimOnOriginalSum")]
        cimOnOriginalSum
    }

    public enum CalculationBaseEnum
    {
        [EnumMember(Value = "cbYearly")]
        cbYearly,
        [EnumMember(Value = "cbMonthly")]
        cbMonthly
    }

    public enum CallMessageStatusEnum
    {
        [EnumMember(Value = "cmsUnread")]
        cmsUnread,
        [EnumMember(Value = "cmsRead")]
        cmsRead
    }

    public enum CallMessageTypeEnum
    {
        [EnumMember(Value = "cmtInformation")]
        cmtInformation,
        [EnumMember(Value = "cmtWarning")]
        cmtWarning,
        [EnumMember(Value = "cmtError")]
        cmtError
    }

    public enum CampaignAssignToEnum
    {
        [EnumMember(Value = "catUser")]
        catUser,
        [EnumMember(Value = "catEmployee")]
        catEmployee
    }

    public enum CampaignBPStatusEnum
    {
        [EnumMember(Value = "cbpsActive")]
        cbpsActive,
        [EnumMember(Value = "cbpsInactive")]
        cbpsInactive
    }

    public enum CampaignItemTypeEnum
    {
        [EnumMember(Value = "citItems")]
        citItems,
        [EnumMember(Value = "citLabel")]
        citLabel,
        [EnumMember(Value = "citTravel")]
        citTravel
    }

    public enum CampaignStatusEnum
    {
        [EnumMember(Value = "csOpen")]
        csOpen,
        [EnumMember(Value = "csFinished")]
        csFinished,
        [EnumMember(Value = "csCanceled")]
        csCanceled
    }

    public enum CampaignTypeEnum
    {
        [EnumMember(Value = "ctEmail")]
        ctEmail,
        [EnumMember(Value = "ctMail")]
        ctMail,
        [EnumMember(Value = "ctFax")]
        ctFax,
        [EnumMember(Value = "ctPhoneCall")]
        ctPhoneCall,
        [EnumMember(Value = "ctMeeting")]
        ctMeeting,
        [EnumMember(Value = "ctSMS")]
        ctSMS,
        [EnumMember(Value = "ctWeb")]
        ctWeb,
        [EnumMember(Value = "ctOthers")]
        ctOthers
    }

    public enum CancelStatusEnum
    {
        [EnumMember(Value = "csYes")]
        csYes,
        [EnumMember(Value = "csNo")]
        csNo,
        [EnumMember(Value = "csCancellation")]
        csCancellation
    }

    public enum ClosingOptionEnum
    {
        [EnumMember(Value = "coByCurrentSystemDate")]
        coByCurrentSystemDate,
        [EnumMember(Value = "coByOriginalDocumentDate")]
        coByOriginalDocumentDate,
        [EnumMember(Value = "coBySpecifiedDate")]
        coBySpecifiedDate
    }

    public enum ContractSequenceEnum
    {
        [EnumMember(Value = "cs_Monthly")]
        cs_Monthly,
        [EnumMember(Value = "cs_Quarterly")]
        cs_Quarterly,
        [EnumMember(Value = "cs_SemiAnnually")]
        cs_SemiAnnually,
        [EnumMember(Value = "cs_Yearly")]
        cs_Yearly
    }

    public enum CounterTypeEnum
    {
        [EnumMember(Value = "ctUser")]
        ctUser,
        [EnumMember(Value = "ctEmployee")]
        ctEmployee
    }

    public enum CountingDocumentStatusEnum
    {
        [EnumMember(Value = "cdsOpen")]
        cdsOpen,
        [EnumMember(Value = "cdsClosed")]
        cdsClosed
    }

    public enum CountingLineStatusEnum
    {
        [EnumMember(Value = "clsOpen")]
        clsOpen,
        [EnumMember(Value = "clsClosed")]
        clsClosed
    }

    public enum CountingTypeEnum
    {
        [EnumMember(Value = "ctSingleCounter")]
        ctSingleCounter,
        [EnumMember(Value = "ctMultipleCounters")]
        ctMultipleCounters
    }

    public enum CreateMethodEnum
    {
        [EnumMember(Value = "cmManual")]
        cmManual,
        [EnumMember(Value = "cmAutomatic")]
        cmAutomatic
    }

    public enum CurrenciesDecimalsEnum
    {
        [EnumMember(Value = "cd1Digit")]
        cd1Digit,
        [EnumMember(Value = "cd2Digits")]
        cd2Digits,
        [EnumMember(Value = "cd3Digits")]
        cd3Digits,
        [EnumMember(Value = "cd4Digits")]
        cd4Digits,
        [EnumMember(Value = "cd5Digits")]
        cd5Digits,
        [EnumMember(Value = "cd6Digits")]
        cd6Digits,
        [EnumMember(Value = "cdDefault")]
        cdDefault,
        [EnumMember(Value = "cdWithoutDecimals")]
        cdWithoutDecimals
    }

    public enum CycleCountDeterminationCycleByEnum
    {
        [EnumMember(Value = "ccdcbItemGroup")]
        ccdcbItemGroup,
        [EnumMember(Value = "ccdcbWarehouseSublevel1")]
        ccdcbWarehouseSublevel1,
        [EnumMember(Value = "ccdcbWarehouseSublevel2")]
        ccdcbWarehouseSublevel2,
        [EnumMember(Value = "ccdcbWarehouseSublevel3")]
        ccdcbWarehouseSublevel3,
        [EnumMember(Value = "ccdcbWarehouseSublevel4")]
        ccdcbWarehouseSublevel4
    }

    public enum DepreciationCalculationBaseEnum
    {
        [EnumMember(Value = "dcbAcquisitionValue")]
        dcbAcquisitionValue,
        [EnumMember(Value = "dcbNetBookValue")]
        dcbNetBookValue
    }

    public enum DepreciationMethodEnum
    {
        [EnumMember(Value = "dmNoDepreciation")]
        dmNoDepreciation,
        [EnumMember(Value = "dmStraightLine")]
        dmStraightLine,
        [EnumMember(Value = "dmStraightLinePeriodControl")]
        dmStraightLinePeriodControl,
        [EnumMember(Value = "dmDecliningBalance")]
        dmDecliningBalance,
        [EnumMember(Value = "dmMultilevel")]
        dmMultilevel,
        [EnumMember(Value = "dmImmediateWriteOff")]
        dmImmediateWriteOff,
        [EnumMember(Value = "dmSpecialDepreciation")]
        dmSpecialDepreciation,
        [EnumMember(Value = "dmManualDepreciation")]
        dmManualDepreciation,
        [EnumMember(Value = "dmAccelerated")]
        dmAccelerated
    }

    public enum DirectDebitTypeEnum
    {
        [EnumMember(Value = "ddtCORE")]
        ddtCORE,
        [EnumMember(Value = "ddtB2B")]
        ddtB2B,
        [EnumMember(Value = "ddtCOR1")]
        ddtCOR1
    }

    public enum DiscountGroupBaseObjectEnum
    {
        [EnumMember(Value = "dgboNone")]
        dgboNone,
        [EnumMember(Value = "dgboItemGroups")]
        dgboItemGroups,
        [EnumMember(Value = "dgboItemProperties")]
        dgboItemProperties,
        [EnumMember(Value = "dgboManufacturer")]
        dgboManufacturer,
        [EnumMember(Value = "dgboItems")]
        dgboItems
    }

    public enum DiscountGroupDiscountTypeEnum
    {
        [EnumMember(Value = "dgdt_Fixed")]
        dgdt_Fixed,
        [EnumMember(Value = "dgdt_Variable")]
        dgdt_Variable
    }

    public enum DiscountGroupRelationsEnum
    {
        [EnumMember(Value = "dgrLowestDiscount")]
        dgrLowestDiscount,
        [EnumMember(Value = "dgrHighestDiscount")]
        dgrHighestDiscount,
        [EnumMember(Value = "dgrAverageDiscount")]
        dgrAverageDiscount,
        [EnumMember(Value = "dgrDiscountTotals")]
        dgrDiscountTotals,
        [EnumMember(Value = "dgrMultipliedDiscount")]
        dgrMultipliedDiscount
    }

    public enum DiscountGroupTypeEnum
    {
        [EnumMember(Value = "dgt_AllBPs")]
        dgt_AllBPs,
        [EnumMember(Value = "dgt_CustomerGroup")]
        dgt_CustomerGroup,
        [EnumMember(Value = "dgt_VendorGroup")]
        dgt_VendorGroup,
        [EnumMember(Value = "dgt_SpecificBP")]
        dgt_SpecificBP
    }

    public enum DocumentAuthorizationStatusEnum
    {
        [EnumMember(Value = "dasWithout")]
        dasWithout,
        [EnumMember(Value = "dasPending")]
        dasPending,
        [EnumMember(Value = "dasApproved")]
        dasApproved,
        [EnumMember(Value = "dasRejected")]
        dasRejected,
        [EnumMember(Value = "dasGenerated")]
        dasGenerated,
        [EnumMember(Value = "dasGeneratedbyAuthorizer")]
        dasGeneratedbyAuthorizer,
        [EnumMember(Value = "dasCancelled")]
        dasCancelled
    }

    public enum DocumentDeliveryTypeEnum
    {
        [EnumMember(Value = "ddtNoneSeleted")]
        ddtNoneSeleted,
        [EnumMember(Value = "ddtCreateOnlineDocument")]
        ddtCreateOnlineDocument,
        [EnumMember(Value = "ddtPostToAribaNetwork")]
        ddtPostToAribaNetwork
    }

    public enum DomesticBankAccountValidationEnum
    {
        [EnumMember(Value = "dbavNone")]
        dbavNone,
        [EnumMember(Value = "dbavBelgium")]
        dbavBelgium,
        [EnumMember(Value = "dbavSpain")]
        dbavSpain,
        [EnumMember(Value = "dbavFrance")]
        dbavFrance,
        [EnumMember(Value = "dbavItaly")]
        dbavItaly,
        [EnumMember(Value = "dbavNetherlands")]
        dbavNetherlands,
        [EnumMember(Value = "dbavPortugal")]
        dbavPortugal
    }

    public enum DownPaymentTypeEnum
    {
        [EnumMember(Value = "dptRequest")]
        dptRequest,
        [EnumMember(Value = "dptInvoice")]
        dptInvoice
    }

    public enum DrawingMethodEnum
    {
        [EnumMember(Value = "dmAll")]
        dmAll,
        [EnumMember(Value = "dmNone")]
        dmNone,
        [EnumMember(Value = "dmQuantity")]
        dmQuantity,
        [EnumMember(Value = "dmTotal")]
        dmTotal
    }

    public enum DueDateTypesEnum
    {
        [EnumMember(Value = "ddtAfterTimePeriod")]
        ddtAfterTimePeriod,
        [EnumMember(Value = "ddtByDates")]
        ddtByDates
    }

    public enum DunningLetterTypeEnum
    {
        [EnumMember(Value = "dltDunningLetter1")]
        dltDunningLetter1,
        [EnumMember(Value = "dltDunningLetter2")]
        dltDunningLetter2,
        [EnumMember(Value = "dltDunningLetter3")]
        dltDunningLetter3,
        [EnumMember(Value = "dltDunningLetter4")]
        dltDunningLetter4,
        [EnumMember(Value = "dltDunningLetter5")]
        dltDunningLetter5,
        [EnumMember(Value = "dltDunningLetter6")]
        dltDunningLetter6,
        [EnumMember(Value = "dltDunningLetter7")]
        dltDunningLetter7,
        [EnumMember(Value = "dltDunningLetter8")]
        dltDunningLetter8,
        [EnumMember(Value = "dltDunningLetter9")]
        dltDunningLetter9,
        [EnumMember(Value = "dltDunningLetter10")]
        dltDunningLetter10,
        [EnumMember(Value = "dltDunningALL")]
        dltDunningALL
    }

    public enum ECDPostingTypeEnum
    {
        [EnumMember(Value = "ecdNormal")]
        ecdNormal,
        [EnumMember(Value = "ecdStatement")]
        ecdStatement
    }

    public enum EDocGenerationTypeEnum
    {
        [EnumMember(Value = "edocGenerate")]
        edocGenerate,
        [EnumMember(Value = "edocGenerateLater")]
        edocGenerateLater,
        [EnumMember(Value = "edocNotRelevant")]
        edocNotRelevant
    }

    public enum EDocStatusEnum
    {
        [EnumMember(Value = "edoc_New")]
        edoc_New,
        [EnumMember(Value = "edoc_Pending")]
        edoc_Pending,
        [EnumMember(Value = "edoc_Sent")]
        edoc_Sent,
        [EnumMember(Value = "edoc_Error")]
        edoc_Error,
        [EnumMember(Value = "edoc_Ok")]
        edoc_Ok
    }

    public enum EcmActionStatusEnum
    {
        [EnumMember(Value = "lasNone")]
        lasNone,
        [EnumMember(Value = "lasNew")]
        lasNew,
        [EnumMember(Value = "lasPending")]
        lasPending,
        [EnumMember(Value = "lasError")]
        lasError,
        [EnumMember(Value = "lasOK")]
        lasOK,
        [EnumMember(Value = "lasSent")]
        lasSent,
        [EnumMember(Value = "lasDocError")]
        lasDocError,
        [EnumMember(Value = "lasWaiting")]
        lasWaiting,
        [EnumMember(Value = "lasAuthorized")]
        lasAuthorized,
        [EnumMember(Value = "lasInProcess")]
        lasInProcess,
        [EnumMember(Value = "lasRejected")]
        lasRejected,
        [EnumMember(Value = "lasDenied")]
        lasDenied,
        [EnumMember(Value = "lasCanceled")]
        lasCanceled,
        [EnumMember(Value = "lasAborted")]
        lasAborted,
        [EnumMember(Value = "lasQueued")]
        lasQueued
    }

    public enum EcmActionTypeEnum
    {
        [EnumMember(Value = "latNone")]
        latNone,
        [EnumMember(Value = "latSetup")]
        latSetup,
        [EnumMember(Value = "latReport")]
        latReport,
        [EnumMember(Value = "latDocumentAR")]
        latDocumentAR,
        [EnumMember(Value = "latDocumentAP")]
        latDocumentAP,
        [EnumMember(Value = "latDraft")]
        latDraft,
        [EnumMember(Value = "latOther")]
        latOther,
        [EnumMember(Value = "latSkip")]
        latSkip,
        [EnumMember(Value = "latContingency")]
        latContingency,
        [EnumMember(Value = "latBpCheck")]
        latBpCheck
    }

    public enum ElecCommStatusEnum
    {
        [EnumMember(Value = "ecsApproved")]
        ecsApproved,
        [EnumMember(Value = "ecsPendingApproval")]
        ecsPendingApproval,
        [EnumMember(Value = "ecsRejected")]
        ecsRejected
    }

    public enum EmployeeExemptionUnitEnum
    {
        [EnumMember(Value = "eeu_None")]
        eeu_None,
        [EnumMember(Value = "eeu_Yearly")]
        eeu_Yearly,
        [EnumMember(Value = "eeu_Monthly")]
        eeu_Monthly,
        [EnumMember(Value = "eeu_Weekly")]
        eeu_Weekly,
        [EnumMember(Value = "eeu_Daily")]
        eeu_Daily
    }

    public enum EmployeePaymentMethodEnum
    {
        [EnumMember(Value = "epm_None")]
        epm_None,
        [EnumMember(Value = "epm_BankTransfer")]
        epm_BankTransfer
    }

    public enum EmployeeTransferProcessingStatusEnum
    {
        [EnumMember(Value = "etps_New")]
        etps_New,
        [EnumMember(Value = "etps_Sent")]
        etps_Sent,
        [EnumMember(Value = "etps_Accepted")]
        etps_Accepted,
        [EnumMember(Value = "etps_Error")]
        etps_Error
    }

    public enum EmployeeTransferStatusEnum
    {
        [EnumMember(Value = "ets_New")]
        ets_New,
        [EnumMember(Value = "ets_Processing")]
        ets_Processing,
        [EnumMember(Value = "ets_Sent")]
        ets_Sent,
        [EnumMember(Value = "ets_Received")]
        ets_Received,
        [EnumMember(Value = "ets_Accepted")]
        ets_Accepted,
        [EnumMember(Value = "ets_Error")]
        ets_Error
    }

    public enum EndTypeEnum
    {
        [EnumMember(Value = "etNoEndDate")]
        etNoEndDate,
        [EnumMember(Value = "etByCounter")]
        etByCounter,
        [EnumMember(Value = "etByDate")]
        etByDate
    }

    public enum ExchangeRateSelectEnum
    {
        [EnumMember(Value = "ierFromInovice")]
        ierFromInovice,
        [EnumMember(Value = "ierCurrentRate")]
        ierCurrentRate
    }

    public enum ExternalCallStatusEnum
    {
        [EnumMember(Value = "ecsNew")]
        ecsNew,
        [EnumMember(Value = "ecsInProcess")]
        ecsInProcess,
        [EnumMember(Value = "ecsCompleted")]
        ecsCompleted,
        [EnumMember(Value = "ecsConfirmed")]
        ecsConfirmed,
        [EnumMember(Value = "ecsFailed")]
        ecsFailed
    }

    public enum FolioLetterEnum
    {
        [EnumMember(Value = "fLetterA")]
        fLetterA,
        [EnumMember(Value = "fLetterB")]
        fLetterB,
        [EnumMember(Value = "fLetterC")]
        fLetterC,
        [EnumMember(Value = "fLetterE")]
        fLetterE,
        [EnumMember(Value = "fLetterM")]
        fLetterM,
        [EnumMember(Value = "fLetterR")]
        fLetterR
    }

    public enum FreightTypeEnum
    {
        [EnumMember(Value = "ftShipping")]
        ftShipping,
        [EnumMember(Value = "ftInsurance")]
        ftInsurance,
        [EnumMember(Value = "ftOther")]
        ftOther,
        [EnumMember(Value = "ftSpecial")]
        ftSpecial
    }

    public enum GTSResponseToExceedingEnum
    {
        [EnumMember(Value = "Block")]
        Block,
        [EnumMember(Value = "Split")]
        Split
    }

    public enum GeneratedAssetStatusEnum
    {
        [EnumMember(Value = "gasOpen")]
        gasOpen,
        [EnumMember(Value = "gasClosed")]
        gasClosed
    }

    public enum GetGLAccountByEnum
    {
        [EnumMember(Value = "gglab_General")]
        gglab_General,
        [EnumMember(Value = "gglab_Warehouse")]
        gglab_Warehouse,
        [EnumMember(Value = "gglab_ItemGroup")]
        gglab_ItemGroup
    }

    public enum GovPayCodePeriodicityEnum
    {
        [EnumMember(Value = "gpcpMonth")]
        gpcpMonth,
        [EnumMember(Value = "gpcpQuarter")]
        gpcpQuarter,
        [EnumMember(Value = "gpcpHalfMonth")]
        gpcpHalfMonth,
        [EnumMember(Value = "gpcpTenDays")]
        gpcpTenDays
    }

    public enum GovPayCodeSPEDCategoryEnum
    {
        [EnumMember(Value = "gpcscICMS")]
        gpcscICMS,
        [EnumMember(Value = "gpcscICMSST")]
        gpcscICMSST,
        [EnumMember(Value = "gpcscIPI")]
        gpcscIPI,
        [EnumMember(Value = "gpcscISS")]
        gpcscISS,
        [EnumMember(Value = "gpcscPIS")]
        gpcscPIS,
        [EnumMember(Value = "gpcscCOFINS")]
        gpcscCOFINS,
        [EnumMember(Value = "gpcsPISST")]
        gpcsPISST,
        [EnumMember(Value = "gpcsCONFINSST")]
        gpcsCONFINSST
    }

    public enum GroupingMethodEnum
    {
        [EnumMember(Value = "gmPerInvoice")]
        gmPerInvoice,
        [EnumMember(Value = "gmPerDunningLevel")]
        gmPerDunningLevel,
        [EnumMember(Value = "gmPerBP")]
        gmPerBP
    }

    public enum InstallmentPaymentsPossiblityEnum
    {
        [EnumMember(Value = "ippCr")]
        ippCr,
        [EnumMember(Value = "ippNo")]
        ippNo,
        [EnumMember(Value = "ippRd")]
        ippRd,
        [EnumMember(Value = "ippYes")]
        ippYes
    }

    public enum IntrastatConfigurationEnum
    {
        [EnumMember(Value = "enAdditionalMeasureUnit")]
        enAdditionalMeasureUnit,
        [EnumMember(Value = "enCommodityCodes")]
        enCommodityCodes,
        [EnumMember(Value = "enCustomProcedures")]
        enCustomProcedures,
        [EnumMember(Value = "enIncoterms")]
        enIncoterms,
        [EnumMember(Value = "enNatureOfTransactions")]
        enNatureOfTransactions,
        [EnumMember(Value = "enPortsOfEntryAndExit")]
        enPortsOfEntryAndExit,
        [EnumMember(Value = "enServiceCodes")]
        enServiceCodes,
        [EnumMember(Value = "enStatisticalProcedures")]
        enStatisticalProcedures,
        [EnumMember(Value = "enTransportModes")]
        enTransportModes,
        [EnumMember(Value = "enRegions")]
        enRegions
    }

    public enum InvBaseDocTypeEnum
    {
        [EnumMember(Value = "Default")]
        Default,
        [EnumMember(Value = "Empty")]
        Empty,
        [EnumMember(Value = "PurchaseDeliveryNotes")]
        PurchaseDeliveryNotes,
        [EnumMember(Value = "InventoryGeneralEntry")]
        InventoryGeneralEntry,
        [EnumMember(Value = "WarehouseTransfers")]
        WarehouseTransfers,
        [EnumMember(Value = "InventoryTransferRequest")]
        InventoryTransferRequest
    }

    public enum InventoryAccountTypeEnum
    {
        [EnumMember(Value = "iatExpenses")]
        iatExpenses,
        [EnumMember(Value = "iatRevenues")]
        iatRevenues,
        [EnumMember(Value = "iatExemptIncome")]
        iatExemptIncome,
        [EnumMember(Value = "iatInventory")]
        iatInventory,
        [EnumMember(Value = "iatCost")]
        iatCost,
        [EnumMember(Value = "iatTransfer")]
        iatTransfer,
        [EnumMember(Value = "iatVarience")]
        iatVarience,
        [EnumMember(Value = "iatPriceDifference")]
        iatPriceDifference,
        [EnumMember(Value = "iatNegativeInventoryAdjustment")]
        iatNegativeInventoryAdjustment,
        [EnumMember(Value = "iatDecreasing")]
        iatDecreasing,
        [EnumMember(Value = "iatIncreasing")]
        iatIncreasing,
        [EnumMember(Value = "iatReturning")]
        iatReturning,
        [EnumMember(Value = "iatEURevenues")]
        iatEURevenues,
        [EnumMember(Value = "iatEUExpenses")]
        iatEUExpenses,
        [EnumMember(Value = "iatForeignRevenue")]
        iatForeignRevenue,
        [EnumMember(Value = "iatForeignExpens")]
        iatForeignExpens,
        [EnumMember(Value = "iatPurchase")]
        iatPurchase,
        [EnumMember(Value = "iatPAReturn")]
        iatPAReturn,
        [EnumMember(Value = "iatPurchaseOffset")]
        iatPurchaseOffset,
        [EnumMember(Value = "iatExchangeRateDifferences")]
        iatExchangeRateDifferences,
        [EnumMember(Value = "iatGoodsClearing")]
        iatGoodsClearing,
        [EnumMember(Value = "iatGLDecrease")]
        iatGLDecrease,
        [EnumMember(Value = "iatGLIncrease")]
        iatGLIncrease,
        [EnumMember(Value = "iatWip")]
        iatWip,
        [EnumMember(Value = "iatWipVariance")]
        iatWipVariance,
        [EnumMember(Value = "iatWipOffsetProfitAndLoss")]
        iatWipOffsetProfitAndLoss,
        [EnumMember(Value = "iatInventoryOffsetProfitAndLoss")]
        iatInventoryOffsetProfitAndLoss,
        [EnumMember(Value = "iatStockInflationAdjust")]
        iatStockInflationAdjust,
        [EnumMember(Value = "iatStockInflationOffset")]
        iatStockInflationOffset,
        [EnumMember(Value = "iatCostInflation")]
        iatCostInflation,
        [EnumMember(Value = "iatCostInflationOffset")]
        iatCostInflationOffset,
        [EnumMember(Value = "iatExpenseClearing")]
        iatExpenseClearing,
        [EnumMember(Value = "iatExpenseOffsetting")]
        iatExpenseOffsetting,
        [EnumMember(Value = "iatStockInTransit")]
        iatStockInTransit,
        [EnumMember(Value = "iatShippedGoods")]
        iatShippedGoods,
        [EnumMember(Value = "iatVATInRevenue")]
        iatVATInRevenue,
        [EnumMember(Value = "iatSalesCredit")]
        iatSalesCredit,
        [EnumMember(Value = "iatPurchaseCredit")]
        iatPurchaseCredit,
        [EnumMember(Value = "iatExemptedCredits")]
        iatExemptedCredits,
        [EnumMember(Value = "iatSalesCreditForeign")]
        iatSalesCreditForeign,
        [EnumMember(Value = "iatForeignPurchaseCredit")]
        iatForeignPurchaseCredit,
        [EnumMember(Value = "iatSalesCreditEU")]
        iatSalesCreditEU,
        [EnumMember(Value = "iatEUPurchaseCredit")]
        iatEUPurchaseCredit,
        [EnumMember(Value = "iatPurchaseBalance")]
        iatPurchaseBalance,
        [EnumMember(Value = "iatWHIncomingCenvat")]
        iatWHIncomingCenvat,
        [EnumMember(Value = "iatWHOutgoingCenvat")]
        iatWHOutgoingCenvat,
        [EnumMember(Value = "iatFreeOfChargeSales")]
        iatFreeOfChargeSales,
        [EnumMember(Value = "iatFreeOfChargePurchase")]
        iatFreeOfChargePurchase
    }

    public enum InventoryCycleTypeEnum
    {
        [EnumMember(Value = "ictCylce")]
        ictCylce,
        [EnumMember(Value = "ictMRP")]
        ictMRP
    }

    public enum InventoryOpeningBalancePriceSourceEnum
    {
        [EnumMember(Value = "iobpsByPriceList")]
        iobpsByPriceList,
        [EnumMember(Value = "iobpsLastEvaluatedPrice")]
        iobpsLastEvaluatedPrice,
        [EnumMember(Value = "iobpsItemCost")]
        iobpsItemCost
    }

    public enum InventoryPostingCopyOptionEnum
    {
        [EnumMember(Value = "ipcoNoCountersDiff")]
        ipcoNoCountersDiff,
        [EnumMember(Value = "ipcoIndividual1CountedQuantity")]
        ipcoIndividual1CountedQuantity,
        [EnumMember(Value = "ipcoIndividual2CountedQuantity")]
        ipcoIndividual2CountedQuantity,
        [EnumMember(Value = "ipcoIndividual3CountedQuantity")]
        ipcoIndividual3CountedQuantity,
        [EnumMember(Value = "ipcoIndividual4CountedQuantity")]
        ipcoIndividual4CountedQuantity,
        [EnumMember(Value = "ipcoIndividual5CountedQuantity")]
        ipcoIndividual5CountedQuantity,
        [EnumMember(Value = "ipcoTeamCountedQuantity")]
        ipcoTeamCountedQuantity
    }

    public enum InventoryPostingPriceSourceEnum
    {
        [EnumMember(Value = "ippsByPriceList")]
        ippsByPriceList,
        [EnumMember(Value = "ippsLastEvaluatedPrice")]
        ippsLastEvaluatedPrice,
        [EnumMember(Value = "ippsItemCost")]
        ippsItemCost
    }

    public enum IssuePrimarilyByEnum
    {
        [EnumMember(Value = "ipbSerialAndBatchNumbers")]
        ipbSerialAndBatchNumbers,
        [EnumMember(Value = "ipbBinLocations")]
        ipbBinLocations
    }

    public enum ItemClassEnum
    {
        [EnumMember(Value = "itcService")]
        itcService,
        [EnumMember(Value = "itcMaterial")]
        itcMaterial
    }

    public enum ItemTypeEnum
    {
        [EnumMember(Value = "itItems")]
        itItems,
        [EnumMember(Value = "itLabor")]
        itLabor,
        [EnumMember(Value = "itTravel")]
        itTravel,
        [EnumMember(Value = "itFixedAssets")]
        itFixedAssets
    }

    public enum ItemUoMTypeEnum
    {
        [EnumMember(Value = "iutPurchasing")]
        iutPurchasing,
        [EnumMember(Value = "iutSales")]
        iutSales,
        [EnumMember(Value = "iutInventory")]
        iutInventory
    }

    public enum KPITypeEnum
    {
        [EnumMember(Value = "asSingle")]
        asSingle,
        [EnumMember(Value = "asQuarterly")]
        asQuarterly,
        [EnumMember(Value = "asMonthly")]
        asMonthly,
        [EnumMember(Value = "asMultiple")]
        asMultiple
    }

    public enum LCCostTypeEnum
    {
        [EnumMember(Value = "asFixedCosts")]
        asFixedCosts,
        [EnumMember(Value = "asVariableCosts")]
        asVariableCosts
    }

    public enum LandedCostAllocationByEnum
    {
        [EnumMember(Value = "asCashValueBeforeCustoms")]
        asCashValueBeforeCustoms,
        [EnumMember(Value = "asCashValueAfterCustoms")]
        asCashValueAfterCustoms,
        [EnumMember(Value = "asQuantity")]
        asQuantity,
        [EnumMember(Value = "asWeight")]
        asWeight,
        [EnumMember(Value = "asVolume")]
        asVolume,
        [EnumMember(Value = "asEqual")]
        asEqual
    }

    public enum LandedCostBaseDocumentTypeEnum
    {
        [EnumMember(Value = "asDefault")]
        asDefault,
        [EnumMember(Value = "asEmpty")]
        asEmpty,
        [EnumMember(Value = "asGoodsReceiptPO")]
        asGoodsReceiptPO,
        [EnumMember(Value = "asLandedCosts")]
        asLandedCosts,
        [EnumMember(Value = "asPurchaseInvoice")]
        asPurchaseInvoice
    }

    public enum LandedCostDocStatusEnum
    {
        [EnumMember(Value = "lcOpen")]
        lcOpen,
        [EnumMember(Value = "lcClosed")]
        lcClosed
    }

    public enum LegalDataLineTypeEnum
    {
        [EnumMember(Value = "ldlt_DocumentTotal")]
        ldlt_DocumentTotal,
        [EnumMember(Value = "ldlt_TaxPerLine")]
        ldlt_TaxPerLine,
        [EnumMember(Value = "ldlt_TotalTax")]
        ldlt_TotalTax
    }

    public enum LicenseTypeEnum
    {
        [EnumMember(Value = "lkIdirect")]
        lkIdirect,
        [EnumMember(Value = "lkSOAIndirect")]
        lkSOAIndirect,
        [EnumMember(Value = "lkSOA")]
        lkSOA,
        [EnumMember(Value = "lkB1iIndirect")]
        lkB1iIndirect,
        [EnumMember(Value = "lkB1i")]
        lkB1i
    }

    public enum LicenseUpdateTypeEnum
    {
        [EnumMember(Value = "ultAssign")]
        ultAssign,
        [EnumMember(Value = "ultRemove")]
        ultRemove
    }

    public enum LineStatusTypeEnum
    {
        [EnumMember(Value = "lst_Open")]
        lst_Open,
        [EnumMember(Value = "lst_Closed")]
        lst_Closed
    }

    public enum LineTypeEnum
    {
        [EnumMember(Value = "ltDocument ")]
        ltDocument,
        [EnumMember(Value = "ltRounding")]
        ltRounding,
        [EnumMember(Value = "ltVat")]
        ltVat
    }

    public enum LinkedDocTypeEnum
    {
        [EnumMember(Value = "ldtEmptyLink")]
        ldtEmptyLink,
        [EnumMember(Value = "ldtSalesOpportunitiesLink")]
        ldtSalesOpportunitiesLink,
        [EnumMember(Value = "ldtSalesQuotationsLink")]
        ldtSalesQuotationsLink,
        [EnumMember(Value = "ldtSalesOrdersLink")]
        ldtSalesOrdersLink,
        [EnumMember(Value = "ldtDeliveriesLink")]
        ldtDeliveriesLink,
        [EnumMember(Value = "ldtARInvoicesLink")]
        ldtARInvoicesLink
    }

    public enum MultipleCounterRoleEnum
    {
        [EnumMember(Value = "mcrTeamCounter")]
        mcrTeamCounter,
        [EnumMember(Value = "mcrIndividualCounter")]
        mcrIndividualCounter
    }

    public enum OperationCode347Enum
    {
        [EnumMember(Value = "ocGoodsOrServiciesAcquisitions")]
        ocGoodsOrServiciesAcquisitions,
        [EnumMember(Value = "ocPublicEntitiesAcquisitions")]
        ocPublicEntitiesAcquisitions,
        [EnumMember(Value = "ocTravelAgenciesPurchases")]
        ocTravelAgenciesPurchases,
        [EnumMember(Value = "ocSalesOrServicesRevenues")]
        ocSalesOrServicesRevenues,
        [EnumMember(Value = "ocPublicSubsidies")]
        ocPublicSubsidies,
        [EnumMember(Value = "ocTravelAgenciesSales")]
        ocTravelAgenciesSales
    }

    public enum OperationCodeTypeEnum
    {
        [EnumMember(Value = "octSummaryInvoicesEntry")]
        octSummaryInvoicesEntry,
        [EnumMember(Value = "octSummaryReceiptsEntry")]
        octSummaryReceiptsEntry,
        [EnumMember(Value = "octInvoicewithSeveralVATRates")]
        octInvoicewithSeveralVATRates,
        [EnumMember(Value = "octCorrectionInvoice")]
        octCorrectionInvoice,
        [EnumMember(Value = "octDueVATPendingInvoiceIssuance")]
        octDueVATPendingInvoiceIssuance,
        [EnumMember(Value = "octExpensesIncurredbyTravelAgentforCustomers")]
        octExpensesIncurredbyTravelAgentforCustomers,
        [EnumMember(Value = "octSpecialRegulationforVATGroup")]
        octSpecialRegulationforVATGroup,
        [EnumMember(Value = "octSpecialRegulationforGoldInvestment")]
        octSpecialRegulationforGoldInvestment,
        [EnumMember(Value = "octReverseChargeProcedure")]
        octReverseChargeProcedure,
        [EnumMember(Value = "octUnsummarizedReceipts")]
        octUnsummarizedReceipts,
        [EnumMember(Value = "octIdentificationofErrorTransactions")]
        octIdentificationofErrorTransactions,
        [EnumMember(Value = "octTransactionswithEntrepreneursIssuingReceiptsforAgriculturalCompensation")]
        octTransactionswithEntrepreneursIssuingReceiptsforAgriculturalCompensation,
        [EnumMember(Value = "octServiceInvoicingbyTravelAgenciesonBehalfofThirdParties")]
        octServiceInvoicingbyTravelAgenciesonBehalfofThirdParties,
        [EnumMember(Value = "octBusinessOfficeRental")]
        octBusinessOfficeRental,
        [EnumMember(Value = "octSubsidies")]
        octSubsidies,
        [EnumMember(Value = "octIncomingPaymentsforIndustrialandIntellectualPropertyRights")]
        octIncomingPaymentsforIndustrialandIntellectualPropertyRights,
        [EnumMember(Value = "octInsuranceTransactions")]
        octInsuranceTransactions,
        [EnumMember(Value = "octPurchasesfromTravelAgencies")]
        octPurchasesfromTravelAgencies,
        [EnumMember(Value = "octTransactionsSubjecttoProductionServiceandImportTaxesinCeutaandMelilla")]
        octTransactionsSubjecttoProductionServiceandImportTaxesinCeutaandMelilla
    }

    public enum OpportunityTypeEnum
    {
        [EnumMember(Value = "boOpSales")]
        boOpSales,
        [EnumMember(Value = "boOpPurchasing")]
        boOpPurchasing
    }

    public enum PMDocumentTypeEnum
    {
        [EnumMember(Value = "pmdt_ManualJournalEntry")]
        pmdt_ManualJournalEntry,
        [EnumMember(Value = "pmdt_SalesQuotation")]
        pmdt_SalesQuotation,
        [EnumMember(Value = "pmdt_SalesOrder")]
        pmdt_SalesOrder,
        [EnumMember(Value = "pmdt_Delivery")]
        pmdt_Delivery,
        [EnumMember(Value = "pmdt_Return")]
        pmdt_Return,
        [EnumMember(Value = "pmdt_ARDownPaymentRequest")]
        pmdt_ARDownPaymentRequest,
        [EnumMember(Value = "pmdt_ARDownPaymentInvoice")]
        pmdt_ARDownPaymentInvoice,
        [EnumMember(Value = "pmdt_ARInvoice")]
        pmdt_ARInvoice,
        [EnumMember(Value = "pmdt_ARCreditMemo")]
        pmdt_ARCreditMemo,
        [EnumMember(Value = "pmdt_ARReserveInvoice")]
        pmdt_ARReserveInvoice,
        [EnumMember(Value = "pmdt_PurchaseQuotation")]
        pmdt_PurchaseQuotation,
        [EnumMember(Value = "pmdt_PurchaseOrder")]
        pmdt_PurchaseOrder,
        [EnumMember(Value = "pmdt_GoodsReceiptPO")]
        pmdt_GoodsReceiptPO,
        [EnumMember(Value = "pmdt_GoodsReturn")]
        pmdt_GoodsReturn,
        [EnumMember(Value = "pmdt_APDownPaymentRequest")]
        pmdt_APDownPaymentRequest,
        [EnumMember(Value = "pmdt_APDownPaymentInvoice")]
        pmdt_APDownPaymentInvoice,
        [EnumMember(Value = "pmdt_APInvoice")]
        pmdt_APInvoice,
        [EnumMember(Value = "pmdt_APCreditMemo")]
        pmdt_APCreditMemo,
        [EnumMember(Value = "pmdt_APReserveInvoice")]
        pmdt_APReserveInvoice,
        [EnumMember(Value = "pmdt_ServiceCall")]
        pmdt_ServiceCall,
        [EnumMember(Value = "pmdt_GoodsReceipt")]
        pmdt_GoodsReceipt,
        [EnumMember(Value = "pmdt_GoodsIssue")]
        pmdt_GoodsIssue,
        [EnumMember(Value = "pmdt_ARCorrectionInvoice")]
        pmdt_ARCorrectionInvoice,
        [EnumMember(Value = "pmdt_ARCorrectionInvoiceReversal")]
        pmdt_ARCorrectionInvoiceReversal,
        [EnumMember(Value = "pmdt_APCorrectionInvoice")]
        pmdt_APCorrectionInvoice,
        [EnumMember(Value = "pmdt_APCorrectionInvoiceReversal")]
        pmdt_APCorrectionInvoiceReversal
    }

    public enum PaymentInvoiceTypeEnum
    {
        [EnumMember(Value = "itARInvoice")]
        itARInvoice,
        [EnumMember(Value = "itARDownPaymentInvoice")]
        itARDownPaymentInvoice
    }

    public enum PaymentMeansTypeEnum
    {
        [EnumMember(Value = "pmtNotAssigned")]
        pmtNotAssigned,
        [EnumMember(Value = "pmtChecks")]
        pmtChecks,
        [EnumMember(Value = "pmtBankTransfer")]
        pmtBankTransfer,
        [EnumMember(Value = "pmtCash")]
        pmtCash,
        [EnumMember(Value = "pmtCreditCard")]
        pmtCreditCard
    }

    public enum PaymentRunExportRowTypeEnum
    {
        [EnumMember(Value = "prtGeneral")]
        prtGeneral,
        [EnumMember(Value = "prtPayOnAccount")]
        prtPayOnAccount,
        [EnumMember(Value = "prtPayToAccount")]
        prtPayToAccount
    }

    public enum PaymentsAuthorizationStatusEnum
    {
        [EnumMember(Value = "pasWithout")]
        pasWithout,
        [EnumMember(Value = "pasPending")]
        pasPending,
        [EnumMember(Value = "pasApproved")]
        pasApproved,
        [EnumMember(Value = "pasRejected")]
        pasRejected,
        [EnumMember(Value = "pasGenerated")]
        pasGenerated,
        [EnumMember(Value = "pasGeneratedbyAuthorizer")]
        pasGeneratedbyAuthorizer,
        [EnumMember(Value = "pasCancelled")]
        pasCancelled
    }

    public enum PeriodStatusEnum
    {
        [EnumMember(Value = "ltUnlocked")]
        ltUnlocked,
        [EnumMember(Value = "ltUnlockedExceptSales")]
        ltUnlockedExceptSales,
        [EnumMember(Value = "ltPeriodClosing")]
        ltPeriodClosing,
        [EnumMember(Value = "ltLocked")]
        ltLocked
    }

    public enum PostingMethodEnum
    {
        [EnumMember(Value = "pmGLAccountBankAccount")]
        pmGLAccountBankAccount,
        [EnumMember(Value = "pmBussinessPartnerBankAccount")]
        pmBussinessPartnerBankAccount,
        [EnumMember(Value = "pmInterimAccountBankAccount")]
        pmInterimAccountBankAccount,
        [EnumMember(Value = "pmExternalReconciliation")]
        pmExternalReconciliation,
        [EnumMember(Value = "pmIgnore")]
        pmIgnore
    }

    public enum PostingOfDepreciationEnum
    {
        [EnumMember(Value = "podDirectPosting")]
        podDirectPosting,
        [EnumMember(Value = "podIndirectPosting")]
        podIndirectPosting
    }

    public enum PriceProceedMethodEnum
    {
        [EnumMember(Value = "ppmRemove")]
        ppmRemove,
        [EnumMember(Value = "ppmUpdate")]
        ppmUpdate,
        [EnumMember(Value = "ppmKeepCorresponding")]
        ppmKeepCorresponding,
        [EnumMember(Value = "ppmKeepAll")]
        ppmKeepAll
    }

    public enum PrintOnEnum
    {
        [EnumMember(Value = "poBlankPaper")]
        poBlankPaper,
        [EnumMember(Value = "poDefault")]
        poDefault,
        [EnumMember(Value = "poOverflowBlankPaper")]
        poOverflowBlankPaper,
        [EnumMember(Value = "poOverflowCheckStock")]
        poOverflowCheckStock
    }

    public enum PrintStatusEnum
    {
        [EnumMember(Value = "psNo")]
        psNo,
        [EnumMember(Value = "psYes")]
        psYes,
        [EnumMember(Value = "psAmended")]
        psAmended
    }

    public enum ProductionItemType
    {
        [EnumMember(Value = "pit_Item")]
        pit_Item,
        [EnumMember(Value = "pit_Resource")]
        pit_Resource,
        [EnumMember(Value = "pit_Text")]
        pit_Text
    }

    public enum ProjectStatusTypeEnum
    {
        [EnumMember(Value = "pst_Started")]
        pst_Started,
        [EnumMember(Value = "pst_Paused")]
        pst_Paused,
        [EnumMember(Value = "pst_Stopped")]
        pst_Stopped,
        [EnumMember(Value = "pst_Finished")]
        pst_Finished,
        [EnumMember(Value = "pst_Canceled")]
        pst_Canceled
    }

    public enum ProjectTypeEnum
    {
        [EnumMember(Value = "pt_External")]
        pt_External,
        [EnumMember(Value = "pt_Internal")]
        pt_Internal
    }

    public enum ReceivingBinLocationsMethodEnum
    {
        [EnumMember(Value = "rblmBinLocationCodeOrder")]
        rblmBinLocationCodeOrder,
        [EnumMember(Value = "rblmAlternativeSortCodeOrder")]
        rblmAlternativeSortCodeOrder
    }

    public enum ReceivingUpToMethodEnum
    {
        [EnumMember(Value = "rutmBothMaxQtyAndWeight")]
        rutmBothMaxQtyAndWeight,
        [EnumMember(Value = "rutmMaximumQty")]
        rutmMaximumQty,
        [EnumMember(Value = "rutmMaximumWeight")]
        rutmMaximumWeight
    }

    public enum ReconciliationAccountTypeEnum
    {
        [EnumMember(Value = "rat_GLAccount")]
        rat_GLAccount,
        [EnumMember(Value = "rat_BusinessPartner")]
        rat_BusinessPartner
    }

    public enum RecurrenceDayOfWeekEnum
    {
        [EnumMember(Value = "rdowDay")]
        rdowDay,
        [EnumMember(Value = "rdowWeekDay")]
        rdowWeekDay,
        [EnumMember(Value = "rdowWeekendDay")]
        rdowWeekendDay,
        [EnumMember(Value = "rdowSun")]
        rdowSun,
        [EnumMember(Value = "rdowMon")]
        rdowMon,
        [EnumMember(Value = "rdowTue")]
        rdowTue,
        [EnumMember(Value = "rdowWed")]
        rdowWed,
        [EnumMember(Value = "rdowThu")]
        rdowThu,
        [EnumMember(Value = "rdowFri")]
        rdowFri,
        [EnumMember(Value = "rdowSat")]
        rdowSat
    }

    public enum RecurrencePatternEnum
    {
        [EnumMember(Value = "rpNone")]
        rpNone,
        [EnumMember(Value = "rpDaily")]
        rpDaily,
        [EnumMember(Value = "rpWeekly")]
        rpWeekly,
        [EnumMember(Value = "rpMonthly")]
        rpMonthly,
        [EnumMember(Value = "rpAnnually")]
        rpAnnually
    }

    public enum RecurrenceSequenceEnum
    {
        [EnumMember(Value = "rsFirst")]
        rsFirst,
        [EnumMember(Value = "rsSecond")]
        rsSecond,
        [EnumMember(Value = "rsThird")]
        rsThird,
        [EnumMember(Value = "rsFourth")]
        rsFourth,
        [EnumMember(Value = "rsLast")]
        rsLast
    }

    public enum RepeatOptionEnum
    {
        [EnumMember(Value = "roByDate")]
        roByDate,
        [EnumMember(Value = "roByWeekDay")]
        roByWeekDay
    }

    public enum Report349CodeListEnum
    {
        [EnumMember(Value = "r349cA")]
        r349cA,
        [EnumMember(Value = "r349cE")]
        r349cE,
        [EnumMember(Value = "r349cEmpty")]
        r349cEmpty,
        [EnumMember(Value = "r349cH")]
        r349cH,
        [EnumMember(Value = "r349cI")]
        r349cI,
        [EnumMember(Value = "r349cM")]
        r349cM,
        [EnumMember(Value = "r349cS")]
        r349cS,
        [EnumMember(Value = "r349cT")]
        r349cT
    }

    public enum ReportLayoutCategoryEnum
    {
        [EnumMember(Value = "rlcPLD")]
        rlcPLD,
        [EnumMember(Value = "rlcCrystal")]
        rlcCrystal,
        [EnumMember(Value = "rlcLegalList")]
        rlcLegalList,
        [EnumMember(Value = "rlcUserDefinedType")]
        rlcUserDefinedType
    }

    public enum ResidenceNumberTypeEnum
    {
        [EnumMember(Value = "rntSpanishFiscalID")]
        rntSpanishFiscalID,
        [EnumMember(Value = "rntVATRegistrationNumber")]
        rntVATRegistrationNumber,
        [EnumMember(Value = "rntPassport")]
        rntPassport,
        [EnumMember(Value = "rntFiscalIDIssuedbytheResidenceCountry")]
        rntFiscalIDIssuedbytheResidenceCountry,
        [EnumMember(Value = "rntCertificateofFiscalResidence")]
        rntCertificateofFiscalResidence,
        [EnumMember(Value = "rntOtherDocument")]
        rntOtherDocument
    }

    public enum ResourceAllocationEnum
    {
        [EnumMember(Value = "raOnStartDate")]
        raOnStartDate,
        [EnumMember(Value = "raOnEndDate")]
        raOnEndDate,
        [EnumMember(Value = "raStartDateForwards")]
        raStartDateForwards,
        [EnumMember(Value = "raEndDateBackwards")]
        raEndDateBackwards
    }

    public enum ResourceCapacityActionEnum
    {
        [EnumMember(Value = "rcaUnknown")]
        rcaUnknown,
        [EnumMember(Value = "rcaProductionOrderCreate")]
        rcaProductionOrderCreate,
        [EnumMember(Value = "rcaProductionOrderClose")]
        rcaProductionOrderClose,
        [EnumMember(Value = "rcaProductionOrderReschedule")]
        rcaProductionOrderReschedule,
        [EnumMember(Value = "rcaProductionOrderAddLine")]
        rcaProductionOrderAddLine,
        [EnumMember(Value = "rcaProductionOrderDeleteLine")]
        rcaProductionOrderDeleteLine,
        [EnumMember(Value = "rcaProductionOrderUpdateLine")]
        rcaProductionOrderUpdateLine,
        [EnumMember(Value = "rcaIssueForProductionCreate")]
        rcaIssueForProductionCreate,
        [EnumMember(Value = "rcaReceiptFromProductionCreate")]
        rcaReceiptFromProductionCreate
    }

    public enum ResourceCapacityBaseTypeEnum
    {
        [EnumMember(Value = "rcbtNone")]
        rcbtNone,
        [EnumMember(Value = "rcbtProductionOrder")]
        rcbtProductionOrder
    }

    public enum ResourceCapacityMemoSourceEnum
    {
        [EnumMember(Value = "rcmsUnknown")]
        rcmsUnknown,
        [EnumMember(Value = "rcmsResourceCapacityForm")]
        rcmsResourceCapacityForm,
        [EnumMember(Value = "rcmsSetDailyInternalCapacitiesForm")]
        rcmsSetDailyInternalCapacitiesForm
    }

    public enum ResourceCapacityOwningTypeEnum
    {
        [EnumMember(Value = "rcotNone")]
        rcotNone,
        [EnumMember(Value = "rcotProductionOrder")]
        rcotProductionOrder,
        [EnumMember(Value = "rcotIssueForProduction")]
        rcotIssueForProduction,
        [EnumMember(Value = "rcotReceiptFromProduction")]
        rcotReceiptFromProduction
    }

    public enum ResourceCapacityRevertedTypeEnum
    {
        [EnumMember(Value = "rcrtNone")]
        rcrtNone,
        [EnumMember(Value = "rcrtIssueForProduction")]
        rcrtIssueForProduction
    }

    public enum ResourceCapacitySourceTypeEnum
    {
        [EnumMember(Value = "rcstNone")]
        rcstNone,
        [EnumMember(Value = "rcstProductionOrder")]
        rcstProductionOrder,
        [EnumMember(Value = "rcstIssueForProduction")]
        rcstIssueForProduction,
        [EnumMember(Value = "rcstReceiptFromProduction")]
        rcstReceiptFromProduction
    }

    public enum ResourceCapacityTypeEnum
    {
        [EnumMember(Value = "rctInternal")]
        rctInternal,
        [EnumMember(Value = "rctOrdered")]
        rctOrdered,
        [EnumMember(Value = "rctCommitted")]
        rctCommitted,
        [EnumMember(Value = "rctConsumed")]
        rctConsumed
    }

    public enum ResourceDailyCapacityWeekdayEnum
    {
        [EnumMember(Value = "rdcwFirst")]
        rdcwFirst,
        [EnumMember(Value = "rdcwSecond")]
        rdcwSecond,
        [EnumMember(Value = "rdcwThird")]
        rdcwThird,
        [EnumMember(Value = "rdcwFourth")]
        rdcwFourth,
        [EnumMember(Value = "rdcwFifth")]
        rdcwFifth,
        [EnumMember(Value = "rdcwSixth")]
        rdcwSixth,
        [EnumMember(Value = "rdcwSeventh")]
        rdcwSeventh
    }

    public enum ResourceIssueMethodEnum
    {
        [EnumMember(Value = "rimBackflush")]
        rimBackflush,
        [EnumMember(Value = "rimManual")]
        rimManual
    }

    public enum ResourceTypeEnum
    {
        [EnumMember(Value = "rtMachine")]
        rtMachine,
        [EnumMember(Value = "rtLabor")]
        rtLabor,
        [EnumMember(Value = "rtOther")]
        rtOther
    }

    public enum RetirementMethodEnum
    {
        [EnumMember(Value = "rmGross")]
        rmGross,
        [EnumMember(Value = "rmNet")]
        rmNet
    }

    public enum RetirementPeriodControlEnum
    {
        [EnumMember(Value = "rpcProRataTemporis")]
        rpcProRataTemporis,
        [EnumMember(Value = "rpcHalfYearConvention")]
        rpcHalfYearConvention,
        [EnumMember(Value = "rpcOnlyAfterEndOfUsefulLife")]
        rpcOnlyAfterEndOfUsefulLife
    }

    public enum RetirementProRataTypeEnum
    {
        [EnumMember(Value = "rprtExactlyDailyBase")]
        rprtExactlyDailyBase,
        [EnumMember(Value = "rprtLastDayOfPriorPeriod")]
        rprtLastDayOfPriorPeriod,
        [EnumMember(Value = "rprtLastDayOfCurrentPeriod")]
        rprtLastDayOfCurrentPeriod
    }

    public enum ReturnTypeEnum
    {
        [EnumMember(Value = "rt26Q")]
        rt26Q,
        [EnumMember(Value = "rt27Q")]
        rt27Q
    }

    public enum RiskLevelTypeEnum
    {
        [EnumMember(Value = "rlt_Low")]
        rlt_Low,
        [EnumMember(Value = "rlt_Medium")]
        rlt_Medium,
        [EnumMember(Value = "rlt_High")]
        rlt_High
    }

    public enum RoundingContextEnum
    {
        [EnumMember(Value = "rcSum")]
        rcSum,
        [EnumMember(Value = "rcPrice")]
        rcPrice,
        [EnumMember(Value = "rcRate")]
        rcRate,
        [EnumMember(Value = "rcQuantity")]
        rcQuantity,
        [EnumMember(Value = "rcMeasure")]
        rcMeasure,
        [EnumMember(Value = "rcPercent")]
        rcPercent,
        [EnumMember(Value = "rcTax")]
        rcTax,
        [EnumMember(Value = "rcTaxPerGroup")]
        rcTaxPerGroup,
        [EnumMember(Value = "rcBudgetSum")]
        rcBudgetSum,
        [EnumMember(Value = "rcPriceListSum")]
        rcPriceListSum,
        [EnumMember(Value = "rcRealAmountInPayment")]
        rcRealAmountInPayment,
        [EnumMember(Value = "rcStockSumRoundUp")]
        rcStockSumRoundUp,
        [EnumMember(Value = "rcDocHeaderTotal")]
        rcDocHeaderTotal,
        [EnumMember(Value = "rcVatReportAmount")]
        rcVatReportAmount,
        [EnumMember(Value = "rcLineGrossTotal")]
        rcLineGrossTotal,
        [EnumMember(Value = "rcExpenseTotal")]
        rcExpenseTotal,
        [EnumMember(Value = "rcWTax")]
        rcWTax,
        [EnumMember(Value = "rcBASCode")]
        rcBASCode,
        [EnumMember(Value = "rcTaxForPrice")]
        rcTaxForPrice
    }

    public enum RoundingSysEnum
    {
        [EnumMember(Value = "rsNoRounding")]
        rsNoRounding,
        [EnumMember(Value = "rsRoundToFiveHundredth")]
        rsRoundToFiveHundredth,
        [EnumMember(Value = "rsRoundToOne")]
        rsRoundToOne,
        [EnumMember(Value = "rsRoundToTen")]
        rsRoundToTen,
        [EnumMember(Value = "rsRoundToTenHundredth")]
        rsRoundToTenHundredth
    }

    public enum RoundingTypeEnum
    {
        [EnumMember(Value = "rt_TruncatedAU")]
        rt_TruncatedAU,
        [EnumMember(Value = "rt_CommercialValues")]
        rt_CommercialValues,
        [EnumMember(Value = "rt_NoRounding")]
        rt_NoRounding
    }

    public enum SEPASequenceTypeEnum
    {
        [EnumMember(Value = "sstOOFF")]
        sstOOFF,
        [EnumMember(Value = "sstFRST")]
        sstFRST,
        [EnumMember(Value = "sstRCUR")]
        sstRCUR,
        [EnumMember(Value = "sstFNAL")]
        sstFNAL
    }

    public enum SPEDContabilAccountPurposeCode
    {
        [EnumMember(Value = "spedContasDeAtivo")]
        spedContasDeAtivo,
        [EnumMember(Value = "spedContasDePassivo")]
        spedContasDePassivo,
        [EnumMember(Value = "spedPatrimonioLiquido")]
        spedPatrimonioLiquido,
        [EnumMember(Value = "spedContasDeResultado")]
        spedContasDeResultado,
        [EnumMember(Value = "spedContasDeCompensacao")]
        spedContasDeCompensacao,
        [EnumMember(Value = "spedOutras")]
        spedOutras
    }

    public enum SPEDContabilQualificationCodeEnum
    {
        [EnumMember(Value = "spedNA")]
        spedNA,
        [EnumMember(Value = "spedDiretor")]
        spedDiretor,
        [EnumMember(Value = "spedConselheiroDeAdministracao")]
        spedConselheiroDeAdministracao,
        [EnumMember(Value = "spedAdministrador")]
        spedAdministrador,
        [EnumMember(Value = "spedAdministradorDoGrupo")]
        spedAdministradorDoGrupo,
        [EnumMember(Value = "spedAdministradorDeSociedadeFiliada")]
        spedAdministradorDeSociedadeFiliada,
        [EnumMember(Value = "spedAdministradorJudicialPessoaFisica")]
        spedAdministradorJudicialPessoaFisica,
        [EnumMember(Value = "spedAdministradorJudicialPessoaJuridicaProfissionalResponsavel")]
        spedAdministradorJudicialPessoaJuridicaProfissionalResponsavel,
        [EnumMember(Value = "spedAdministradorJudicialGestor")]
        spedAdministradorJudicialGestor,
        [EnumMember(Value = "spedGestorJudicial")]
        spedGestorJudicial,
        [EnumMember(Value = "spedProcurador")]
        spedProcurador,
        [EnumMember(Value = "spedInventariante")]
        spedInventariante,
        [EnumMember(Value = "spedLiquidante")]
        spedLiquidante,
        [EnumMember(Value = "spedInterventor")]
        spedInterventor,
        [EnumMember(Value = "spedEmpresario")]
        spedEmpresario,
        [EnumMember(Value = "spedContador")]
        spedContador,
        [EnumMember(Value = "spedOutros")]
        spedOutros
    }

    public enum ServiceTypeEnum
    {
        [EnumMember(Value = "srvcSales")]
        srvcSales,
        [EnumMember(Value = "srvcPurchasing")]
        srvcPurchasing
    }

    public enum Services
    {
        [EnumMember(Value = "MessagesService")]
        MessagesService,
        [EnumMember(Value = "CompanyService")]
        CompanyService,
        [EnumMember(Value = "SeriesService")]
        SeriesService,
        [EnumMember(Value = "ReportLayoutsService")]
        ReportLayoutsService,
        [EnumMember(Value = "FormPreferencesService")]
        FormPreferencesService,
        [EnumMember(Value = "AccountsService")]
        AccountsService,
        [EnumMember(Value = "BusinessPartnersService")]
        BusinessPartnersService
    }

    public enum ShaamGroupEnum
    {
        [EnumMember(Value = "sgServicesAndAsset")]
        sgServicesAndAsset,
        [EnumMember(Value = "sgAgriculturalProducts")]
        sgAgriculturalProducts,
        [EnumMember(Value = "sgInsuranceCommissions")]
        sgInsuranceCommissions,
        [EnumMember(Value = "sgWHTaxInstructions")]
        sgWHTaxInstructions,
        [EnumMember(Value = "sgInterestExchangeRateDiffs")]
        sgInterestExchangeRateDiffs
    }

    public enum SortOrderEnum
    {
        [EnumMember(Value = "soAscending")]
        soAscending,
        [EnumMember(Value = "soDescending")]
        soDescending
    }

    public enum SourceCurrencyEnum
    {
        [EnumMember(Value = "sc_PrimaryCurrency")]
        sc_PrimaryCurrency,
        [EnumMember(Value = "sc_AdditionalCurrency1")]
        sc_AdditionalCurrency1,
        [EnumMember(Value = "sc_AdditionalCurrency2")]
        sc_AdditionalCurrency2
    }

    public enum SpecialDepreciationCalculationMethodEnum
    {
        [EnumMember(Value = "spcmAdditional")]
        spcmAdditional,
        [EnumMember(Value = "spcmAlternative")]
        spcmAlternative
    }

    public enum SpecialDepreciationMaximumFlagEnum
    {
        [EnumMember(Value = "spmfPercentage")]
        spmfPercentage,
        [EnumMember(Value = "spmfAmount")]
        spmfAmount
    }

    public enum SpecialProductTypeEnum
    {
        [EnumMember(Value = "sptMT")]
        sptMT,
        [EnumMember(Value = "sptIO")]
        sptIO
    }

    public enum StageDepTypeEnum
    {
        [EnumMember(Value = "sdt_Project")]
        sdt_Project,
        [EnumMember(Value = "sdt_Subproject")]
        sdt_Subproject
    }

    public enum StockTransferAuthorizationStatusEnum
    {
        [EnumMember(Value = "sasWithout")]
        sasWithout,
        [EnumMember(Value = "sasPending")]
        sasPending,
        [EnumMember(Value = "sasApproved")]
        sasApproved,
        [EnumMember(Value = "sasRejected")]
        sasRejected,
        [EnumMember(Value = "sasGenerated")]
        sasGenerated,
        [EnumMember(Value = "sasGeneratedbyAuthorizer")]
        sasGeneratedbyAuthorizer,
        [EnumMember(Value = "sasCancelled")]
        sasCancelled
    }

    public enum StraightLineCalculationMethodEnum
    {
        [EnumMember(Value = "slcmAuquisitionValueDividedByTotalUsefulLife")]
        slcmAuquisitionValueDividedByTotalUsefulLife,
        [EnumMember(Value = "slcmPercentageOfAcquisitionValue")]
        slcmPercentageOfAcquisitionValue,
        [EnumMember(Value = "slcmNetBookValueDividedByRemainingLife")]
        slcmNetBookValueDividedByRemainingLife
    }

    public enum StraightLinePeriodControlDepreciationPeriodsEnum
    {
        [EnumMember(Value = "slpcdpStandard")]
        slpcdpStandard,
        [EnumMember(Value = "slpcdpIndividual")]
        slpcdpIndividual,
        [EnumMember(Value = "slpcdpIndividualUsage")]
        slpcdpIndividualUsage
    }

    public enum SubprojectStatusTypeEnum
    {
        [EnumMember(Value = "sst_Open")]
        sst_Open,
        [EnumMember(Value = "sst_Closed")]
        sst_Closed
    }

    public enum SubsequentAcquisitionPeriodControlEnum
    {
        [EnumMember(Value = "sapcProRataTemporis")]
        sapcProRataTemporis,
        [EnumMember(Value = "sapcHalfYearConvention")]
        sapcHalfYearConvention,
        [EnumMember(Value = "sapcFullYear")]
        sapcFullYear
    }

    public enum SubsequentAcquisitionProRataTypeEnum
    {
        [EnumMember(Value = "saprtExactlyDailyBase")]
        saprtExactlyDailyBase,
        [EnumMember(Value = "saprtFirstDayOfCurrentPeriod")]
        saprtFirstDayOfCurrentPeriod,
        [EnumMember(Value = "saprtFirstDayOfNextPeriod")]
        saprtFirstDayOfNextPeriod
    }

    public enum TargetGroupTypeEnum
    {
        [EnumMember(Value = "tgtCustomer")]
        tgtCustomer,
        [EnumMember(Value = "tgtVendor")]
        tgtVendor
    }

    public enum TargetGroupsDetailStatusEnum
    {
        [EnumMember(Value = "tdsActive")]
        tdsActive,
        [EnumMember(Value = "tdsInactive")]
        tdsInactive
    }

    public enum TaxCalcSysEnum
    {
        [EnumMember(Value = "PreconfiguredFormulaWithJurisdictionSupport")]
        PreconfiguredFormulaWithJurisdictionSupport,
        [EnumMember(Value = "UserDefinedFormula")]
        UserDefinedFormula,
        [EnumMember(Value = "PreconfiguredFormula")]
        PreconfiguredFormula
    }

    public enum TaxCodeDeterminationTCDByUsageTypeEnum
    {
        [EnumMember(Value = "tcdbutDefaultSales")]
        tcdbutDefaultSales,
        [EnumMember(Value = "tcdbutDefaultPurchase")]
        tcdbutDefaultPurchase,
        [EnumMember(Value = "tcdbutLine")]
        tcdbutLine
    }

    public enum TaxCodeDeterminationTCDDefaultWTTypeEnum
    {
        [EnumMember(Value = "tcddwttDefaultSales")]
        tcddwttDefaultSales,
        [EnumMember(Value = "tcddwttDefaultPurchase")]
        tcddwttDefaultPurchase,
        [EnumMember(Value = "tcddwttLine")]
        tcddwttLine
    }

    public enum TaxCodeDeterminationTCDTypeEnum
    {
        [EnumMember(Value = "tcdtMaterialItem")]
        tcdtMaterialItem,
        [EnumMember(Value = "tcdtServiceItem")]
        tcdtServiceItem,
        [EnumMember(Value = "tcdtServiceDocument")]
        tcdtServiceDocument,
        [EnumMember(Value = "tcdtWithholdingTax")]
        tcdtWithholdingTax
    }

    public enum TaxInvoiceReportLineTypeEnum
    {
        [EnumMember(Value = "LineOfBusinessPlace")]
        LineOfBusinessPlace,
        [EnumMember(Value = "LineOfBusinessPartner")]
        LineOfBusinessPartner,
        [EnumMember(Value = "LineOfDocument")]
        LineOfDocument,
        [EnumMember(Value = "LineOfItem")]
        LineOfItem
    }

    public enum TaxInvoiceReportNTSApprovedEnum
    {
        [EnumMember(Value = "NotApproved")]
        NotApproved,
        [EnumMember(Value = "Approved")]
        Approved
    }

    public enum TaxRateDeterminationEnum
    {
        [EnumMember(Value = "trd_PostingDate")]
        trd_PostingDate,
        [EnumMember(Value = "trd_DocumentDate")]
        trd_DocumentDate
    }

    public enum TaxReportFilterApArDocumentType
    {
        [EnumMember(Value = "trfadt_APDocuments")]
        trfadt_APDocuments,
        [EnumMember(Value = "trfadt_ARDocuments")]
        trfadt_ARDocuments
    }

    public enum TaxReportFilterDeclarationType
    {
        [EnumMember(Value = "trfdt_Original")]
        trfdt_Original,
        [EnumMember(Value = "trfdt_Substitute")]
        trfdt_Substitute,
        [EnumMember(Value = "trfdt_Complementary")]
        trfdt_Complementary
    }

    public enum TaxReportFilterDocumentType
    {
        [EnumMember(Value = "trfdt_ARInvoices")]
        trfdt_ARInvoices,
        [EnumMember(Value = "trfdt_ARCreditMemos")]
        trfdt_ARCreditMemos,
        [EnumMember(Value = "trfdt_APInvoices")]
        trfdt_APInvoices,
        [EnumMember(Value = "trfdt_APCreditMemos")]
        trfdt_APCreditMemos,
        [EnumMember(Value = "trfdt_IncomingPayments")]
        trfdt_IncomingPayments,
        [EnumMember(Value = "trfdt_JournalEntries")]
        trfdt_JournalEntries,
        [EnumMember(Value = "trfdt_OutgoingPayments")]
        trfdt_OutgoingPayments,
        [EnumMember(Value = "trfdt_ChecksforPayment")]
        trfdt_ChecksforPayment,
        [EnumMember(Value = "trfdt_InventoryTransfers")]
        trfdt_InventoryTransfers,
        [EnumMember(Value = "trfdt_ARDownPayment")]
        trfdt_ARDownPayment,
        [EnumMember(Value = "trfdt_APDownPayment")]
        trfdt_APDownPayment
    }

    public enum TaxReportFilterPeriod
    {
        [EnumMember(Value = "trfP_Quarter")]
        trfP_Quarter,
        [EnumMember(Value = "trfP_Year")]
        trfP_Year,
        [EnumMember(Value = "trfP_Month")]
        trfP_Month,
        [EnumMember(Value = "trfP_NULL")]
        trfP_NULL
    }

    public enum TaxReportFilterQuarterOrDates
    {
        [EnumMember(Value = "trfqd_Interval")]
        trfqd_Interval,
        [EnumMember(Value = "trfqd_Date")]
        trfqd_Date
    }

    public enum TaxReportFilterReportLayoutType
    {
        [EnumMember(Value = "trfrlt_RegisterBookLayout")]
        trfrlt_RegisterBookLayout,
        [EnumMember(Value = "trfrlt_DeclarationLayout")]
        trfrlt_DeclarationLayout
    }

    public enum TaxReportFilterType
    {
        [EnumMember(Value = "trft_TaxReport")]
        trft_TaxReport,
        [EnumMember(Value = "trft_WTReport")]
        trft_WTReport,
        [EnumMember(Value = "trft_Report347")]
        trft_Report347,
        [EnumMember(Value = "trft_Report349")]
        trft_Report349,
        [EnumMember(Value = "trft_ReconciliationReport")]
        trft_ReconciliationReport,
        [EnumMember(Value = "trft_StampTax")]
        trft_StampTax,
        [EnumMember(Value = "trft_SalesReport")]
        trft_SalesReport,
        [EnumMember(Value = "trft_None")]
        trft_None,
        [EnumMember(Value = "trft_BoxReport")]
        trft_BoxReport,
        [EnumMember(Value = "trft_AppendixOP")]
        trft_AppendixOP,
        [EnumMember(Value = "trft_AnnualSalesReport")]
        trft_AnnualSalesReport,
        [EnumMember(Value = "trft_VATRefundReport")]
        trft_VATRefundReport
    }

    public enum TaxTypeBlackListEnum
    {
        [EnumMember(Value = "ttblExcluded")]
        ttblExcluded,
        [EnumMember(Value = "ttblExempt")]
        ttblExempt,
        [EnumMember(Value = "ttblNonSubject")]
        ttblNonSubject,
        [EnumMember(Value = "ttblNotTaxable")]
        ttblNotTaxable,
        [EnumMember(Value = "ttblTaxable")]
        ttblTaxable
    }

    public enum ThreatLevelEnum
    {
        [EnumMember(Value = "tlLow")]
        tlLow,
        [EnumMember(Value = "tlMedium")]
        tlMedium,
        [EnumMember(Value = "tlHigh")]
        tlHigh
    }

    public enum TimeSheetTypeEnum
    {
        [EnumMember(Value = "tsh_Employee")]
        tsh_Employee,
        [EnumMember(Value = "tsh_User")]
        tsh_User,
        [EnumMember(Value = "tsh_Other")]
        tsh_Other
    }

    public enum TransTypesEnum
    {
        [EnumMember(Value = "ttAllTransactions")]
        ttAllTransactions,
        [EnumMember(Value = "ttOpeningBalance")]
        ttOpeningBalance,
        [EnumMember(Value = "ttClosingBalance")]
        ttClosingBalance,
        [EnumMember(Value = "ttARInvoice")]
        ttARInvoice,
        [EnumMember(Value = "ttARCredItnote")]
        ttARCredItnote,
        [EnumMember(Value = "ttDelivery")]
        ttDelivery,
        [EnumMember(Value = "ttReturn")]
        ttReturn,
        [EnumMember(Value = "ttAPInvoice")]
        ttAPInvoice,
        [EnumMember(Value = "ttAPCreditNote")]
        ttAPCreditNote,
        [EnumMember(Value = "ttPurchaseDeliveryNote")]
        ttPurchaseDeliveryNote,
        [EnumMember(Value = "ttPurchaseReturn")]
        ttPurchaseReturn,
        [EnumMember(Value = "ttReceipt")]
        ttReceipt,
        [EnumMember(Value = "ttDeposit")]
        ttDeposit,
        [EnumMember(Value = "ttJournalEntry")]
        ttJournalEntry,
        [EnumMember(Value = "ttVendorPayment")]
        ttVendorPayment,
        [EnumMember(Value = "ttChequesForPayment")]
        ttChequesForPayment,
        [EnumMember(Value = "ttStockList")]
        ttStockList,
        [EnumMember(Value = "ttGeneralReceiptToStock")]
        ttGeneralReceiptToStock,
        [EnumMember(Value = "ttGeneralReleaseFromStock")]
        ttGeneralReleaseFromStock,
        [EnumMember(Value = "ttTransferBetweenWarehouses")]
        ttTransferBetweenWarehouses,
        [EnumMember(Value = "ttWorkInstructions")]
        ttWorkInstructions,
        [EnumMember(Value = "ttLandedCosts")]
        ttLandedCosts,
        [EnumMember(Value = "ttDeferredDeposit")]
        ttDeferredDeposit,
        [EnumMember(Value = "ttCorrectionInvoice")]
        ttCorrectionInvoice,
        [EnumMember(Value = "ttInventoryValuation")]
        ttInventoryValuation,
        [EnumMember(Value = "ttAPCorrectionInvoice")]
        ttAPCorrectionInvoice,
        [EnumMember(Value = "ttAPCorrectionInvoiceReversal")]
        ttAPCorrectionInvoiceReversal,
        [EnumMember(Value = "ttARCorrectionInvoice")]
        ttARCorrectionInvoice,
        [EnumMember(Value = "ttARCorrectionInvoiceReversal")]
        ttARCorrectionInvoiceReversal,
        [EnumMember(Value = "ttBoETransaction")]
        ttBoETransaction,
        [EnumMember(Value = "ttProductionOrder")]
        ttProductionOrder,
        [EnumMember(Value = "ttDownPayment")]
        ttDownPayment,
        [EnumMember(Value = "ttPurchaseDownPayment")]
        ttPurchaseDownPayment,
        [EnumMember(Value = "ttInternalReconciliation")]
        ttInternalReconciliation
    }

    public enum TransferSourcePeriodControlEnum
    {
        [EnumMember(Value = "tspcProRataTemporis")]
        tspcProRataTemporis
    }

    public enum TransferSourceProRataTypeEnum
    {
        [EnumMember(Value = "tsprtExactlyDailyBase")]
        tsprtExactlyDailyBase,
        [EnumMember(Value = "tsprtLastDayOfPriorPeriod")]
        tsprtLastDayOfPriorPeriod,
        [EnumMember(Value = "tsprtLastDayofCurrentPeriod")]
        tsprtLastDayofCurrentPeriod
    }

    public enum TransferTargetPeriodControlEnum
    {
        [EnumMember(Value = "ttpcProRataTemporis")]
        ttpcProRataTemporis
    }

    public enum TransferTargetProRataTypeEnum
    {
        [EnumMember(Value = "ttprtExactlyDailyBase")]
        ttprtExactlyDailyBase,
        [EnumMember(Value = "ttprtFirstDayOfCurrentPeriod")]
        ttprtFirstDayOfCurrentPeriod,
        [EnumMember(Value = "ttprtFirstDayOfNextPeriod")]
        ttprtFirstDayOfNextPeriod
    }

    public enum TranslationCategoryEnum
    {
        [EnumMember(Value = "asCRReport")]
        asCRReport,
        [EnumMember(Value = "asMenuItem")]
        asMenuItem,
        [EnumMember(Value = "asEFMItem")]
        asEFMItem
    }

    public enum TypeOfAdvancedRulesEnum
    {
        [EnumMember(Value = "toarGeneral")]
        toarGeneral,
        [EnumMember(Value = "toarWarehouse")]
        toarWarehouse,
        [EnumMember(Value = "toarItemGroup")]
        toarItemGroup
    }

    public enum TypeOfOperationEnum
    {
        [EnumMember(Value = "tooProfessionalServices")]
        tooProfessionalServices,
        [EnumMember(Value = "tooRentingAssets")]
        tooRentingAssets,
        [EnumMember(Value = "tooOthers")]
        tooOthers
    }

    public enum UserActionTypeEnum
    {
        [EnumMember(Value = "actionLogin")]
        actionLogin,
        [EnumMember(Value = "actionLoginFail")]
        actionLoginFail,
        [EnumMember(Value = "actionLogoff")]
        actionLogoff,
        [EnumMember(Value = "actionCreateUser")]
        actionCreateUser,
        [EnumMember(Value = "actionRemoveUser")]
        actionRemoveUser,
        [EnumMember(Value = "actionSelectSU")]
        actionSelectSU,
        [EnumMember(Value = "actionDeselectSU")]
        actionDeselectSU,
        [EnumMember(Value = "actionLock")]
        actionLock,
        [EnumMember(Value = "actionUnlock")]
        actionUnlock,
        [EnumMember(Value = "actionChPasswd")]
        actionChPasswd,
        [EnumMember(Value = "actionUnlockFail")]
        actionUnlockFail
    }

    public enum UserMenuItemTypeEnum
    {
        [EnumMember(Value = "umitForm")]
        umitForm,
        [EnumMember(Value = "umitQuery")]
        umitQuery,
        [EnumMember(Value = "umitFolder")]
        umitFolder,
        [EnumMember(Value = "umitReport")]
        umitReport,
        [EnumMember(Value = "umitLink")]
        umitLink
    }

    public enum UserQueryTypeEnum
    {
        [EnumMember(Value = "uqtRegular")]
        uqtRegular,
        [EnumMember(Value = "uqtWizard")]
        uqtWizard,
        [EnumMember(Value = "uqtGenerator")]
        uqtGenerator,
        [EnumMember(Value = "uqtStoredProcedure")]
        uqtStoredProcedure
    }

    public enum VatGroupsTaxRegionEnum
    {
        [EnumMember(Value = "vgtrPT")]
        vgtrPT,
        [EnumMember(Value = "vgtrPT_AC")]
        vgtrPT_AC,
        [EnumMember(Value = "vgtrPT_MA")]
        vgtrPT_MA
    }

    public enum WTDDetailType
    {
        [EnumMember(Value = "Allowed")]
        Allowed,
        [EnumMember(Value = "SpecialRate")]
        SpecialRate,
        [EnumMember(Value = "Exemption")]
        Exemption
    }

    public enum WithholdingTaxCodeBaseTypeEnum
    {
        [EnumMember(Value = "wtcbt_Gross")]
        wtcbt_Gross,
        [EnumMember(Value = "wtcbt_Net")]
        wtcbt_Net,
        [EnumMember(Value = "wtcbt_VAT")]
        wtcbt_VAT
    }

    public enum WithholdingTaxCodeCategoryEnum
    {
        [EnumMember(Value = "wtcc_Invoice")]
        wtcc_Invoice,
        [EnumMember(Value = "wtcc_Payment")]
        wtcc_Payment
    }

    public enum WithholdingTypeEnum
    {
        [EnumMember(Value = "wt_VatWithholding")]
        wt_VatWithholding,
        [EnumMember(Value = "wt_IncomeTaxWithholding")]
        wt_IncomeTaxWithholding
    }

    public class ChartOfAccount
    {
        public string Code { get; set; }
        public string Name { get; set; }
        private decimal? _Balance;
        public decimal Balance
        {
            get { return _Balance.Value; }
            set { _Balance = value; }
        }
        public bool ShouldSerializeBalance()
        {
            return (_Balance.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CashAccount;
        public SAPB1.BoYesNoEnum CashAccount
        {
            get { return _CashAccount.Value; }
            set { _CashAccount = value; }
        }
        public bool ShouldSerializeCashAccount()
        {
            return (_CashAccount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BudgetAccount;
        public SAPB1.BoYesNoEnum BudgetAccount
        {
            get { return _BudgetAccount.Value; }
            set { _BudgetAccount = value; }
        }
        public bool ShouldSerializeBudgetAccount()
        {
            return (_BudgetAccount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ActiveAccount;
        public SAPB1.BoYesNoEnum ActiveAccount
        {
            get { return _ActiveAccount.Value; }
            set { _ActiveAccount = value; }
        }
        public bool ShouldSerializeActiveAccount()
        {
            return (_ActiveAccount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PrimaryAccount;
        public SAPB1.BoYesNoEnum PrimaryAccount
        {
            get { return _PrimaryAccount.Value; }
            set { _PrimaryAccount = value; }
        }
        public bool ShouldSerializePrimaryAccount()
        {
            return (_PrimaryAccount.HasValue);
        }

        private int? _AccountLevel;
        public int AccountLevel
        {
            get { return _AccountLevel.Value; }
            set { _AccountLevel = value; }
        }
        public bool ShouldSerializeAccountLevel()
        {
            return (_AccountLevel.HasValue);
        }

        public string DataExportCode { get; set; }
        public string FatherAccountKey { get; set; }
        public string ExternalCode { get; set; }
        private SAPB1.BoYesNoEnum? _RateConversion;
        public SAPB1.BoYesNoEnum RateConversion
        {
            get { return _RateConversion.Value; }
            set { _RateConversion = value; }
        }
        public bool ShouldSerializeRateConversion()
        {
            return (_RateConversion.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TaxLiableAccount;
        public SAPB1.BoYesNoEnum TaxLiableAccount
        {
            get { return _TaxLiableAccount.Value; }
            set { _TaxLiableAccount = value; }
        }
        public bool ShouldSerializeTaxLiableAccount()
        {
            return (_TaxLiableAccount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TaxExemptAccount;
        public SAPB1.BoYesNoEnum TaxExemptAccount
        {
            get { return _TaxExemptAccount.Value; }
            set { _TaxExemptAccount = value; }
        }
        public bool ShouldSerializeTaxExemptAccount()
        {
            return (_TaxExemptAccount.HasValue);
        }

        private int? _ExternalReconNo;
        public int ExternalReconNo
        {
            get { return _ExternalReconNo.Value; }
            set { _ExternalReconNo = value; }
        }
        public bool ShouldSerializeExternalReconNo()
        {
            return (_ExternalReconNo.HasValue);
        }

        private int? _InternalReconNo;
        public int InternalReconNo
        {
            get { return _InternalReconNo.Value; }
            set { _InternalReconNo = value; }
        }
        public bool ShouldSerializeInternalReconNo()
        {
            return (_InternalReconNo.HasValue);
        }

        private SAPB1.BoAccountTypes? _AccountType;
        public SAPB1.BoAccountTypes AccountType
        {
            get { return _AccountType.Value; }
            set { _AccountType = value; }
        }
        public bool ShouldSerializeAccountType()
        {
            return (_AccountType.HasValue);
        }

        public string AcctCurrency { get; set; }
        private decimal? _Balance_syscurr;
        public decimal Balance_syscurr
        {
            get { return _Balance_syscurr.Value; }
            set { _Balance_syscurr = value; }
        }
        public bool ShouldSerializeBalance_syscurr()
        {
            return (_Balance_syscurr.HasValue);
        }

        private decimal? _Balance_FrgnCurr;
        public decimal Balance_FrgnCurr
        {
            get { return _Balance_FrgnCurr.Value; }
            set { _Balance_FrgnCurr = value; }
        }
        public bool ShouldSerializeBalance_FrgnCurr()
        {
            return (_Balance_FrgnCurr.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Protected;
        public SAPB1.BoYesNoEnum Protected
        {
            get { return _Protected.Value; }
            set { _Protected = value; }
        }
        public bool ShouldSerializeProtected()
        {
            return (_Protected.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReconciledAccount;
        public SAPB1.BoYesNoEnum ReconciledAccount
        {
            get { return _ReconciledAccount.Value; }
            set { _ReconciledAccount = value; }
        }
        public bool ShouldSerializeReconciledAccount()
        {
            return (_ReconciledAccount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _LiableForAdvances;
        public SAPB1.BoYesNoEnum LiableForAdvances
        {
            get { return _LiableForAdvances.Value; }
            set { _LiableForAdvances = value; }
        }
        public bool ShouldSerializeLiableForAdvances()
        {
            return (_LiableForAdvances.HasValue);
        }

        public string ForeignName { get; set; }
        public string Details { get; set; }
        public string ProjectCode { get; set; }
        private SAPB1.BoYesNoEnum? _RevaluationCoordinated;
        public SAPB1.BoYesNoEnum RevaluationCoordinated
        {
            get { return _RevaluationCoordinated.Value; }
            set { _RevaluationCoordinated = value; }
        }
        public bool ShouldSerializeRevaluationCoordinated()
        {
            return (_RevaluationCoordinated.HasValue);
        }

        private SAPB1.BoYesNoEnum? _LockManualTransaction;
        public SAPB1.BoYesNoEnum LockManualTransaction
        {
            get { return _LockManualTransaction.Value; }
            set { _LockManualTransaction = value; }
        }
        public bool ShouldSerializeLockManualTransaction()
        {
            return (_LockManualTransaction.HasValue);
        }

        public string FormatCode { get; set; }
        private SAPB1.BoYesNoEnum? _AllowChangeVatGroup;
        public SAPB1.BoYesNoEnum AllowChangeVatGroup
        {
            get { return _AllowChangeVatGroup.Value; }
            set { _AllowChangeVatGroup = value; }
        }
        public bool ShouldSerializeAllowChangeVatGroup()
        {
            return (_AllowChangeVatGroup.HasValue);
        }

        public string DefaultVatGroup { get; set; }
        private int? _Category;
        public int Category
        {
            get { return _Category.Value; }
            set { _Category = value; }
        }
        public bool ShouldSerializeCategory()
        {
            return (_Category.HasValue);
        }

        public string TransactionCode { get; set; }
        private SAPB1.BoYesNoEnum? _LoadingType;
        public SAPB1.BoYesNoEnum LoadingType
        {
            get { return _LoadingType.Value; }
            set { _LoadingType = value; }
        }
        public bool ShouldSerializeLoadingType()
        {
            return (_LoadingType.HasValue);
        }

        public string LoadingFactorCode { get; set; }
        public string LoadingFactorCode2 { get; set; }
        public string LoadingFactorCode3 { get; set; }
        public string LoadingFactorCode4 { get; set; }
        public string LoadingFactorCode5 { get; set; }
        public string PlanningLevel { get; set; }
        private int? _DatevAccount;
        public int DatevAccount
        {
            get { return _DatevAccount.Value; }
            set { _DatevAccount = value; }
        }
        public bool ShouldSerializeDatevAccount()
        {
            return (_DatevAccount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DatevAutoAccount;
        public SAPB1.BoYesNoEnum DatevAutoAccount
        {
            get { return _DatevAutoAccount.Value; }
            set { _DatevAutoAccount = value; }
        }
        public bool ShouldSerializeDatevAutoAccount()
        {
            return (_DatevAutoAccount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DatevFirstDataEntry;
        public SAPB1.BoYesNoEnum DatevFirstDataEntry
        {
            get { return _DatevFirstDataEntry.Value; }
            set { _DatevFirstDataEntry = value; }
        }
        public bool ShouldSerializeDatevFirstDataEntry()
        {
            return (_DatevFirstDataEntry.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AllowMultipleLinking;
        public SAPB1.BoYesNoEnum AllowMultipleLinking
        {
            get { return _AllowMultipleLinking.Value; }
            set { _AllowMultipleLinking = value; }
        }
        public bool ShouldSerializeAllowMultipleLinking()
        {
            return (_AllowMultipleLinking.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ProjectRelevant;
        public SAPB1.BoYesNoEnum ProjectRelevant
        {
            get { return _ProjectRelevant.Value; }
            set { _ProjectRelevant = value; }
        }
        public bool ShouldSerializeProjectRelevant()
        {
            return (_ProjectRelevant.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DistributionRuleRelevant;
        public SAPB1.BoYesNoEnum DistributionRuleRelevant
        {
            get { return _DistributionRuleRelevant.Value; }
            set { _DistributionRuleRelevant = value; }
        }
        public bool ShouldSerializeDistributionRuleRelevant()
        {
            return (_DistributionRuleRelevant.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DistributionRule2Relevant;
        public SAPB1.BoYesNoEnum DistributionRule2Relevant
        {
            get { return _DistributionRule2Relevant.Value; }
            set { _DistributionRule2Relevant = value; }
        }
        public bool ShouldSerializeDistributionRule2Relevant()
        {
            return (_DistributionRule2Relevant.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DistributionRule3Relevant;
        public SAPB1.BoYesNoEnum DistributionRule3Relevant
        {
            get { return _DistributionRule3Relevant.Value; }
            set { _DistributionRule3Relevant = value; }
        }
        public bool ShouldSerializeDistributionRule3Relevant()
        {
            return (_DistributionRule3Relevant.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DistributionRule4Relevant;
        public SAPB1.BoYesNoEnum DistributionRule4Relevant
        {
            get { return _DistributionRule4Relevant.Value; }
            set { _DistributionRule4Relevant = value; }
        }
        public bool ShouldSerializeDistributionRule4Relevant()
        {
            return (_DistributionRule4Relevant.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DistributionRule5Relevant;
        public SAPB1.BoYesNoEnum DistributionRule5Relevant
        {
            get { return _DistributionRule5Relevant.Value; }
            set { _DistributionRule5Relevant = value; }
        }
        public bool ShouldSerializeDistributionRule5Relevant()
        {
            return (_DistributionRule5Relevant.HasValue);
        }

        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

        public string BPLName { get; set; }
        public string VATRegNum { get; set; }
        private SAPB1.SPEDContabilAccountPurposeCode? _AccountPurposeCode;
        public SAPB1.SPEDContabilAccountPurposeCode AccountPurposeCode
        {
            get { return _AccountPurposeCode.Value; }
            set { _AccountPurposeCode = value; }
        }
        public bool ShouldSerializeAccountPurposeCode()
        {
            return (_AccountPurposeCode.HasValue);
        }

        public string ReferentialAccountCode { get; set; }
    }

    public class BusinessPartnerGroup
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
        private SAPB1.BoBusinessPartnerGroupTypes? _Type;
        public SAPB1.BoBusinessPartnerGroupTypes Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

    }

    public class InventoryPostingCopyOption
    {
        private int? _BaseEntry;
        public int BaseEntry
        {
            get { return _BaseEntry.Value; }
            set { _BaseEntry = value; }
        }
        public bool ShouldSerializeBaseEntry()
        {
            return (_BaseEntry.HasValue);
        }

        private SAPB1.InventoryPostingCopyOptionEnum? _CopyOption;
        public SAPB1.InventoryPostingCopyOptionEnum CopyOption
        {
            get { return _CopyOption.Value; }
            set { _CopyOption = value; }
        }
        public bool ShouldSerializeCopyOption()
        {
            return (_CopyOption.HasValue);
        }

    }

    public class InventoryPosting
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private int? _DocumentNumber;
        public int DocumentNumber
        {
            get { return _DocumentNumber.Value; }
            set { _DocumentNumber = value; }
        }
        public bool ShouldSerializeDocumentNumber()
        {
            return (_DocumentNumber.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private DateTime? _PostingDate;
        public DateTime PostingDate
        {
            get { return _PostingDate.Value; }
            set { _PostingDate = value; }
        }
        public bool ShouldSerializePostingDate()
        {
            return (_PostingDate.HasValue);
        }

        private DateTime? _CountDate;
        public DateTime CountDate
        {
            get { return _CountDate.Value; }
            set { _CountDate = value; }
        }
        public bool ShouldSerializeCountDate()
        {
            return (_CountDate.HasValue);
        }

        private TimeSpan? _CountTime;
        public TimeSpan CountTime
        {
            get { return _CountTime.Value; }
            set { _CountTime = value; }
        }
        public bool ShouldSerializeCountTime()
        {
            return (_CountTime.HasValue);
        }

        public string Remarks { get; set; }
        public string Reference2 { get; set; }
        private int? _BranchID;
        public int BranchID
        {
            get { return _BranchID.Value; }
            set { _BranchID = value; }
        }
        public bool ShouldSerializeBranchID()
        {
            return (_BranchID.HasValue);
        }

        private SAPB1.InventoryPostingPriceSourceEnum? _PriceSource;
        public SAPB1.InventoryPostingPriceSourceEnum PriceSource
        {
            get { return _PriceSource.Value; }
            set { _PriceSource = value; }
        }
        public bool ShouldSerializePriceSource()
        {
            return (_PriceSource.HasValue);
        }

        private int? _PriceList;
        public int PriceList
        {
            get { return _PriceList.Value; }
            set { _PriceList = value; }
        }
        public bool ShouldSerializePriceList()
        {
            return (_PriceList.HasValue);
        }

        public string JournalRemark { get; set; }
        public string DocObjectCodeEx { get; set; }
        private int? _FinancialPeriod;
        public int FinancialPeriod
        {
            get { return _FinancialPeriod.Value; }
            set { _FinancialPeriod = value; }
        }
        public bool ShouldSerializeFinancialPeriod()
        {
            return (_FinancialPeriod.HasValue);
        }

        public string PeriodIndicator { get; set; }
        public System.Collections.Generic.List<SAPB1.InventoryPostingLine> InventoryPostingLines { get; set; }
    }

    public class InventoryPostingLine
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        public string ItemCode { get; set; }
        public string ItemDescription { get; set; }
        public string WarehouseCode { get; set; }
        private int? _BinEntry;
        public int BinEntry
        {
            get { return _BinEntry.Value; }
            set { _BinEntry = value; }
        }
        public bool ShouldSerializeBinEntry()
        {
            return (_BinEntry.HasValue);
        }

        private decimal? _InWarehouseQuantity;
        public decimal InWarehouseQuantity
        {
            get { return _InWarehouseQuantity.Value; }
            set { _InWarehouseQuantity = value; }
        }
        public bool ShouldSerializeInWarehouseQuantity()
        {
            return (_InWarehouseQuantity.HasValue);
        }

        public string BarCode { get; set; }
        private decimal? _Variance;
        public decimal Variance
        {
            get { return _Variance.Value; }
            set { _Variance = value; }
        }
        public bool ShouldSerializeVariance()
        {
            return (_Variance.HasValue);
        }

        private decimal? _VariancePercentage;
        public decimal VariancePercentage
        {
            get { return _VariancePercentage.Value; }
            set { _VariancePercentage = value; }
        }
        public bool ShouldSerializeVariancePercentage()
        {
            return (_VariancePercentage.HasValue);
        }

        private decimal? _CountedQuantity;
        public decimal CountedQuantity
        {
            get { return _CountedQuantity.Value; }
            set { _CountedQuantity = value; }
        }
        public bool ShouldSerializeCountedQuantity()
        {
            return (_CountedQuantity.HasValue);
        }

        private decimal? _Price;
        public decimal Price
        {
            get { return _Price.Value; }
            set { _Price = value; }
        }
        public bool ShouldSerializePrice()
        {
            return (_Price.HasValue);
        }

        public string Currency { get; set; }
        private decimal? _Total;
        public decimal Total
        {
            get { return _Total.Value; }
            set { _Total = value; }
        }
        public bool ShouldSerializeTotal()
        {
            return (_Total.HasValue);
        }

        private int? _VisualOrder;
        public int VisualOrder
        {
            get { return _VisualOrder.Value; }
            set { _VisualOrder = value; }
        }
        public bool ShouldSerializeVisualOrder()
        {
            return (_VisualOrder.HasValue);
        }

        private DateTime? _CountDate;
        public DateTime CountDate
        {
            get { return _CountDate.Value; }
            set { _CountDate = value; }
        }
        public bool ShouldSerializeCountDate()
        {
            return (_CountDate.HasValue);
        }

        private TimeSpan? _CountTime;
        public TimeSpan CountTime
        {
            get { return _CountTime.Value; }
            set { _CountTime = value; }
        }
        public bool ShouldSerializeCountTime()
        {
            return (_CountTime.HasValue);
        }

        private int? _BaseEntry;
        public int BaseEntry
        {
            get { return _BaseEntry.Value; }
            set { _BaseEntry = value; }
        }
        public bool ShouldSerializeBaseEntry()
        {
            return (_BaseEntry.HasValue);
        }

        private int? _BaseLine;
        public int BaseLine
        {
            get { return _BaseLine.Value; }
            set { _BaseLine = value; }
        }
        public bool ShouldSerializeBaseLine()
        {
            return (_BaseLine.HasValue);
        }

        private int? _BaseType;
        public int BaseType
        {
            get { return _BaseType.Value; }
            set { _BaseType = value; }
        }
        public bool ShouldSerializeBaseType()
        {
            return (_BaseType.HasValue);
        }

        public string BaseReference { get; set; }
        public string Remarks { get; set; }
        public string InventoryOffsetIncreaseAccount { get; set; }
        public string InventoryOffsetDecreaseAccount { get; set; }
        public string ProjectCode { get; set; }
        private int? _Manufacturer;
        public int Manufacturer
        {
            get { return _Manufacturer.Value; }
            set { _Manufacturer = value; }
        }
        public bool ShouldSerializeManufacturer()
        {
            return (_Manufacturer.HasValue);
        }

        public string SupplierCatalogNo { get; set; }
        public string PreferredVendor { get; set; }
        public string CostingCode { get; set; }
        public string CostingCode2 { get; set; }
        public string CostingCode3 { get; set; }
        public string CostingCode4 { get; set; }
        public string CostingCode5 { get; set; }
        public string UoMCode { get; set; }
        private decimal? _UoMCountedQuantity;
        public decimal UoMCountedQuantity
        {
            get { return _UoMCountedQuantity.Value; }
            set { _UoMCountedQuantity = value; }
        }
        public bool ShouldSerializeUoMCountedQuantity()
        {
            return (_UoMCountedQuantity.HasValue);
        }

        private decimal? _ItemsPerUnit;
        public decimal ItemsPerUnit
        {
            get { return _ItemsPerUnit.Value; }
            set { _ItemsPerUnit = value; }
        }
        public bool ShouldSerializeItemsPerUnit()
        {
            return (_ItemsPerUnit.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AllowBinNegativeQuantity;
        public SAPB1.BoYesNoEnum AllowBinNegativeQuantity
        {
            get { return _AllowBinNegativeQuantity.Value; }
            set { _AllowBinNegativeQuantity = value; }
        }
        public bool ShouldSerializeAllowBinNegativeQuantity()
        {
            return (_AllowBinNegativeQuantity.HasValue);
        }

        private decimal? _ActualPrice;
        public decimal ActualPrice
        {
            get { return _ActualPrice.Value; }
            set { _ActualPrice = value; }
        }
        public bool ShouldSerializeActualPrice()
        {
            return (_ActualPrice.HasValue);
        }

        private decimal? _PostedValueLC;
        public decimal PostedValueLC
        {
            get { return _PostedValueLC.Value; }
            set { _PostedValueLC = value; }
        }
        public bool ShouldSerializePostedValueLC()
        {
            return (_PostedValueLC.HasValue);
        }

        private decimal? _PostedValueSC;
        public decimal PostedValueSC
        {
            get { return _PostedValueSC.Value; }
            set { _PostedValueSC = value; }
        }
        public bool ShouldSerializePostedValueSC()
        {
            return (_PostedValueSC.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.InventoryPostingLineUoM> InventoryPostingLineUoMs { get; set; }
        public System.Collections.Generic.List<SAPB1.InventoryPostingSerialNumber> InventoryPostingSerialNumbers { get; set; }
        public System.Collections.Generic.List<SAPB1.InventoryPostingBatchNumber> InventoryPostingBatchNumbers { get; set; }
    }

    public class InventoryPostingLineUoM
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        private int? _ChildNumber;
        public int ChildNumber
        {
            get { return _ChildNumber.Value; }
            set { _ChildNumber = value; }
        }
        public bool ShouldSerializeChildNumber()
        {
            return (_ChildNumber.HasValue);
        }

        private decimal? _UoMCountedQuantity;
        public decimal UoMCountedQuantity
        {
            get { return _UoMCountedQuantity.Value; }
            set { _UoMCountedQuantity = value; }
        }
        public bool ShouldSerializeUoMCountedQuantity()
        {
            return (_UoMCountedQuantity.HasValue);
        }

        private decimal? _ItemsPerUnit;
        public decimal ItemsPerUnit
        {
            get { return _ItemsPerUnit.Value; }
            set { _ItemsPerUnit = value; }
        }
        public bool ShouldSerializeItemsPerUnit()
        {
            return (_ItemsPerUnit.HasValue);
        }

        private decimal? _CountedQuantity;
        public decimal CountedQuantity
        {
            get { return _CountedQuantity.Value; }
            set { _CountedQuantity = value; }
        }
        public bool ShouldSerializeCountedQuantity()
        {
            return (_CountedQuantity.HasValue);
        }

        public string UoMCode { get; set; }
        public string BarCode { get; set; }
    }

    public class InventoryPostingSerialNumber
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        public string ManufacturerSerialNumber { get; set; }
        public string InternalSerialNumber { get; set; }
        private DateTime? _ExpiryDate;
        public DateTime ExpiryDate
        {
            get { return _ExpiryDate.Value; }
            set { _ExpiryDate = value; }
        }
        public bool ShouldSerializeExpiryDate()
        {
            return (_ExpiryDate.HasValue);
        }

        private DateTime? _ManufactureDate;
        public DateTime ManufactureDate
        {
            get { return _ManufactureDate.Value; }
            set { _ManufactureDate = value; }
        }
        public bool ShouldSerializeManufactureDate()
        {
            return (_ManufactureDate.HasValue);
        }

        private DateTime? _ReceptionDate;
        public DateTime ReceptionDate
        {
            get { return _ReceptionDate.Value; }
            set { _ReceptionDate = value; }
        }
        public bool ShouldSerializeReceptionDate()
        {
            return (_ReceptionDate.HasValue);
        }

        private DateTime? _WarrantyStart;
        public DateTime WarrantyStart
        {
            get { return _WarrantyStart.Value; }
            set { _WarrantyStart = value; }
        }
        public bool ShouldSerializeWarrantyStart()
        {
            return (_WarrantyStart.HasValue);
        }

        private DateTime? _WarrantyEnd;
        public DateTime WarrantyEnd
        {
            get { return _WarrantyEnd.Value; }
            set { _WarrantyEnd = value; }
        }
        public bool ShouldSerializeWarrantyEnd()
        {
            return (_WarrantyEnd.HasValue);
        }

        public string Location { get; set; }
        public string Notes { get; set; }
        public string BatchID { get; set; }
        private int? _SystemSerialNumber;
        public int SystemSerialNumber
        {
            get { return _SystemSerialNumber.Value; }
            set { _SystemSerialNumber = value; }
        }
        public bool ShouldSerializeSystemSerialNumber()
        {
            return (_SystemSerialNumber.HasValue);
        }

        private int? _BaseLineNumber;
        public int BaseLineNumber
        {
            get { return _BaseLineNumber.Value; }
            set { _BaseLineNumber = value; }
        }
        public bool ShouldSerializeBaseLineNumber()
        {
            return (_BaseLineNumber.HasValue);
        }

        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private int? _TrackingNote;
        public int TrackingNote
        {
            get { return _TrackingNote.Value; }
            set { _TrackingNote = value; }
        }
        public bool ShouldSerializeTrackingNote()
        {
            return (_TrackingNote.HasValue);
        }

        private int? _TrackingNoteLine;
        public int TrackingNoteLine
        {
            get { return _TrackingNoteLine.Value; }
            set { _TrackingNoteLine = value; }
        }
        public bool ShouldSerializeTrackingNoteLine()
        {
            return (_TrackingNoteLine.HasValue);
        }

    }

    public class InventoryPostingBatchNumber
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        public string BatchNumber { get; set; }
        public string ManufacturerSerialNumber { get; set; }
        public string InternalSerialNumber { get; set; }
        private DateTime? _ExpiryDate;
        public DateTime ExpiryDate
        {
            get { return _ExpiryDate.Value; }
            set { _ExpiryDate = value; }
        }
        public bool ShouldSerializeExpiryDate()
        {
            return (_ExpiryDate.HasValue);
        }

        private DateTime? _ManufactureDate;
        public DateTime ManufactureDate
        {
            get { return _ManufactureDate.Value; }
            set { _ManufactureDate = value; }
        }
        public bool ShouldSerializeManufactureDate()
        {
            return (_ManufactureDate.HasValue);
        }

        private DateTime? _AddmisionDate;
        public DateTime AddmisionDate
        {
            get { return _AddmisionDate.Value; }
            set { _AddmisionDate = value; }
        }
        public bool ShouldSerializeAddmisionDate()
        {
            return (_AddmisionDate.HasValue);
        }

        public string Location { get; set; }
        public string Notes { get; set; }
        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private int? _BaseLineNumber;
        public int BaseLineNumber
        {
            get { return _BaseLineNumber.Value; }
            set { _BaseLineNumber = value; }
        }
        public bool ShouldSerializeBaseLineNumber()
        {
            return (_BaseLineNumber.HasValue);
        }

        private int? _TrackingNote;
        public int TrackingNote
        {
            get { return _TrackingNote.Value; }
            set { _TrackingNote = value; }
        }
        public bool ShouldSerializeTrackingNote()
        {
            return (_TrackingNote.HasValue);
        }

        private int? _TrackingNoteLine;
        public int TrackingNoteLine
        {
            get { return _TrackingNoteLine.Value; }
            set { _TrackingNoteLine = value; }
        }
        public bool ShouldSerializeTrackingNoteLine()
        {
            return (_TrackingNoteLine.HasValue);
        }

    }

    public class InventoryPostingParams
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private int? _DocumentNumber;
        public int DocumentNumber
        {
            get { return _DocumentNumber.Value; }
            set { _DocumentNumber = value; }
        }
        public bool ShouldSerializeDocumentNumber()
        {
            return (_DocumentNumber.HasValue);
        }

    }

    public class UnitOfMeasurementGroup
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        public string Code { get; set; }
        public string Name { get; set; }
        private int? _BaseUoM;
        public int BaseUoM
        {
            get { return _BaseUoM.Value; }
            set { _BaseUoM = value; }
        }
        public bool ShouldSerializeBaseUoM()
        {
            return (_BaseUoM.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.UoMGroupDefinition> UoMGroupDefinitionCollection { get; set; }
    }

    public class UoMGroupDefinition
    {
        private int? _AlternateUoM;
        public int AlternateUoM
        {
            get { return _AlternateUoM.Value; }
            set { _AlternateUoM = value; }
        }
        public bool ShouldSerializeAlternateUoM()
        {
            return (_AlternateUoM.HasValue);
        }

        private decimal? _AlternateQuantity;
        public decimal AlternateQuantity
        {
            get { return _AlternateQuantity.Value; }
            set { _AlternateQuantity = value; }
        }
        public bool ShouldSerializeAlternateQuantity()
        {
            return (_AlternateQuantity.HasValue);
        }

        private decimal? _BaseQuantity;
        public decimal BaseQuantity
        {
            get { return _BaseQuantity.Value; }
            set { _BaseQuantity = value; }
        }
        public bool ShouldSerializeBaseQuantity()
        {
            return (_BaseQuantity.HasValue);
        }

        private int? _WeightFactor;
        public int WeightFactor
        {
            get { return _WeightFactor.Value; }
            set { _WeightFactor = value; }
        }
        public bool ShouldSerializeWeightFactor()
        {
            return (_WeightFactor.HasValue);
        }

        private int? _UdfFactor;
        public int UdfFactor
        {
            get { return _UdfFactor.Value; }
            set { _UdfFactor = value; }
        }
        public bool ShouldSerializeUdfFactor()
        {
            return (_UdfFactor.HasValue);
        }

    }

    public class UnitOfMeasurementGroupParams
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        public string Code { get; set; }
    }

    public class UnitOfMeasurement
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        public string Code { get; set; }
        public string Name { get; set; }
        private decimal? _Length1;
        public decimal Length1
        {
            get { return _Length1.Value; }
            set { _Length1 = value; }
        }
        public bool ShouldSerializeLength1()
        {
            return (_Length1.HasValue);
        }

        private int? _Length1Unit;
        public int Length1Unit
        {
            get { return _Length1Unit.Value; }
            set { _Length1Unit = value; }
        }
        public bool ShouldSerializeLength1Unit()
        {
            return (_Length1Unit.HasValue);
        }

        private decimal? _Length2;
        public decimal Length2
        {
            get { return _Length2.Value; }
            set { _Length2 = value; }
        }
        public bool ShouldSerializeLength2()
        {
            return (_Length2.HasValue);
        }

        private int? _Length2Unit;
        public int Length2Unit
        {
            get { return _Length2Unit.Value; }
            set { _Length2Unit = value; }
        }
        public bool ShouldSerializeLength2Unit()
        {
            return (_Length2Unit.HasValue);
        }

        private decimal? _Width1;
        public decimal Width1
        {
            get { return _Width1.Value; }
            set { _Width1 = value; }
        }
        public bool ShouldSerializeWidth1()
        {
            return (_Width1.HasValue);
        }

        private int? _Width1Unit;
        public int Width1Unit
        {
            get { return _Width1Unit.Value; }
            set { _Width1Unit = value; }
        }
        public bool ShouldSerializeWidth1Unit()
        {
            return (_Width1Unit.HasValue);
        }

        private decimal? _Width2;
        public decimal Width2
        {
            get { return _Width2.Value; }
            set { _Width2 = value; }
        }
        public bool ShouldSerializeWidth2()
        {
            return (_Width2.HasValue);
        }

        private int? _Width2Unit;
        public int Width2Unit
        {
            get { return _Width2Unit.Value; }
            set { _Width2Unit = value; }
        }
        public bool ShouldSerializeWidth2Unit()
        {
            return (_Width2Unit.HasValue);
        }

        private decimal? _Height1;
        public decimal Height1
        {
            get { return _Height1.Value; }
            set { _Height1 = value; }
        }
        public bool ShouldSerializeHeight1()
        {
            return (_Height1.HasValue);
        }

        private int? _Height1Unit;
        public int Height1Unit
        {
            get { return _Height1Unit.Value; }
            set { _Height1Unit = value; }
        }
        public bool ShouldSerializeHeight1Unit()
        {
            return (_Height1Unit.HasValue);
        }

        private decimal? _Height2;
        public decimal Height2
        {
            get { return _Height2.Value; }
            set { _Height2 = value; }
        }
        public bool ShouldSerializeHeight2()
        {
            return (_Height2.HasValue);
        }

        private int? _Height2Unit;
        public int Height2Unit
        {
            get { return _Height2Unit.Value; }
            set { _Height2Unit = value; }
        }
        public bool ShouldSerializeHeight2Unit()
        {
            return (_Height2Unit.HasValue);
        }

        private decimal? _Volume;
        public decimal Volume
        {
            get { return _Volume.Value; }
            set { _Volume = value; }
        }
        public bool ShouldSerializeVolume()
        {
            return (_Volume.HasValue);
        }

        private int? _VolumeUnit;
        public int VolumeUnit
        {
            get { return _VolumeUnit.Value; }
            set { _VolumeUnit = value; }
        }
        public bool ShouldSerializeVolumeUnit()
        {
            return (_VolumeUnit.HasValue);
        }

        private decimal? _Weight1;
        public decimal Weight1
        {
            get { return _Weight1.Value; }
            set { _Weight1 = value; }
        }
        public bool ShouldSerializeWeight1()
        {
            return (_Weight1.HasValue);
        }

        private int? _Weight1Unit;
        public int Weight1Unit
        {
            get { return _Weight1Unit.Value; }
            set { _Weight1Unit = value; }
        }
        public bool ShouldSerializeWeight1Unit()
        {
            return (_Weight1Unit.HasValue);
        }

        private decimal? _Weight2;
        public decimal Weight2
        {
            get { return _Weight2.Value; }
            set { _Weight2 = value; }
        }
        public bool ShouldSerializeWeight2()
        {
            return (_Weight2.HasValue);
        }

        private int? _Weight2Unit;
        public int Weight2Unit
        {
            get { return _Weight2Unit.Value; }
            set { _Weight2Unit = value; }
        }
        public bool ShouldSerializeWeight2Unit()
        {
            return (_Weight2Unit.HasValue);
        }

        public string InternationalSymbol { get; set; }
    }

    public class UnitOfMeasurementParams
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        public string Code { get; set; }
    }

    public class BinLocation
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        public string Warehouse { get; set; }
        public string Sublevel1 { get; set; }
        public string Sublevel2 { get; set; }
        public string Sublevel3 { get; set; }
        public string Sublevel4 { get; set; }
        public string BinCode { get; set; }
        private SAPB1.BoYesNoEnum? _Inactive;
        public SAPB1.BoYesNoEnum Inactive
        {
            get { return _Inactive.Value; }
            set { _Inactive = value; }
        }
        public bool ShouldSerializeInactive()
        {
            return (_Inactive.HasValue);
        }

        public string Description { get; set; }
        public string AlternativeSortCode { get; set; }
        public string BarCode { get; set; }
        public string Attribute1 { get; set; }
        public string Attribute2 { get; set; }
        public string Attribute3 { get; set; }
        public string Attribute4 { get; set; }
        public string Attribute5 { get; set; }
        public string Attribute6 { get; set; }
        public string Attribute7 { get; set; }
        public string Attribute8 { get; set; }
        public string Attribute9 { get; set; }
        public string Attribute10 { get; set; }
        private SAPB1.BinRestrictItemEnum? _RestrictedItemType;
        public SAPB1.BinRestrictItemEnum RestrictedItemType
        {
            get { return _RestrictedItemType.Value; }
            set { _RestrictedItemType = value; }
        }
        public bool ShouldSerializeRestrictedItemType()
        {
            return (_RestrictedItemType.HasValue);
        }

        public string SpecificItem { get; set; }
        private int? _SpecificItemGroup;
        public int SpecificItemGroup
        {
            get { return _SpecificItemGroup.Value; }
            set { _SpecificItemGroup = value; }
        }
        public bool ShouldSerializeSpecificItemGroup()
        {
            return (_SpecificItemGroup.HasValue);
        }

        private SAPB1.BinRestrictionBatchEnum? _BatchRestrictions;
        public SAPB1.BinRestrictionBatchEnum BatchRestrictions
        {
            get { return _BatchRestrictions.Value; }
            set { _BatchRestrictions = value; }
        }
        public bool ShouldSerializeBatchRestrictions()
        {
            return (_BatchRestrictions.HasValue);
        }

        private SAPB1.BinRestrictTransactionEnum? _RestrictedTransType;
        public SAPB1.BinRestrictTransactionEnum RestrictedTransType
        {
            get { return _RestrictedTransType.Value; }
            set { _RestrictedTransType = value; }
        }
        public bool ShouldSerializeRestrictedTransType()
        {
            return (_RestrictedTransType.HasValue);
        }

        public string RestrictionReason { get; set; }
        private DateTime? _DateRestrictionChanged;
        public DateTime DateRestrictionChanged
        {
            get { return _DateRestrictionChanged.Value; }
            set { _DateRestrictionChanged = value; }
        }
        public bool ShouldSerializeDateRestrictionChanged()
        {
            return (_DateRestrictionChanged.HasValue);
        }

        private decimal? _MinimumQty;
        public decimal MinimumQty
        {
            get { return _MinimumQty.Value; }
            set { _MinimumQty = value; }
        }
        public bool ShouldSerializeMinimumQty()
        {
            return (_MinimumQty.HasValue);
        }

        private decimal? _MaximumQty;
        public decimal MaximumQty
        {
            get { return _MaximumQty.Value; }
            set { _MaximumQty = value; }
        }
        public bool ShouldSerializeMaximumQty()
        {
            return (_MaximumQty.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsSystemBin;
        public SAPB1.BoYesNoEnum IsSystemBin
        {
            get { return _IsSystemBin.Value; }
            set { _IsSystemBin = value; }
        }
        public bool ShouldSerializeIsSystemBin()
        {
            return (_IsSystemBin.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReceivingBinLocation;
        public SAPB1.BoYesNoEnum ReceivingBinLocation
        {
            get { return _ReceivingBinLocation.Value; }
            set { _ReceivingBinLocation = value; }
        }
        public bool ShouldSerializeReceivingBinLocation()
        {
            return (_ReceivingBinLocation.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ExcludeAutoAllocOnIssue;
        public SAPB1.BoYesNoEnum ExcludeAutoAllocOnIssue
        {
            get { return _ExcludeAutoAllocOnIssue.Value; }
            set { _ExcludeAutoAllocOnIssue = value; }
        }
        public bool ShouldSerializeExcludeAutoAllocOnIssue()
        {
            return (_ExcludeAutoAllocOnIssue.HasValue);
        }

        private decimal? _MaximumWeight;
        public decimal MaximumWeight
        {
            get { return _MaximumWeight.Value; }
            set { _MaximumWeight = value; }
        }
        public bool ShouldSerializeMaximumWeight()
        {
            return (_MaximumWeight.HasValue);
        }

        private decimal? _MaximumWeight1;
        public decimal MaximumWeight1
        {
            get { return _MaximumWeight1.Value; }
            set { _MaximumWeight1 = value; }
        }
        public bool ShouldSerializeMaximumWeight1()
        {
            return (_MaximumWeight1.HasValue);
        }

        private int? _MaximumWeightUnit;
        public int MaximumWeightUnit
        {
            get { return _MaximumWeightUnit.Value; }
            set { _MaximumWeightUnit = value; }
        }
        public bool ShouldSerializeMaximumWeightUnit()
        {
            return (_MaximumWeightUnit.HasValue);
        }

        private int? _MaximumWeightUnit1;
        public int MaximumWeightUnit1
        {
            get { return _MaximumWeightUnit1.Value; }
            set { _MaximumWeightUnit1 = value; }
        }
        public bool ShouldSerializeMaximumWeightUnit1()
        {
            return (_MaximumWeightUnit1.HasValue);
        }

        private SAPB1.BinRestrictUoMEnum? _RestrictedUoMType;
        public SAPB1.BinRestrictUoMEnum RestrictedUoMType
        {
            get { return _RestrictedUoMType.Value; }
            set { _RestrictedUoMType = value; }
        }
        public bool ShouldSerializeRestrictedUoMType()
        {
            return (_RestrictedUoMType.HasValue);
        }

        private int? _SpecificUoM;
        public int SpecificUoM
        {
            get { return _SpecificUoM.Value; }
            set { _SpecificUoM = value; }
        }
        public bool ShouldSerializeSpecificUoM()
        {
            return (_SpecificUoM.HasValue);
        }

        private int? _SpecificUoMGroup;
        public int SpecificUoMGroup
        {
            get { return _SpecificUoMGroup.Value; }
            set { _SpecificUoMGroup = value; }
        }
        public bool ShouldSerializeSpecificUoMGroup()
        {
            return (_SpecificUoMGroup.HasValue);
        }

    }

    public class BinLocationParams
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        public string BinCode { get; set; }
    }

    public class Activity
    {
        private int? _ActivityCode;
        public int ActivityCode
        {
            get { return _ActivityCode.Value; }
            set { _ActivityCode = value; }
        }
        public bool ShouldSerializeActivityCode()
        {
            return (_ActivityCode.HasValue);
        }

        public string CardCode { get; set; }
        public string Notes { get; set; }
        private DateTime? _ActivityDate;
        public DateTime ActivityDate
        {
            get { return _ActivityDate.Value; }
            set { _ActivityDate = value; }
        }
        public bool ShouldSerializeActivityDate()
        {
            return (_ActivityDate.HasValue);
        }

        private TimeSpan? _ActivityTime;
        public TimeSpan ActivityTime
        {
            get { return _ActivityTime.Value; }
            set { _ActivityTime = value; }
        }
        public bool ShouldSerializeActivityTime()
        {
            return (_ActivityTime.HasValue);
        }

        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Closed;
        public SAPB1.BoYesNoEnum Closed
        {
            get { return _Closed.Value; }
            set { _Closed = value; }
        }
        public bool ShouldSerializeClosed()
        {
            return (_Closed.HasValue);
        }

        private DateTime? _CloseDate;
        public DateTime CloseDate
        {
            get { return _CloseDate.Value; }
            set { _CloseDate = value; }
        }
        public bool ShouldSerializeCloseDate()
        {
            return (_CloseDate.HasValue);
        }

        public string Phone { get; set; }
        public string Fax { get; set; }
        private int? _Subject;
        public int Subject
        {
            get { return _Subject.Value; }
            set { _Subject = value; }
        }
        public bool ShouldSerializeSubject()
        {
            return (_Subject.HasValue);
        }

        public string DocType { get; set; }
        public string DocNum { get; set; }
        public string DocEntry { get; set; }
        private SAPB1.BoMsgPriorities? _Priority;
        public SAPB1.BoMsgPriorities Priority
        {
            get { return _Priority.Value; }
            set { _Priority = value; }
        }
        public bool ShouldSerializePriority()
        {
            return (_Priority.HasValue);
        }

        public string Details { get; set; }
        [DataMember(Name = "Activity")]
        private SAPB1.BoActivities? _ActivityProperty;
        public SAPB1.BoActivities ActivityProperty
        {
            get { return _ActivityProperty.Value; }
            set { _ActivityProperty = value; }
        }
        public bool ShouldSerializeActivityProperty()
        {
            return (_ActivityProperty.HasValue);
        }

        private int? _ActivityType;
        public int ActivityType
        {
            get { return _ActivityType.Value; }
            set { _ActivityType = value; }
        }
        public bool ShouldSerializeActivityType()
        {
            return (_ActivityType.HasValue);
        }

        private int? _Location;
        public int Location
        {
            get { return _Location.Value; }
            set { _Location = value; }
        }
        public bool ShouldSerializeLocation()
        {
            return (_Location.HasValue);
        }

        private TimeSpan? _StartTime;
        public TimeSpan StartTime
        {
            get { return _StartTime.Value; }
            set { _StartTime = value; }
        }
        public bool ShouldSerializeStartTime()
        {
            return (_StartTime.HasValue);
        }

        private TimeSpan? _EndTime;
        public TimeSpan EndTime
        {
            get { return _EndTime.Value; }
            set { _EndTime = value; }
        }
        public bool ShouldSerializeEndTime()
        {
            return (_EndTime.HasValue);
        }

        private decimal? _Duration;
        public decimal Duration
        {
            get { return _Duration.Value; }
            set { _Duration = value; }
        }
        public bool ShouldSerializeDuration()
        {
            return (_Duration.HasValue);
        }

        private SAPB1.BoDurations? _DurationType;
        public SAPB1.BoDurations DurationType
        {
            get { return _DurationType.Value; }
            set { _DurationType = value; }
        }
        public bool ShouldSerializeDurationType()
        {
            return (_DurationType.HasValue);
        }

        private int? _SalesEmployee;
        public int SalesEmployee
        {
            get { return _SalesEmployee.Value; }
            set { _SalesEmployee = value; }
        }
        public bool ShouldSerializeSalesEmployee()
        {
            return (_SalesEmployee.HasValue);
        }

        private int? _ContactPersonCode;
        public int ContactPersonCode
        {
            get { return _ContactPersonCode.Value; }
            set { _ContactPersonCode = value; }
        }
        public bool ShouldSerializeContactPersonCode()
        {
            return (_ContactPersonCode.HasValue);
        }

        private int? _HandledBy;
        public int HandledBy
        {
            get { return _HandledBy.Value; }
            set { _HandledBy = value; }
        }
        public bool ShouldSerializeHandledBy()
        {
            return (_HandledBy.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Reminder;
        public SAPB1.BoYesNoEnum Reminder
        {
            get { return _Reminder.Value; }
            set { _Reminder = value; }
        }
        public bool ShouldSerializeReminder()
        {
            return (_Reminder.HasValue);
        }

        private decimal? _ReminderPeriod;
        public decimal ReminderPeriod
        {
            get { return _ReminderPeriod.Value; }
            set { _ReminderPeriod = value; }
        }
        public bool ShouldSerializeReminderPeriod()
        {
            return (_ReminderPeriod.HasValue);
        }

        private SAPB1.BoDurations? _ReminderType;
        public SAPB1.BoDurations ReminderType
        {
            get { return _ReminderType.Value; }
            set { _ReminderType = value; }
        }
        public bool ShouldSerializeReminderType()
        {
            return (_ReminderType.HasValue);
        }

        public string City { get; set; }
        private SAPB1.BoYesNoEnum? _PersonalFlag;
        public SAPB1.BoYesNoEnum PersonalFlag
        {
            get { return _PersonalFlag.Value; }
            set { _PersonalFlag = value; }
        }
        public bool ShouldSerializePersonalFlag()
        {
            return (_PersonalFlag.HasValue);
        }

        public string Street { get; set; }
        private int? _ParentObjectId;
        public int ParentObjectId
        {
            get { return _ParentObjectId.Value; }
            set { _ParentObjectId = value; }
        }
        public bool ShouldSerializeParentObjectId()
        {
            return (_ParentObjectId.HasValue);
        }

        public string ParentObjectType { get; set; }
        public string Room { get; set; }
        private SAPB1.BoYesNoEnum? _InactiveFlag;
        public SAPB1.BoYesNoEnum InactiveFlag
        {
            get { return _InactiveFlag.Value; }
            set { _InactiveFlag = value; }
        }
        public bool ShouldSerializeInactiveFlag()
        {
            return (_InactiveFlag.HasValue);
        }

        public string State { get; set; }
        private int? _PreviousActivity;
        public int PreviousActivity
        {
            get { return _PreviousActivity.Value; }
            set { _PreviousActivity = value; }
        }
        public bool ShouldSerializePreviousActivity()
        {
            return (_PreviousActivity.HasValue);
        }

        public string Country { get; set; }
        private int? _Status;
        public int Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TentativeFlag;
        public SAPB1.BoYesNoEnum TentativeFlag
        {
            get { return _TentativeFlag.Value; }
            set { _TentativeFlag = value; }
        }
        public bool ShouldSerializeTentativeFlag()
        {
            return (_TentativeFlag.HasValue);
        }

        private DateTime? _EndDueDate;
        public DateTime EndDueDate
        {
            get { return _EndDueDate.Value; }
            set { _EndDueDate = value; }
        }
        public bool ShouldSerializeEndDueDate()
        {
            return (_EndDueDate.HasValue);
        }

        public string DocTypeEx { get; set; }
        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

        private SAPB1.RecurrencePatternEnum? _RecurrencePattern;
        public SAPB1.RecurrencePatternEnum RecurrencePattern
        {
            get { return _RecurrencePattern.Value; }
            set { _RecurrencePattern = value; }
        }
        public bool ShouldSerializeRecurrencePattern()
        {
            return (_RecurrencePattern.HasValue);
        }

        private SAPB1.EndTypeEnum? _EndType;
        public SAPB1.EndTypeEnum EndType
        {
            get { return _EndType.Value; }
            set { _EndType = value; }
        }
        public bool ShouldSerializeEndType()
        {
            return (_EndType.HasValue);
        }

        private DateTime? _SeriesStartDate;
        public DateTime SeriesStartDate
        {
            get { return _SeriesStartDate.Value; }
            set { _SeriesStartDate = value; }
        }
        public bool ShouldSerializeSeriesStartDate()
        {
            return (_SeriesStartDate.HasValue);
        }

        private DateTime? _SeriesEndDate;
        public DateTime SeriesEndDate
        {
            get { return _SeriesEndDate.Value; }
            set { _SeriesEndDate = value; }
        }
        public bool ShouldSerializeSeriesEndDate()
        {
            return (_SeriesEndDate.HasValue);
        }

        private int? _MaxOccurrence;
        public int MaxOccurrence
        {
            get { return _MaxOccurrence.Value; }
            set { _MaxOccurrence = value; }
        }
        public bool ShouldSerializeMaxOccurrence()
        {
            return (_MaxOccurrence.HasValue);
        }

        private int? _Interval;
        public int Interval
        {
            get { return _Interval.Value; }
            set { _Interval = value; }
        }
        public bool ShouldSerializeInterval()
        {
            return (_Interval.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Sunday;
        public SAPB1.BoYesNoEnum Sunday
        {
            get { return _Sunday.Value; }
            set { _Sunday = value; }
        }
        public bool ShouldSerializeSunday()
        {
            return (_Sunday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Monday;
        public SAPB1.BoYesNoEnum Monday
        {
            get { return _Monday.Value; }
            set { _Monday = value; }
        }
        public bool ShouldSerializeMonday()
        {
            return (_Monday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Tuesday;
        public SAPB1.BoYesNoEnum Tuesday
        {
            get { return _Tuesday.Value; }
            set { _Tuesday = value; }
        }
        public bool ShouldSerializeTuesday()
        {
            return (_Tuesday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Wednesday;
        public SAPB1.BoYesNoEnum Wednesday
        {
            get { return _Wednesday.Value; }
            set { _Wednesday = value; }
        }
        public bool ShouldSerializeWednesday()
        {
            return (_Wednesday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Thursday;
        public SAPB1.BoYesNoEnum Thursday
        {
            get { return _Thursday.Value; }
            set { _Thursday = value; }
        }
        public bool ShouldSerializeThursday()
        {
            return (_Thursday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Friday;
        public SAPB1.BoYesNoEnum Friday
        {
            get { return _Friday.Value; }
            set { _Friday = value; }
        }
        public bool ShouldSerializeFriday()
        {
            return (_Friday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Saturday;
        public SAPB1.BoYesNoEnum Saturday
        {
            get { return _Saturday.Value; }
            set { _Saturday = value; }
        }
        public bool ShouldSerializeSaturday()
        {
            return (_Saturday.HasValue);
        }

        private SAPB1.RepeatOptionEnum? _RepeatOption;
        public SAPB1.RepeatOptionEnum RepeatOption
        {
            get { return _RepeatOption.Value; }
            set { _RepeatOption = value; }
        }
        public bool ShouldSerializeRepeatOption()
        {
            return (_RepeatOption.HasValue);
        }

        private int? _BelongedSeriesNum;
        public int BelongedSeriesNum
        {
            get { return _BelongedSeriesNum.Value; }
            set { _BelongedSeriesNum = value; }
        }
        public bool ShouldSerializeBelongedSeriesNum()
        {
            return (_BelongedSeriesNum.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsRemoved;
        public SAPB1.BoYesNoEnum IsRemoved
        {
            get { return _IsRemoved.Value; }
            set { _IsRemoved = value; }
        }
        public bool ShouldSerializeIsRemoved()
        {
            return (_IsRemoved.HasValue);
        }

        public string AddressName { get; set; }
        private SAPB1.BoAddressType? _AddressType;
        public SAPB1.BoAddressType AddressType
        {
            get { return _AddressType.Value; }
            set { _AddressType = value; }
        }
        public bool ShouldSerializeAddressType()
        {
            return (_AddressType.HasValue);
        }

        private int? _HandledByEmployee;
        public int HandledByEmployee
        {
            get { return _HandledByEmployee.Value; }
            set { _HandledByEmployee = value; }
        }
        public bool ShouldSerializeHandledByEmployee()
        {
            return (_HandledByEmployee.HasValue);
        }

        private SAPB1.RecurrenceSequenceEnum? _RecurrenceSequenceSpecifier;
        public SAPB1.RecurrenceSequenceEnum RecurrenceSequenceSpecifier
        {
            get { return _RecurrenceSequenceSpecifier.Value; }
            set { _RecurrenceSequenceSpecifier = value; }
        }
        public bool ShouldSerializeRecurrenceSequenceSpecifier()
        {
            return (_RecurrenceSequenceSpecifier.HasValue);
        }

        private int? _RecurrenceDayInMonth;
        public int RecurrenceDayInMonth
        {
            get { return _RecurrenceDayInMonth.Value; }
            set { _RecurrenceDayInMonth = value; }
        }
        public bool ShouldSerializeRecurrenceDayInMonth()
        {
            return (_RecurrenceDayInMonth.HasValue);
        }

        private int? _RecurrenceMonth;
        public int RecurrenceMonth
        {
            get { return _RecurrenceMonth.Value; }
            set { _RecurrenceMonth = value; }
        }
        public bool ShouldSerializeRecurrenceMonth()
        {
            return (_RecurrenceMonth.HasValue);
        }

        private SAPB1.RecurrenceDayOfWeekEnum? _RecurrenceDayOfWeek;
        public SAPB1.RecurrenceDayOfWeekEnum RecurrenceDayOfWeek
        {
            get { return _RecurrenceDayOfWeek.Value; }
            set { _RecurrenceDayOfWeek = value; }
        }
        public bool ShouldSerializeRecurrenceDayOfWeek()
        {
            return (_RecurrenceDayOfWeek.HasValue);
        }

        private int? _SalesOpportunityId;
        public int SalesOpportunityId
        {
            get { return _SalesOpportunityId.Value; }
            set { _SalesOpportunityId = value; }
        }
        public bool ShouldSerializeSalesOpportunityId()
        {
            return (_SalesOpportunityId.HasValue);
        }

        private int? _SalesOpportunityLine;
        public int SalesOpportunityLine
        {
            get { return _SalesOpportunityLine.Value; }
            set { _SalesOpportunityLine = value; }
        }
        public bool ShouldSerializeSalesOpportunityLine()
        {
            return (_SalesOpportunityLine.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.CheckInParams> CheckInListParams { get; set; }
    }

    public class CheckInParams
    {
        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        private DateTime? _Date;
        public DateTime Date
        {
            get { return _Date.Value; }
            set { _Date = value; }
        }
        public bool ShouldSerializeDate()
        {
            return (_Date.HasValue);
        }

        private TimeSpan? _Time;
        public TimeSpan Time
        {
            get { return _Time.Value; }
            set { _Time = value; }
        }
        public bool ShouldSerializeTime()
        {
            return (_Time.HasValue);
        }

        public string Location { get; set; }
        public string Latitude { get; set; }
        public string Longitude { get; set; }
        private int? _HandledBy;
        public int HandledBy
        {
            get { return _HandledBy.Value; }
            set { _HandledBy = value; }
        }
        public bool ShouldSerializeHandledBy()
        {
            return (_HandledBy.HasValue);
        }

        private int? _HandledByEmployee;
        public int HandledByEmployee
        {
            get { return _HandledByEmployee.Value; }
            set { _HandledByEmployee = value; }
        }
        public bool ShouldSerializeHandledByEmployee()
        {
            return (_HandledByEmployee.HasValue);
        }

    }

    public class ActivityParams
    {
        private int? _ActivityCode;
        public int ActivityCode
        {
            get { return _ActivityCode.Value; }
            set { _ActivityCode = value; }
        }
        public bool ShouldSerializeActivityCode()
        {
            return (_ActivityCode.HasValue);
        }

    }

    public class ActivityInstanceParams
    {
        private int? _ActivityCode;
        public int ActivityCode
        {
            get { return _ActivityCode.Value; }
            set { _ActivityCode = value; }
        }
        public bool ShouldSerializeActivityCode()
        {
            return (_ActivityCode.HasValue);
        }

        private DateTime? _InstanceDate;
        public DateTime InstanceDate
        {
            get { return _InstanceDate.Value; }
            set { _InstanceDate = value; }
        }
        public bool ShouldSerializeInstanceDate()
        {
            return (_InstanceDate.HasValue);
        }

    }

    public class ActivityInstancesListParams
    {
        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private int? _InstanceCount;
        public int InstanceCount
        {
            get { return _InstanceCount.Value; }
            set { _InstanceCount = value; }
        }
        public bool ShouldSerializeInstanceCount()
        {
            return (_InstanceCount.HasValue);
        }

    }

    public class SalesStage
    {
        private int? _SequenceNo;
        public int SequenceNo
        {
            get { return _SequenceNo.Value; }
            set { _SequenceNo = value; }
        }
        public bool ShouldSerializeSequenceNo()
        {
            return (_SequenceNo.HasValue);
        }

        public string Name { get; set; }
        private int? _Stageno;
        public int Stageno
        {
            get { return _Stageno.Value; }
            set { _Stageno = value; }
        }
        public bool ShouldSerializeStageno()
        {
            return (_Stageno.HasValue);
        }

        private decimal? _ClosingPercentage;
        public decimal ClosingPercentage
        {
            get { return _ClosingPercentage.Value; }
            set { _ClosingPercentage = value; }
        }
        public bool ShouldSerializeClosingPercentage()
        {
            return (_ClosingPercentage.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Cancelled;
        public SAPB1.BoYesNoEnum Cancelled
        {
            get { return _Cancelled.Value; }
            set { _Cancelled = value; }
        }
        public bool ShouldSerializeCancelled()
        {
            return (_Cancelled.HasValue);
        }

    }

    public class ActivityType
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
    }

    public class ActivityLocation
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
    }

    public class DocumentParams
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

    }

    public class Document
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private int? _DocNum;
        public int DocNum
        {
            get { return _DocNum.Value; }
            set { _DocNum = value; }
        }
        public bool ShouldSerializeDocNum()
        {
            return (_DocNum.HasValue);
        }

        private SAPB1.BoDocumentTypes? _DocType;
        public SAPB1.BoDocumentTypes DocType
        {
            get { return _DocType.Value; }
            set { _DocType = value; }
        }
        public bool ShouldSerializeDocType()
        {
            return (_DocType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _HandWritten;
        public SAPB1.BoYesNoEnum HandWritten
        {
            get { return _HandWritten.Value; }
            set { _HandWritten = value; }
        }
        public bool ShouldSerializeHandWritten()
        {
            return (_HandWritten.HasValue);
        }

        private SAPB1.PrintStatusEnum? _Printed;
        public SAPB1.PrintStatusEnum Printed
        {
            get { return _Printed.Value; }
            set { _Printed = value; }
        }
        public bool ShouldSerializePrinted()
        {
            return (_Printed.HasValue);
        }

        private DateTime? _DocDate;
        public DateTime DocDate
        {
            get { return _DocDate.Value; }
            set { _DocDate = value; }
        }
        public bool ShouldSerializeDocDate()
        {
            return (_DocDate.HasValue);
        }

        private DateTime? _DocDueDate;
        public DateTime DocDueDate
        {
            get { return _DocDueDate.Value; }
            set { _DocDueDate = value; }
        }
        public bool ShouldSerializeDocDueDate()
        {
            return (_DocDueDate.HasValue);
        }

        public string CardCode { get; set; }
        public string CardName { get; set; }
        public string Address { get; set; }
        public string NumAtCard { get; set; }
        private decimal? _DocTotal;
        public decimal DocTotal
        {
            get { return _DocTotal.Value; }
            set { _DocTotal = value; }
        }
        public bool ShouldSerializeDocTotal()
        {
            return (_DocTotal.HasValue);
        }

        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

        public string DocCurrency { get; set; }
        private decimal? _DocRate;
        public decimal DocRate
        {
            get { return _DocRate.Value; }
            set { _DocRate = value; }
        }
        public bool ShouldSerializeDocRate()
        {
            return (_DocRate.HasValue);
        }

        public string Reference1 { get; set; }
        public string Reference2 { get; set; }
        public string Comments { get; set; }
        public string JournalMemo { get; set; }
        private int? _PaymentGroupCode;
        public int PaymentGroupCode
        {
            get { return _PaymentGroupCode.Value; }
            set { _PaymentGroupCode = value; }
        }
        public bool ShouldSerializePaymentGroupCode()
        {
            return (_PaymentGroupCode.HasValue);
        }

        private TimeSpan? _DocTime;
        public TimeSpan DocTime
        {
            get { return _DocTime.Value; }
            set { _DocTime = value; }
        }
        public bool ShouldSerializeDocTime()
        {
            return (_DocTime.HasValue);
        }

        private int? _SalesPersonCode;
        public int SalesPersonCode
        {
            get { return _SalesPersonCode.Value; }
            set { _SalesPersonCode = value; }
        }
        public bool ShouldSerializeSalesPersonCode()
        {
            return (_SalesPersonCode.HasValue);
        }

        private int? _TransportationCode;
        public int TransportationCode
        {
            get { return _TransportationCode.Value; }
            set { _TransportationCode = value; }
        }
        public bool ShouldSerializeTransportationCode()
        {
            return (_TransportationCode.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Confirmed;
        public SAPB1.BoYesNoEnum Confirmed
        {
            get { return _Confirmed.Value; }
            set { _Confirmed = value; }
        }
        public bool ShouldSerializeConfirmed()
        {
            return (_Confirmed.HasValue);
        }

        private int? _ImportFileNum;
        public int ImportFileNum
        {
            get { return _ImportFileNum.Value; }
            set { _ImportFileNum = value; }
        }
        public bool ShouldSerializeImportFileNum()
        {
            return (_ImportFileNum.HasValue);
        }

        private SAPB1.BoDocSummaryTypes? _SummeryType;
        public SAPB1.BoDocSummaryTypes SummeryType
        {
            get { return _SummeryType.Value; }
            set { _SummeryType = value; }
        }
        public bool ShouldSerializeSummeryType()
        {
            return (_SummeryType.HasValue);
        }

        private int? _ContactPersonCode;
        public int ContactPersonCode
        {
            get { return _ContactPersonCode.Value; }
            set { _ContactPersonCode = value; }
        }
        public bool ShouldSerializeContactPersonCode()
        {
            return (_ContactPersonCode.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ShowSCN;
        public SAPB1.BoYesNoEnum ShowSCN
        {
            get { return _ShowSCN.Value; }
            set { _ShowSCN = value; }
        }
        public bool ShouldSerializeShowSCN()
        {
            return (_ShowSCN.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private DateTime? _TaxDate;
        public DateTime TaxDate
        {
            get { return _TaxDate.Value; }
            set { _TaxDate = value; }
        }
        public bool ShouldSerializeTaxDate()
        {
            return (_TaxDate.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PartialSupply;
        public SAPB1.BoYesNoEnum PartialSupply
        {
            get { return _PartialSupply.Value; }
            set { _PartialSupply = value; }
        }
        public bool ShouldSerializePartialSupply()
        {
            return (_PartialSupply.HasValue);
        }

        public string DocObjectCode { get; set; }
        public string ShipToCode { get; set; }
        public string Indicator { get; set; }
        public string FederalTaxID { get; set; }
        private decimal? _DiscountPercent;
        public decimal DiscountPercent
        {
            get { return _DiscountPercent.Value; }
            set { _DiscountPercent = value; }
        }
        public bool ShouldSerializeDiscountPercent()
        {
            return (_DiscountPercent.HasValue);
        }

        public string PaymentReference { get; set; }
        private DateTime? _CreationDate;
        public DateTime CreationDate
        {
            get { return _CreationDate.Value; }
            set { _CreationDate = value; }
        }
        public bool ShouldSerializeCreationDate()
        {
            return (_CreationDate.HasValue);
        }

        private DateTime? _UpdateDate;
        public DateTime UpdateDate
        {
            get { return _UpdateDate.Value; }
            set { _UpdateDate = value; }
        }
        public bool ShouldSerializeUpdateDate()
        {
            return (_UpdateDate.HasValue);
        }

        private int? _FinancialPeriod;
        public int FinancialPeriod
        {
            get { return _FinancialPeriod.Value; }
            set { _FinancialPeriod = value; }
        }
        public bool ShouldSerializeFinancialPeriod()
        {
            return (_FinancialPeriod.HasValue);
        }

        private int? _TransNum;
        public int TransNum
        {
            get { return _TransNum.Value; }
            set { _TransNum = value; }
        }
        public bool ShouldSerializeTransNum()
        {
            return (_TransNum.HasValue);
        }

        private decimal? _VatSum;
        public decimal VatSum
        {
            get { return _VatSum.Value; }
            set { _VatSum = value; }
        }
        public bool ShouldSerializeVatSum()
        {
            return (_VatSum.HasValue);
        }

        private decimal? _VatSumSys;
        public decimal VatSumSys
        {
            get { return _VatSumSys.Value; }
            set { _VatSumSys = value; }
        }
        public bool ShouldSerializeVatSumSys()
        {
            return (_VatSumSys.HasValue);
        }

        private decimal? _VatSumFc;
        public decimal VatSumFc
        {
            get { return _VatSumFc.Value; }
            set { _VatSumFc = value; }
        }
        public bool ShouldSerializeVatSumFc()
        {
            return (_VatSumFc.HasValue);
        }

        private SAPB1.BoYesNoEnum? _NetProcedure;
        public SAPB1.BoYesNoEnum NetProcedure
        {
            get { return _NetProcedure.Value; }
            set { _NetProcedure = value; }
        }
        public bool ShouldSerializeNetProcedure()
        {
            return (_NetProcedure.HasValue);
        }

        private decimal? _DocTotalFc;
        public decimal DocTotalFc
        {
            get { return _DocTotalFc.Value; }
            set { _DocTotalFc = value; }
        }
        public bool ShouldSerializeDocTotalFc()
        {
            return (_DocTotalFc.HasValue);
        }

        private decimal? _DocTotalSys;
        public decimal DocTotalSys
        {
            get { return _DocTotalSys.Value; }
            set { _DocTotalSys = value; }
        }
        public bool ShouldSerializeDocTotalSys()
        {
            return (_DocTotalSys.HasValue);
        }

        private int? _Form1099;
        public int Form1099
        {
            get { return _Form1099.Value; }
            set { _Form1099 = value; }
        }
        public bool ShouldSerializeForm1099()
        {
            return (_Form1099.HasValue);
        }

        public string Box1099 { get; set; }
        private SAPB1.BoYesNoEnum? _RevisionPo;
        public SAPB1.BoYesNoEnum RevisionPo
        {
            get { return _RevisionPo.Value; }
            set { _RevisionPo = value; }
        }
        public bool ShouldSerializeRevisionPo()
        {
            return (_RevisionPo.HasValue);
        }

        private DateTime? _RequriedDate;
        public DateTime RequriedDate
        {
            get { return _RequriedDate.Value; }
            set { _RequriedDate = value; }
        }
        public bool ShouldSerializeRequriedDate()
        {
            return (_RequriedDate.HasValue);
        }

        private DateTime? _CancelDate;
        public DateTime CancelDate
        {
            get { return _CancelDate.Value; }
            set { _CancelDate = value; }
        }
        public bool ShouldSerializeCancelDate()
        {
            return (_CancelDate.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockDunning;
        public SAPB1.BoYesNoEnum BlockDunning
        {
            get { return _BlockDunning.Value; }
            set { _BlockDunning = value; }
        }
        public bool ShouldSerializeBlockDunning()
        {
            return (_BlockDunning.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Submitted;
        public SAPB1.BoYesNoEnum Submitted
        {
            get { return _Submitted.Value; }
            set { _Submitted = value; }
        }
        public bool ShouldSerializeSubmitted()
        {
            return (_Submitted.HasValue);
        }

        private int? _Segment;
        public int Segment
        {
            get { return _Segment.Value; }
            set { _Segment = value; }
        }
        public bool ShouldSerializeSegment()
        {
            return (_Segment.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PickStatus;
        public SAPB1.BoYesNoEnum PickStatus
        {
            get { return _PickStatus.Value; }
            set { _PickStatus = value; }
        }
        public bool ShouldSerializePickStatus()
        {
            return (_PickStatus.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Pick;
        public SAPB1.BoYesNoEnum Pick
        {
            get { return _Pick.Value; }
            set { _Pick = value; }
        }
        public bool ShouldSerializePick()
        {
            return (_Pick.HasValue);
        }

        public string PaymentMethod { get; set; }
        private SAPB1.BoYesNoEnum? _PaymentBlock;
        public SAPB1.BoYesNoEnum PaymentBlock
        {
            get { return _PaymentBlock.Value; }
            set { _PaymentBlock = value; }
        }
        public bool ShouldSerializePaymentBlock()
        {
            return (_PaymentBlock.HasValue);
        }

        private int? _PaymentBlockEntry;
        public int PaymentBlockEntry
        {
            get { return _PaymentBlockEntry.Value; }
            set { _PaymentBlockEntry = value; }
        }
        public bool ShouldSerializePaymentBlockEntry()
        {
            return (_PaymentBlockEntry.HasValue);
        }

        public string CentralBankIndicator { get; set; }
        private SAPB1.BoYesNoEnum? _MaximumCashDiscount;
        public SAPB1.BoYesNoEnum MaximumCashDiscount
        {
            get { return _MaximumCashDiscount.Value; }
            set { _MaximumCashDiscount = value; }
        }
        public bool ShouldSerializeMaximumCashDiscount()
        {
            return (_MaximumCashDiscount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Reserve;
        public SAPB1.BoYesNoEnum Reserve
        {
            get { return _Reserve.Value; }
            set { _Reserve = value; }
        }
        public bool ShouldSerializeReserve()
        {
            return (_Reserve.HasValue);
        }

        public string Project { get; set; }
        private DateTime? _ExemptionValidityDateFrom;
        public DateTime ExemptionValidityDateFrom
        {
            get { return _ExemptionValidityDateFrom.Value; }
            set { _ExemptionValidityDateFrom = value; }
        }
        public bool ShouldSerializeExemptionValidityDateFrom()
        {
            return (_ExemptionValidityDateFrom.HasValue);
        }

        private DateTime? _ExemptionValidityDateTo;
        public DateTime ExemptionValidityDateTo
        {
            get { return _ExemptionValidityDateTo.Value; }
            set { _ExemptionValidityDateTo = value; }
        }
        public bool ShouldSerializeExemptionValidityDateTo()
        {
            return (_ExemptionValidityDateTo.HasValue);
        }

        private SAPB1.BoDocWhsUpdateTypes? _WareHouseUpdateType;
        public SAPB1.BoDocWhsUpdateTypes WareHouseUpdateType
        {
            get { return _WareHouseUpdateType.Value; }
            set { _WareHouseUpdateType = value; }
        }
        public bool ShouldSerializeWareHouseUpdateType()
        {
            return (_WareHouseUpdateType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Rounding;
        public SAPB1.BoYesNoEnum Rounding
        {
            get { return _Rounding.Value; }
            set { _Rounding = value; }
        }
        public bool ShouldSerializeRounding()
        {
            return (_Rounding.HasValue);
        }

        public string ExternalCorrectedDocNum { get; set; }
        private int? _InternalCorrectedDocNum;
        public int InternalCorrectedDocNum
        {
            get { return _InternalCorrectedDocNum.Value; }
            set { _InternalCorrectedDocNum = value; }
        }
        public bool ShouldSerializeInternalCorrectedDocNum()
        {
            return (_InternalCorrectedDocNum.HasValue);
        }

        private int? _NextCorrectingDocument;
        public int NextCorrectingDocument
        {
            get { return _NextCorrectingDocument.Value; }
            set { _NextCorrectingDocument = value; }
        }
        public bool ShouldSerializeNextCorrectingDocument()
        {
            return (_NextCorrectingDocument.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DeferredTax;
        public SAPB1.BoYesNoEnum DeferredTax
        {
            get { return _DeferredTax.Value; }
            set { _DeferredTax = value; }
        }
        public bool ShouldSerializeDeferredTax()
        {
            return (_DeferredTax.HasValue);
        }

        public string TaxExemptionLetterNum { get; set; }
        private decimal? _WTApplied;
        public decimal WTApplied
        {
            get { return _WTApplied.Value; }
            set { _WTApplied = value; }
        }
        public bool ShouldSerializeWTApplied()
        {
            return (_WTApplied.HasValue);
        }

        private decimal? _WTAppliedFC;
        public decimal WTAppliedFC
        {
            get { return _WTAppliedFC.Value; }
            set { _WTAppliedFC = value; }
        }
        public bool ShouldSerializeWTAppliedFC()
        {
            return (_WTAppliedFC.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BillOfExchangeReserved;
        public SAPB1.BoYesNoEnum BillOfExchangeReserved
        {
            get { return _BillOfExchangeReserved.Value; }
            set { _BillOfExchangeReserved = value; }
        }
        public bool ShouldSerializeBillOfExchangeReserved()
        {
            return (_BillOfExchangeReserved.HasValue);
        }

        public string AgentCode { get; set; }
        private decimal? _WTAppliedSC;
        public decimal WTAppliedSC
        {
            get { return _WTAppliedSC.Value; }
            set { _WTAppliedSC = value; }
        }
        public bool ShouldSerializeWTAppliedSC()
        {
            return (_WTAppliedSC.HasValue);
        }

        private decimal? _TotalEqualizationTax;
        public decimal TotalEqualizationTax
        {
            get { return _TotalEqualizationTax.Value; }
            set { _TotalEqualizationTax = value; }
        }
        public bool ShouldSerializeTotalEqualizationTax()
        {
            return (_TotalEqualizationTax.HasValue);
        }

        private decimal? _TotalEqualizationTaxFC;
        public decimal TotalEqualizationTaxFC
        {
            get { return _TotalEqualizationTaxFC.Value; }
            set { _TotalEqualizationTaxFC = value; }
        }
        public bool ShouldSerializeTotalEqualizationTaxFC()
        {
            return (_TotalEqualizationTaxFC.HasValue);
        }

        private decimal? _TotalEqualizationTaxSC;
        public decimal TotalEqualizationTaxSC
        {
            get { return _TotalEqualizationTaxSC.Value; }
            set { _TotalEqualizationTaxSC = value; }
        }
        public bool ShouldSerializeTotalEqualizationTaxSC()
        {
            return (_TotalEqualizationTaxSC.HasValue);
        }

        private int? _NumberOfInstallments;
        public int NumberOfInstallments
        {
            get { return _NumberOfInstallments.Value; }
            set { _NumberOfInstallments = value; }
        }
        public bool ShouldSerializeNumberOfInstallments()
        {
            return (_NumberOfInstallments.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ApplyTaxOnFirstInstallment;
        public SAPB1.BoYesNoEnum ApplyTaxOnFirstInstallment
        {
            get { return _ApplyTaxOnFirstInstallment.Value; }
            set { _ApplyTaxOnFirstInstallment = value; }
        }
        public bool ShouldSerializeApplyTaxOnFirstInstallment()
        {
            return (_ApplyTaxOnFirstInstallment.HasValue);
        }

        private decimal? _WTNonSubjectAmount;
        public decimal WTNonSubjectAmount
        {
            get { return _WTNonSubjectAmount.Value; }
            set { _WTNonSubjectAmount = value; }
        }
        public bool ShouldSerializeWTNonSubjectAmount()
        {
            return (_WTNonSubjectAmount.HasValue);
        }

        private decimal? _WTNonSubjectAmountSC;
        public decimal WTNonSubjectAmountSC
        {
            get { return _WTNonSubjectAmountSC.Value; }
            set { _WTNonSubjectAmountSC = value; }
        }
        public bool ShouldSerializeWTNonSubjectAmountSC()
        {
            return (_WTNonSubjectAmountSC.HasValue);
        }

        private decimal? _WTNonSubjectAmountFC;
        public decimal WTNonSubjectAmountFC
        {
            get { return _WTNonSubjectAmountFC.Value; }
            set { _WTNonSubjectAmountFC = value; }
        }
        public bool ShouldSerializeWTNonSubjectAmountFC()
        {
            return (_WTNonSubjectAmountFC.HasValue);
        }

        private decimal? _WTExemptedAmount;
        public decimal WTExemptedAmount
        {
            get { return _WTExemptedAmount.Value; }
            set { _WTExemptedAmount = value; }
        }
        public bool ShouldSerializeWTExemptedAmount()
        {
            return (_WTExemptedAmount.HasValue);
        }

        private decimal? _WTExemptedAmountSC;
        public decimal WTExemptedAmountSC
        {
            get { return _WTExemptedAmountSC.Value; }
            set { _WTExemptedAmountSC = value; }
        }
        public bool ShouldSerializeWTExemptedAmountSC()
        {
            return (_WTExemptedAmountSC.HasValue);
        }

        private decimal? _WTExemptedAmountFC;
        public decimal WTExemptedAmountFC
        {
            get { return _WTExemptedAmountFC.Value; }
            set { _WTExemptedAmountFC = value; }
        }
        public bool ShouldSerializeWTExemptedAmountFC()
        {
            return (_WTExemptedAmountFC.HasValue);
        }

        private decimal? _BaseAmount;
        public decimal BaseAmount
        {
            get { return _BaseAmount.Value; }
            set { _BaseAmount = value; }
        }
        public bool ShouldSerializeBaseAmount()
        {
            return (_BaseAmount.HasValue);
        }

        private decimal? _BaseAmountSC;
        public decimal BaseAmountSC
        {
            get { return _BaseAmountSC.Value; }
            set { _BaseAmountSC = value; }
        }
        public bool ShouldSerializeBaseAmountSC()
        {
            return (_BaseAmountSC.HasValue);
        }

        private decimal? _BaseAmountFC;
        public decimal BaseAmountFC
        {
            get { return _BaseAmountFC.Value; }
            set { _BaseAmountFC = value; }
        }
        public bool ShouldSerializeBaseAmountFC()
        {
            return (_BaseAmountFC.HasValue);
        }

        private decimal? _WTAmount;
        public decimal WTAmount
        {
            get { return _WTAmount.Value; }
            set { _WTAmount = value; }
        }
        public bool ShouldSerializeWTAmount()
        {
            return (_WTAmount.HasValue);
        }

        private decimal? _WTAmountSC;
        public decimal WTAmountSC
        {
            get { return _WTAmountSC.Value; }
            set { _WTAmountSC = value; }
        }
        public bool ShouldSerializeWTAmountSC()
        {
            return (_WTAmountSC.HasValue);
        }

        private decimal? _WTAmountFC;
        public decimal WTAmountFC
        {
            get { return _WTAmountFC.Value; }
            set { _WTAmountFC = value; }
        }
        public bool ShouldSerializeWTAmountFC()
        {
            return (_WTAmountFC.HasValue);
        }

        private DateTime? _VatDate;
        public DateTime VatDate
        {
            get { return _VatDate.Value; }
            set { _VatDate = value; }
        }
        public bool ShouldSerializeVatDate()
        {
            return (_VatDate.HasValue);
        }

        private int? _DocumentsOwner;
        public int DocumentsOwner
        {
            get { return _DocumentsOwner.Value; }
            set { _DocumentsOwner = value; }
        }
        public bool ShouldSerializeDocumentsOwner()
        {
            return (_DocumentsOwner.HasValue);
        }

        public string FolioPrefixString { get; set; }
        private int? _FolioNumber;
        public int FolioNumber
        {
            get { return _FolioNumber.Value; }
            set { _FolioNumber = value; }
        }
        public bool ShouldSerializeFolioNumber()
        {
            return (_FolioNumber.HasValue);
        }

        private SAPB1.BoDocumentSubType? _DocumentSubType;
        public SAPB1.BoDocumentSubType DocumentSubType
        {
            get { return _DocumentSubType.Value; }
            set { _DocumentSubType = value; }
        }
        public bool ShouldSerializeDocumentSubType()
        {
            return (_DocumentSubType.HasValue);
        }

        public string BPChannelCode { get; set; }
        private int? _BPChannelContact;
        public int BPChannelContact
        {
            get { return _BPChannelContact.Value; }
            set { _BPChannelContact = value; }
        }
        public bool ShouldSerializeBPChannelContact()
        {
            return (_BPChannelContact.HasValue);
        }

        public string Address2 { get; set; }
        private SAPB1.BoStatus? _DocumentStatus;
        public SAPB1.BoStatus DocumentStatus
        {
            get { return _DocumentStatus.Value; }
            set { _DocumentStatus = value; }
        }
        public bool ShouldSerializeDocumentStatus()
        {
            return (_DocumentStatus.HasValue);
        }

        public string PeriodIndicator { get; set; }
        public string PayToCode { get; set; }
        public string ManualNumber { get; set; }
        private SAPB1.BoYesNoEnum? _UseShpdGoodsAct;
        public SAPB1.BoYesNoEnum UseShpdGoodsAct
        {
            get { return _UseShpdGoodsAct.Value; }
            set { _UseShpdGoodsAct = value; }
        }
        public bool ShouldSerializeUseShpdGoodsAct()
        {
            return (_UseShpdGoodsAct.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsPayToBank;
        public SAPB1.BoYesNoEnum IsPayToBank
        {
            get { return _IsPayToBank.Value; }
            set { _IsPayToBank = value; }
        }
        public bool ShouldSerializeIsPayToBank()
        {
            return (_IsPayToBank.HasValue);
        }

        public string PayToBankCountry { get; set; }
        public string PayToBankCode { get; set; }
        public string PayToBankAccountNo { get; set; }
        public string PayToBankBranch { get; set; }
        private int? _BPL_IDAssignedToInvoice;
        public int BPL_IDAssignedToInvoice
        {
            get { return _BPL_IDAssignedToInvoice.Value; }
            set { _BPL_IDAssignedToInvoice = value; }
        }
        public bool ShouldSerializeBPL_IDAssignedToInvoice()
        {
            return (_BPL_IDAssignedToInvoice.HasValue);
        }

        private decimal? _DownPayment;
        public decimal DownPayment
        {
            get { return _DownPayment.Value; }
            set { _DownPayment = value; }
        }
        public bool ShouldSerializeDownPayment()
        {
            return (_DownPayment.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReserveInvoice;
        public SAPB1.BoYesNoEnum ReserveInvoice
        {
            get { return _ReserveInvoice.Value; }
            set { _ReserveInvoice = value; }
        }
        public bool ShouldSerializeReserveInvoice()
        {
            return (_ReserveInvoice.HasValue);
        }

        private int? _LanguageCode;
        public int LanguageCode
        {
            get { return _LanguageCode.Value; }
            set { _LanguageCode = value; }
        }
        public bool ShouldSerializeLanguageCode()
        {
            return (_LanguageCode.HasValue);
        }

        public string TrackingNumber { get; set; }
        public string PickRemark { get; set; }
        private DateTime? _ClosingDate;
        public DateTime ClosingDate
        {
            get { return _ClosingDate.Value; }
            set { _ClosingDate = value; }
        }
        public bool ShouldSerializeClosingDate()
        {
            return (_ClosingDate.HasValue);
        }

        private int? _SequenceCode;
        public int SequenceCode
        {
            get { return _SequenceCode.Value; }
            set { _SequenceCode = value; }
        }
        public bool ShouldSerializeSequenceCode()
        {
            return (_SequenceCode.HasValue);
        }

        private int? _SequenceSerial;
        public int SequenceSerial
        {
            get { return _SequenceSerial.Value; }
            set { _SequenceSerial = value; }
        }
        public bool ShouldSerializeSequenceSerial()
        {
            return (_SequenceSerial.HasValue);
        }

        public string SeriesString { get; set; }
        public string SubSeriesString { get; set; }
        public string SequenceModel { get; set; }
        private SAPB1.BoYesNoEnum? _UseCorrectionVATGroup;
        public SAPB1.BoYesNoEnum UseCorrectionVATGroup
        {
            get { return _UseCorrectionVATGroup.Value; }
            set { _UseCorrectionVATGroup = value; }
        }
        public bool ShouldSerializeUseCorrectionVATGroup()
        {
            return (_UseCorrectionVATGroup.HasValue);
        }

        private decimal? _TotalDiscount;
        public decimal TotalDiscount
        {
            get { return _TotalDiscount.Value; }
            set { _TotalDiscount = value; }
        }
        public bool ShouldSerializeTotalDiscount()
        {
            return (_TotalDiscount.HasValue);
        }

        private decimal? _DownPaymentAmount;
        public decimal DownPaymentAmount
        {
            get { return _DownPaymentAmount.Value; }
            set { _DownPaymentAmount = value; }
        }
        public bool ShouldSerializeDownPaymentAmount()
        {
            return (_DownPaymentAmount.HasValue);
        }

        private decimal? _DownPaymentPercentage;
        public decimal DownPaymentPercentage
        {
            get { return _DownPaymentPercentage.Value; }
            set { _DownPaymentPercentage = value; }
        }
        public bool ShouldSerializeDownPaymentPercentage()
        {
            return (_DownPaymentPercentage.HasValue);
        }

        private SAPB1.DownPaymentTypeEnum? _DownPaymentType;
        public SAPB1.DownPaymentTypeEnum DownPaymentType
        {
            get { return _DownPaymentType.Value; }
            set { _DownPaymentType = value; }
        }
        public bool ShouldSerializeDownPaymentType()
        {
            return (_DownPaymentType.HasValue);
        }

        private decimal? _DownPaymentAmountSC;
        public decimal DownPaymentAmountSC
        {
            get { return _DownPaymentAmountSC.Value; }
            set { _DownPaymentAmountSC = value; }
        }
        public bool ShouldSerializeDownPaymentAmountSC()
        {
            return (_DownPaymentAmountSC.HasValue);
        }

        private decimal? _DownPaymentAmountFC;
        public decimal DownPaymentAmountFC
        {
            get { return _DownPaymentAmountFC.Value; }
            set { _DownPaymentAmountFC = value; }
        }
        public bool ShouldSerializeDownPaymentAmountFC()
        {
            return (_DownPaymentAmountFC.HasValue);
        }

        private decimal? _VatPercent;
        public decimal VatPercent
        {
            get { return _VatPercent.Value; }
            set { _VatPercent = value; }
        }
        public bool ShouldSerializeVatPercent()
        {
            return (_VatPercent.HasValue);
        }

        private decimal? _ServiceGrossProfitPercent;
        public decimal ServiceGrossProfitPercent
        {
            get { return _ServiceGrossProfitPercent.Value; }
            set { _ServiceGrossProfitPercent = value; }
        }
        public bool ShouldSerializeServiceGrossProfitPercent()
        {
            return (_ServiceGrossProfitPercent.HasValue);
        }

        public string OpeningRemarks { get; set; }
        public string ClosingRemarks { get; set; }
        private decimal? _RoundingDiffAmount;
        public decimal RoundingDiffAmount
        {
            get { return _RoundingDiffAmount.Value; }
            set { _RoundingDiffAmount = value; }
        }
        public bool ShouldSerializeRoundingDiffAmount()
        {
            return (_RoundingDiffAmount.HasValue);
        }

        private decimal? _RoundingDiffAmountFC;
        public decimal RoundingDiffAmountFC
        {
            get { return _RoundingDiffAmountFC.Value; }
            set { _RoundingDiffAmountFC = value; }
        }
        public bool ShouldSerializeRoundingDiffAmountFC()
        {
            return (_RoundingDiffAmountFC.HasValue);
        }

        private decimal? _RoundingDiffAmountSC;
        public decimal RoundingDiffAmountSC
        {
            get { return _RoundingDiffAmountSC.Value; }
            set { _RoundingDiffAmountSC = value; }
        }
        public bool ShouldSerializeRoundingDiffAmountSC()
        {
            return (_RoundingDiffAmountSC.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Cancelled;
        public SAPB1.BoYesNoEnum Cancelled
        {
            get { return _Cancelled.Value; }
            set { _Cancelled = value; }
        }
        public bool ShouldSerializeCancelled()
        {
            return (_Cancelled.HasValue);
        }

        public string SignatureInputMessage { get; set; }
        public string SignatureDigest { get; set; }
        public string CertificationNumber { get; set; }
        private int? _PrivateKeyVersion;
        public int PrivateKeyVersion
        {
            get { return _PrivateKeyVersion.Value; }
            set { _PrivateKeyVersion = value; }
        }
        public bool ShouldSerializePrivateKeyVersion()
        {
            return (_PrivateKeyVersion.HasValue);
        }

        public string ControlAccount { get; set; }
        private SAPB1.BoYesNoEnum? _InsuranceOperation347;
        public SAPB1.BoYesNoEnum InsuranceOperation347
        {
            get { return _InsuranceOperation347.Value; }
            set { _InsuranceOperation347 = value; }
        }
        public bool ShouldSerializeInsuranceOperation347()
        {
            return (_InsuranceOperation347.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ArchiveNonremovableSalesQuotation;
        public SAPB1.BoYesNoEnum ArchiveNonremovableSalesQuotation
        {
            get { return _ArchiveNonremovableSalesQuotation.Value; }
            set { _ArchiveNonremovableSalesQuotation = value; }
        }
        public bool ShouldSerializeArchiveNonremovableSalesQuotation()
        {
            return (_ArchiveNonremovableSalesQuotation.HasValue);
        }

        private int? _GTSChecker;
        public int GTSChecker
        {
            get { return _GTSChecker.Value; }
            set { _GTSChecker = value; }
        }
        public bool ShouldSerializeGTSChecker()
        {
            return (_GTSChecker.HasValue);
        }

        private int? _GTSPayee;
        public int GTSPayee
        {
            get { return _GTSPayee.Value; }
            set { _GTSPayee = value; }
        }
        public bool ShouldSerializeGTSPayee()
        {
            return (_GTSPayee.HasValue);
        }

        private int? _ExtraMonth;
        public int ExtraMonth
        {
            get { return _ExtraMonth.Value; }
            set { _ExtraMonth = value; }
        }
        public bool ShouldSerializeExtraMonth()
        {
            return (_ExtraMonth.HasValue);
        }

        private int? _ExtraDays;
        public int ExtraDays
        {
            get { return _ExtraDays.Value; }
            set { _ExtraDays = value; }
        }
        public bool ShouldSerializeExtraDays()
        {
            return (_ExtraDays.HasValue);
        }

        private int? _CashDiscountDateOffset;
        public int CashDiscountDateOffset
        {
            get { return _CashDiscountDateOffset.Value; }
            set { _CashDiscountDateOffset = value; }
        }
        public bool ShouldSerializeCashDiscountDateOffset()
        {
            return (_CashDiscountDateOffset.HasValue);
        }

        private SAPB1.BoPayTermDueTypes? _StartFrom;
        public SAPB1.BoPayTermDueTypes StartFrom
        {
            get { return _StartFrom.Value; }
            set { _StartFrom = value; }
        }
        public bool ShouldSerializeStartFrom()
        {
            return (_StartFrom.HasValue);
        }

        private SAPB1.BoYesNoEnum? _NTSApproved;
        public SAPB1.BoYesNoEnum NTSApproved
        {
            get { return _NTSApproved.Value; }
            set { _NTSApproved = value; }
        }
        public bool ShouldSerializeNTSApproved()
        {
            return (_NTSApproved.HasValue);
        }

        private int? _ETaxWebSite;
        public int ETaxWebSite
        {
            get { return _ETaxWebSite.Value; }
            set { _ETaxWebSite = value; }
        }
        public bool ShouldSerializeETaxWebSite()
        {
            return (_ETaxWebSite.HasValue);
        }

        public string ETaxNumber { get; set; }
        public string NTSApprovedNumber { get; set; }
        private SAPB1.EDocGenerationTypeEnum? _EDocGenerationType;
        public SAPB1.EDocGenerationTypeEnum EDocGenerationType
        {
            get { return _EDocGenerationType.Value; }
            set { _EDocGenerationType = value; }
        }
        public bool ShouldSerializeEDocGenerationType()
        {
            return (_EDocGenerationType.HasValue);
        }

        private int? _EDocSeries;
        public int EDocSeries
        {
            get { return _EDocSeries.Value; }
            set { _EDocSeries = value; }
        }
        public bool ShouldSerializeEDocSeries()
        {
            return (_EDocSeries.HasValue);
        }

        public string EDocNum { get; set; }
        private int? _EDocExportFormat;
        public int EDocExportFormat
        {
            get { return _EDocExportFormat.Value; }
            set { _EDocExportFormat = value; }
        }
        public bool ShouldSerializeEDocExportFormat()
        {
            return (_EDocExportFormat.HasValue);
        }

        private SAPB1.EDocStatusEnum? _EDocStatus;
        public SAPB1.EDocStatusEnum EDocStatus
        {
            get { return _EDocStatus.Value; }
            set { _EDocStatus = value; }
        }
        public bool ShouldSerializeEDocStatus()
        {
            return (_EDocStatus.HasValue);
        }

        public string EDocErrorCode { get; set; }
        public string EDocErrorMessage { get; set; }
        private SAPB1.BoSoStatus? _DownPaymentStatus;
        public SAPB1.BoSoStatus DownPaymentStatus
        {
            get { return _DownPaymentStatus.Value; }
            set { _DownPaymentStatus = value; }
        }
        public bool ShouldSerializeDownPaymentStatus()
        {
            return (_DownPaymentStatus.HasValue);
        }

        private int? _GroupSeries;
        public int GroupSeries
        {
            get { return _GroupSeries.Value; }
            set { _GroupSeries = value; }
        }
        public bool ShouldSerializeGroupSeries()
        {
            return (_GroupSeries.HasValue);
        }

        private int? _GroupNumber;
        public int GroupNumber
        {
            get { return _GroupNumber.Value; }
            set { _GroupNumber = value; }
        }
        public bool ShouldSerializeGroupNumber()
        {
            return (_GroupNumber.HasValue);
        }

        private SAPB1.BoYesNoEnum? _GroupHandWritten;
        public SAPB1.BoYesNoEnum GroupHandWritten
        {
            get { return _GroupHandWritten.Value; }
            set { _GroupHandWritten = value; }
        }
        public bool ShouldSerializeGroupHandWritten()
        {
            return (_GroupHandWritten.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReopenOriginalDocument;
        public SAPB1.BoYesNoEnum ReopenOriginalDocument
        {
            get { return _ReopenOriginalDocument.Value; }
            set { _ReopenOriginalDocument = value; }
        }
        public bool ShouldSerializeReopenOriginalDocument()
        {
            return (_ReopenOriginalDocument.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReopenManuallyClosedOrCanceledDocument;
        public SAPB1.BoYesNoEnum ReopenManuallyClosedOrCanceledDocument
        {
            get { return _ReopenManuallyClosedOrCanceledDocument.Value; }
            set { _ReopenManuallyClosedOrCanceledDocument = value; }
        }
        public bool ShouldSerializeReopenManuallyClosedOrCanceledDocument()
        {
            return (_ReopenManuallyClosedOrCanceledDocument.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CreateOnlineQuotation;
        public SAPB1.BoYesNoEnum CreateOnlineQuotation
        {
            get { return _CreateOnlineQuotation.Value; }
            set { _CreateOnlineQuotation = value; }
        }
        public bool ShouldSerializeCreateOnlineQuotation()
        {
            return (_CreateOnlineQuotation.HasValue);
        }

        public string POSEquipmentNumber { get; set; }
        public string POSManufacturerSerialNumber { get; set; }
        private int? _POSCashierNumber;
        public int POSCashierNumber
        {
            get { return _POSCashierNumber.Value; }
            set { _POSCashierNumber = value; }
        }
        public bool ShouldSerializePOSCashierNumber()
        {
            return (_POSCashierNumber.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ApplyCurrentVATRatesForDownPaymentsToDraw;
        public SAPB1.BoYesNoEnum ApplyCurrentVATRatesForDownPaymentsToDraw
        {
            get { return _ApplyCurrentVATRatesForDownPaymentsToDraw.Value; }
            set { _ApplyCurrentVATRatesForDownPaymentsToDraw = value; }
        }
        public bool ShouldSerializeApplyCurrentVATRatesForDownPaymentsToDraw()
        {
            return (_ApplyCurrentVATRatesForDownPaymentsToDraw.HasValue);
        }

        private SAPB1.ClosingOptionEnum? _ClosingOption;
        public SAPB1.ClosingOptionEnum ClosingOption
        {
            get { return _ClosingOption.Value; }
            set { _ClosingOption = value; }
        }
        public bool ShouldSerializeClosingOption()
        {
            return (_ClosingOption.HasValue);
        }

        private DateTime? _SpecifiedClosingDate;
        public DateTime SpecifiedClosingDate
        {
            get { return _SpecifiedClosingDate.Value; }
            set { _SpecifiedClosingDate = value; }
        }
        public bool ShouldSerializeSpecifiedClosingDate()
        {
            return (_SpecifiedClosingDate.HasValue);
        }

        private SAPB1.BoYesNoEnum? _OpenForLandedCosts;
        public SAPB1.BoYesNoEnum OpenForLandedCosts
        {
            get { return _OpenForLandedCosts.Value; }
            set { _OpenForLandedCosts = value; }
        }
        public bool ShouldSerializeOpenForLandedCosts()
        {
            return (_OpenForLandedCosts.HasValue);
        }

        private SAPB1.DocumentAuthorizationStatusEnum? _AuthorizationStatus;
        public SAPB1.DocumentAuthorizationStatusEnum AuthorizationStatus
        {
            get { return _AuthorizationStatus.Value; }
            set { _AuthorizationStatus = value; }
        }
        public bool ShouldSerializeAuthorizationStatus()
        {
            return (_AuthorizationStatus.HasValue);
        }

        private decimal? _TotalDiscountFC;
        public decimal TotalDiscountFC
        {
            get { return _TotalDiscountFC.Value; }
            set { _TotalDiscountFC = value; }
        }
        public bool ShouldSerializeTotalDiscountFC()
        {
            return (_TotalDiscountFC.HasValue);
        }

        private decimal? _TotalDiscountSC;
        public decimal TotalDiscountSC
        {
            get { return _TotalDiscountSC.Value; }
            set { _TotalDiscountSC = value; }
        }
        public bool ShouldSerializeTotalDiscountSC()
        {
            return (_TotalDiscountSC.HasValue);
        }

        private SAPB1.BoYesNoEnum? _RelevantToGTS;
        public SAPB1.BoYesNoEnum RelevantToGTS
        {
            get { return _RelevantToGTS.Value; }
            set { _RelevantToGTS = value; }
        }
        public bool ShouldSerializeRelevantToGTS()
        {
            return (_RelevantToGTS.HasValue);
        }

        public string BPLName { get; set; }
        public string VATRegNum { get; set; }
        private int? _AnnualInvoiceDeclarationReference;
        public int AnnualInvoiceDeclarationReference
        {
            get { return _AnnualInvoiceDeclarationReference.Value; }
            set { _AnnualInvoiceDeclarationReference = value; }
        }
        public bool ShouldSerializeAnnualInvoiceDeclarationReference()
        {
            return (_AnnualInvoiceDeclarationReference.HasValue);
        }

        public string Supplier { get; set; }
        private int? _Releaser;
        public int Releaser
        {
            get { return _Releaser.Value; }
            set { _Releaser = value; }
        }
        public bool ShouldSerializeReleaser()
        {
            return (_Releaser.HasValue);
        }

        private int? _Receiver;
        public int Receiver
        {
            get { return _Receiver.Value; }
            set { _Receiver = value; }
        }
        public bool ShouldSerializeReceiver()
        {
            return (_Receiver.HasValue);
        }

        private int? _BlanketAgreementNumber;
        public int BlanketAgreementNumber
        {
            get { return _BlanketAgreementNumber.Value; }
            set { _BlanketAgreementNumber = value; }
        }
        public bool ShouldSerializeBlanketAgreementNumber()
        {
            return (_BlanketAgreementNumber.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsAlteration;
        public SAPB1.BoYesNoEnum IsAlteration
        {
            get { return _IsAlteration.Value; }
            set { _IsAlteration = value; }
        }
        public bool ShouldSerializeIsAlteration()
        {
            return (_IsAlteration.HasValue);
        }

        private SAPB1.CancelStatusEnum? _CancelStatus;
        public SAPB1.CancelStatusEnum CancelStatus
        {
            get { return _CancelStatus.Value; }
            set { _CancelStatus = value; }
        }
        public bool ShouldSerializeCancelStatus()
        {
            return (_CancelStatus.HasValue);
        }

        private DateTime? _AssetValueDate;
        public DateTime AssetValueDate
        {
            get { return _AssetValueDate.Value; }
            set { _AssetValueDate = value; }
        }
        public bool ShouldSerializeAssetValueDate()
        {
            return (_AssetValueDate.HasValue);
        }

        public string Requester { get; set; }
        public string RequesterName { get; set; }
        private int? _RequesterBranch;
        public int RequesterBranch
        {
            get { return _RequesterBranch.Value; }
            set { _RequesterBranch = value; }
        }
        public bool ShouldSerializeRequesterBranch()
        {
            return (_RequesterBranch.HasValue);
        }

        private int? _RequesterDepartment;
        public int RequesterDepartment
        {
            get { return _RequesterDepartment.Value; }
            set { _RequesterDepartment = value; }
        }
        public bool ShouldSerializeRequesterDepartment()
        {
            return (_RequesterDepartment.HasValue);
        }

        public string RequesterEmail { get; set; }
        private SAPB1.BoYesNoEnum? _SendNotification;
        public SAPB1.BoYesNoEnum SendNotification
        {
            get { return _SendNotification.Value; }
            set { _SendNotification = value; }
        }
        public bool ShouldSerializeSendNotification()
        {
            return (_SendNotification.HasValue);
        }

        private int? _ReqType;
        public int ReqType
        {
            get { return _ReqType.Value; }
            set { _ReqType = value; }
        }
        public bool ShouldSerializeReqType()
        {
            return (_ReqType.HasValue);
        }

        private SAPB1.DocumentDeliveryTypeEnum? _DocumentDelivery;
        public SAPB1.DocumentDeliveryTypeEnum DocumentDelivery
        {
            get { return _DocumentDelivery.Value; }
            set { _DocumentDelivery = value; }
        }
        public bool ShouldSerializeDocumentDelivery()
        {
            return (_DocumentDelivery.HasValue);
        }

        public string AuthorizationCode { get; set; }
        private DateTime? _StartDeliveryDate;
        public DateTime StartDeliveryDate
        {
            get { return _StartDeliveryDate.Value; }
            set { _StartDeliveryDate = value; }
        }
        public bool ShouldSerializeStartDeliveryDate()
        {
            return (_StartDeliveryDate.HasValue);
        }

        private TimeSpan? _StartDeliveryTime;
        public TimeSpan StartDeliveryTime
        {
            get { return _StartDeliveryTime.Value; }
            set { _StartDeliveryTime = value; }
        }
        public bool ShouldSerializeStartDeliveryTime()
        {
            return (_StartDeliveryTime.HasValue);
        }

        private DateTime? _EndDeliveryDate;
        public DateTime EndDeliveryDate
        {
            get { return _EndDeliveryDate.Value; }
            set { _EndDeliveryDate = value; }
        }
        public bool ShouldSerializeEndDeliveryDate()
        {
            return (_EndDeliveryDate.HasValue);
        }

        private TimeSpan? _EndDeliveryTime;
        public TimeSpan EndDeliveryTime
        {
            get { return _EndDeliveryTime.Value; }
            set { _EndDeliveryTime = value; }
        }
        public bool ShouldSerializeEndDeliveryTime()
        {
            return (_EndDeliveryTime.HasValue);
        }

        public string VehiclePlate { get; set; }
        public string ATDocumentType { get; set; }
        private SAPB1.ElecCommStatusEnum? _ElecCommStatus;
        public SAPB1.ElecCommStatusEnum ElecCommStatus
        {
            get { return _ElecCommStatus.Value; }
            set { _ElecCommStatus = value; }
        }
        public bool ShouldSerializeElecCommStatus()
        {
            return (_ElecCommStatus.HasValue);
        }

        public string ElecCommMessage { get; set; }
        private SAPB1.BoYesNoEnum? _ReuseDocumentNum;
        public SAPB1.BoYesNoEnum ReuseDocumentNum
        {
            get { return _ReuseDocumentNum.Value; }
            set { _ReuseDocumentNum = value; }
        }
        public bool ShouldSerializeReuseDocumentNum()
        {
            return (_ReuseDocumentNum.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReuseNotaFiscalNum;
        public SAPB1.BoYesNoEnum ReuseNotaFiscalNum
        {
            get { return _ReuseNotaFiscalNum.Value; }
            set { _ReuseNotaFiscalNum = value; }
        }
        public bool ShouldSerializeReuseNotaFiscalNum()
        {
            return (_ReuseNotaFiscalNum.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PrintSEPADirect;
        public SAPB1.BoYesNoEnum PrintSEPADirect
        {
            get { return _PrintSEPADirect.Value; }
            set { _PrintSEPADirect = value; }
        }
        public bool ShouldSerializePrintSEPADirect()
        {
            return (_PrintSEPADirect.HasValue);
        }

        public string FiscalDocNum { get; set; }
        private int? _POSDailySummaryNo;
        public int POSDailySummaryNo
        {
            get { return _POSDailySummaryNo.Value; }
            set { _POSDailySummaryNo = value; }
        }
        public bool ShouldSerializePOSDailySummaryNo()
        {
            return (_POSDailySummaryNo.HasValue);
        }

        private int? _POSReceiptNo;
        public int POSReceiptNo
        {
            get { return _POSReceiptNo.Value; }
            set { _POSReceiptNo = value; }
        }
        public bool ShouldSerializePOSReceiptNo()
        {
            return (_POSReceiptNo.HasValue);
        }

        public string PointOfIssueCode { get; set; }
        private SAPB1.FolioLetterEnum? _Letter;
        public SAPB1.FolioLetterEnum Letter
        {
            get { return _Letter.Value; }
            set { _Letter = value; }
        }
        public bool ShouldSerializeLetter()
        {
            return (_Letter.HasValue);
        }

        private int? _FolioNumberFrom;
        public int FolioNumberFrom
        {
            get { return _FolioNumberFrom.Value; }
            set { _FolioNumberFrom = value; }
        }
        public bool ShouldSerializeFolioNumberFrom()
        {
            return (_FolioNumberFrom.HasValue);
        }

        private int? _FolioNumberTo;
        public int FolioNumberTo
        {
            get { return _FolioNumberTo.Value; }
            set { _FolioNumberTo = value; }
        }
        public bool ShouldSerializeFolioNumberTo()
        {
            return (_FolioNumberTo.HasValue);
        }

        private SAPB1.BoInterimDocTypes? _InterimType;
        public SAPB1.BoInterimDocTypes InterimType
        {
            get { return _InterimType.Value; }
            set { _InterimType = value; }
        }
        public bool ShouldSerializeInterimType()
        {
            return (_InterimType.HasValue);
        }

        private int? _RelatedType;
        public int RelatedType
        {
            get { return _RelatedType.Value; }
            set { _RelatedType = value; }
        }
        public bool ShouldSerializeRelatedType()
        {
            return (_RelatedType.HasValue);
        }

        private int? _RelatedEntry;
        public int RelatedEntry
        {
            get { return _RelatedEntry.Value; }
            set { _RelatedEntry = value; }
        }
        public bool ShouldSerializeRelatedEntry()
        {
            return (_RelatedEntry.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.Document_ApprovalRequest> Document_ApprovalRequests { get; set; }
        public System.Collections.Generic.List<SAPB1.DocumentLine> DocumentLines { get; set; }
        public System.Collections.Generic.List<SAPB1.DocumentAdditionalExpense> DocumentAdditionalExpenses { get; set; }
        public System.Collections.Generic.List<SAPB1.WithholdingTaxDataWTX> WithholdingTaxDataWTXCollection { get; set; }
        public System.Collections.Generic.List<SAPB1.WithholdingTaxData> WithholdingTaxDataCollection { get; set; }
        public System.Collections.Generic.List<SAPB1.DocumentPackage> DocumentPackages { get; set; }
        public System.Collections.Generic.List<SAPB1.DocumentSpecialLine> DocumentSpecialLines { get; set; }
        public System.Collections.Generic.List<SAPB1.DocumentInstallment> DocumentInstallments { get; set; }
        public System.Collections.Generic.List<SAPB1.DownPaymentToDraw> DownPaymentsToDraw { get; set; }
        public SAPB1.TaxExtension TaxExtension { get; set; }
        public SAPB1.AddressExtension AddressExtension { get; set; }
    }

    public class Document_ApprovalRequest
    {
        private int? _ApprovalTemplatesID;
        public int ApprovalTemplatesID
        {
            get { return _ApprovalTemplatesID.Value; }
            set { _ApprovalTemplatesID = value; }
        }
        public bool ShouldSerializeApprovalTemplatesID()
        {
            return (_ApprovalTemplatesID.HasValue);
        }

        public string Remarks { get; set; }
    }

    public class DocumentLine
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        public string ItemCode { get; set; }
        public string ItemDescription { get; set; }
        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private DateTime? _ShipDate;
        public DateTime ShipDate
        {
            get { return _ShipDate.Value; }
            set { _ShipDate = value; }
        }
        public bool ShouldSerializeShipDate()
        {
            return (_ShipDate.HasValue);
        }

        private decimal? _Price;
        public decimal Price
        {
            get { return _Price.Value; }
            set { _Price = value; }
        }
        public bool ShouldSerializePrice()
        {
            return (_Price.HasValue);
        }

        private decimal? _PriceAfterVAT;
        public decimal PriceAfterVAT
        {
            get { return _PriceAfterVAT.Value; }
            set { _PriceAfterVAT = value; }
        }
        public bool ShouldSerializePriceAfterVAT()
        {
            return (_PriceAfterVAT.HasValue);
        }

        public string Currency { get; set; }
        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

        private decimal? _DiscountPercent;
        public decimal DiscountPercent
        {
            get { return _DiscountPercent.Value; }
            set { _DiscountPercent = value; }
        }
        public bool ShouldSerializeDiscountPercent()
        {
            return (_DiscountPercent.HasValue);
        }

        public string VendorNum { get; set; }
        public string SerialNum { get; set; }
        public string WarehouseCode { get; set; }
        private int? _SalesPersonCode;
        public int SalesPersonCode
        {
            get { return _SalesPersonCode.Value; }
            set { _SalesPersonCode = value; }
        }
        public bool ShouldSerializeSalesPersonCode()
        {
            return (_SalesPersonCode.HasValue);
        }

        private decimal? _CommisionPercent;
        public decimal CommisionPercent
        {
            get { return _CommisionPercent.Value; }
            set { _CommisionPercent = value; }
        }
        public bool ShouldSerializeCommisionPercent()
        {
            return (_CommisionPercent.HasValue);
        }

        private SAPB1.BoItemTreeTypes? _TreeType;
        public SAPB1.BoItemTreeTypes TreeType
        {
            get { return _TreeType.Value; }
            set { _TreeType = value; }
        }
        public bool ShouldSerializeTreeType()
        {
            return (_TreeType.HasValue);
        }

        public string AccountCode { get; set; }
        private SAPB1.BoYesNoEnum? _UseBaseUnits;
        public SAPB1.BoYesNoEnum UseBaseUnits
        {
            get { return _UseBaseUnits.Value; }
            set { _UseBaseUnits = value; }
        }
        public bool ShouldSerializeUseBaseUnits()
        {
            return (_UseBaseUnits.HasValue);
        }

        public string SupplierCatNum { get; set; }
        public string CostingCode { get; set; }
        public string ProjectCode { get; set; }
        public string BarCode { get; set; }
        public string VatGroup { get; set; }
        private decimal? _Height1;
        public decimal Height1
        {
            get { return _Height1.Value; }
            set { _Height1 = value; }
        }
        public bool ShouldSerializeHeight1()
        {
            return (_Height1.HasValue);
        }

        private int? _Hight1Unit;
        public int Hight1Unit
        {
            get { return _Hight1Unit.Value; }
            set { _Hight1Unit = value; }
        }
        public bool ShouldSerializeHight1Unit()
        {
            return (_Hight1Unit.HasValue);
        }

        private decimal? _Height2;
        public decimal Height2
        {
            get { return _Height2.Value; }
            set { _Height2 = value; }
        }
        public bool ShouldSerializeHeight2()
        {
            return (_Height2.HasValue);
        }

        private int? _Height2Unit;
        public int Height2Unit
        {
            get { return _Height2Unit.Value; }
            set { _Height2Unit = value; }
        }
        public bool ShouldSerializeHeight2Unit()
        {
            return (_Height2Unit.HasValue);
        }

        private decimal? _Lengh1;
        public decimal Lengh1
        {
            get { return _Lengh1.Value; }
            set { _Lengh1 = value; }
        }
        public bool ShouldSerializeLengh1()
        {
            return (_Lengh1.HasValue);
        }

        private int? _Lengh1Unit;
        public int Lengh1Unit
        {
            get { return _Lengh1Unit.Value; }
            set { _Lengh1Unit = value; }
        }
        public bool ShouldSerializeLengh1Unit()
        {
            return (_Lengh1Unit.HasValue);
        }

        private decimal? _Lengh2;
        public decimal Lengh2
        {
            get { return _Lengh2.Value; }
            set { _Lengh2 = value; }
        }
        public bool ShouldSerializeLengh2()
        {
            return (_Lengh2.HasValue);
        }

        private int? _Lengh2Unit;
        public int Lengh2Unit
        {
            get { return _Lengh2Unit.Value; }
            set { _Lengh2Unit = value; }
        }
        public bool ShouldSerializeLengh2Unit()
        {
            return (_Lengh2Unit.HasValue);
        }

        private decimal? _Weight1;
        public decimal Weight1
        {
            get { return _Weight1.Value; }
            set { _Weight1 = value; }
        }
        public bool ShouldSerializeWeight1()
        {
            return (_Weight1.HasValue);
        }

        private int? _Weight1Unit;
        public int Weight1Unit
        {
            get { return _Weight1Unit.Value; }
            set { _Weight1Unit = value; }
        }
        public bool ShouldSerializeWeight1Unit()
        {
            return (_Weight1Unit.HasValue);
        }

        private decimal? _Weight2;
        public decimal Weight2
        {
            get { return _Weight2.Value; }
            set { _Weight2 = value; }
        }
        public bool ShouldSerializeWeight2()
        {
            return (_Weight2.HasValue);
        }

        private int? _Weight2Unit;
        public int Weight2Unit
        {
            get { return _Weight2Unit.Value; }
            set { _Weight2Unit = value; }
        }
        public bool ShouldSerializeWeight2Unit()
        {
            return (_Weight2Unit.HasValue);
        }

        private decimal? _Factor1;
        public decimal Factor1
        {
            get { return _Factor1.Value; }
            set { _Factor1 = value; }
        }
        public bool ShouldSerializeFactor1()
        {
            return (_Factor1.HasValue);
        }

        private decimal? _Factor2;
        public decimal Factor2
        {
            get { return _Factor2.Value; }
            set { _Factor2 = value; }
        }
        public bool ShouldSerializeFactor2()
        {
            return (_Factor2.HasValue);
        }

        private decimal? _Factor3;
        public decimal Factor3
        {
            get { return _Factor3.Value; }
            set { _Factor3 = value; }
        }
        public bool ShouldSerializeFactor3()
        {
            return (_Factor3.HasValue);
        }

        private decimal? _Factor4;
        public decimal Factor4
        {
            get { return _Factor4.Value; }
            set { _Factor4 = value; }
        }
        public bool ShouldSerializeFactor4()
        {
            return (_Factor4.HasValue);
        }

        private int? _BaseType;
        public int BaseType
        {
            get { return _BaseType.Value; }
            set { _BaseType = value; }
        }
        public bool ShouldSerializeBaseType()
        {
            return (_BaseType.HasValue);
        }

        private int? _BaseEntry;
        public int BaseEntry
        {
            get { return _BaseEntry.Value; }
            set { _BaseEntry = value; }
        }
        public bool ShouldSerializeBaseEntry()
        {
            return (_BaseEntry.HasValue);
        }

        private int? _BaseLine;
        public int BaseLine
        {
            get { return _BaseLine.Value; }
            set { _BaseLine = value; }
        }
        public bool ShouldSerializeBaseLine()
        {
            return (_BaseLine.HasValue);
        }

        private decimal? _Volume;
        public decimal Volume
        {
            get { return _Volume.Value; }
            set { _Volume = value; }
        }
        public bool ShouldSerializeVolume()
        {
            return (_Volume.HasValue);
        }

        private int? _VolumeUnit;
        public int VolumeUnit
        {
            get { return _VolumeUnit.Value; }
            set { _VolumeUnit = value; }
        }
        public bool ShouldSerializeVolumeUnit()
        {
            return (_VolumeUnit.HasValue);
        }

        private decimal? _Width1;
        public decimal Width1
        {
            get { return _Width1.Value; }
            set { _Width1 = value; }
        }
        public bool ShouldSerializeWidth1()
        {
            return (_Width1.HasValue);
        }

        private int? _Width1Unit;
        public int Width1Unit
        {
            get { return _Width1Unit.Value; }
            set { _Width1Unit = value; }
        }
        public bool ShouldSerializeWidth1Unit()
        {
            return (_Width1Unit.HasValue);
        }

        private decimal? _Width2;
        public decimal Width2
        {
            get { return _Width2.Value; }
            set { _Width2 = value; }
        }
        public bool ShouldSerializeWidth2()
        {
            return (_Width2.HasValue);
        }

        private int? _Width2Unit;
        public int Width2Unit
        {
            get { return _Width2Unit.Value; }
            set { _Width2Unit = value; }
        }
        public bool ShouldSerializeWidth2Unit()
        {
            return (_Width2Unit.HasValue);
        }

        public string Address { get; set; }
        public string TaxCode { get; set; }
        private SAPB1.BoTaxTypes? _TaxType;
        public SAPB1.BoTaxTypes TaxType
        {
            get { return _TaxType.Value; }
            set { _TaxType = value; }
        }
        public bool ShouldSerializeTaxType()
        {
            return (_TaxType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TaxLiable;
        public SAPB1.BoYesNoEnum TaxLiable
        {
            get { return _TaxLiable.Value; }
            set { _TaxLiable = value; }
        }
        public bool ShouldSerializeTaxLiable()
        {
            return (_TaxLiable.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PickStatus;
        public SAPB1.BoYesNoEnum PickStatus
        {
            get { return _PickStatus.Value; }
            set { _PickStatus = value; }
        }
        public bool ShouldSerializePickStatus()
        {
            return (_PickStatus.HasValue);
        }

        private decimal? _PickQuantity;
        public decimal PickQuantity
        {
            get { return _PickQuantity.Value; }
            set { _PickQuantity = value; }
        }
        public bool ShouldSerializePickQuantity()
        {
            return (_PickQuantity.HasValue);
        }

        private int? _PickListIdNumber;
        public int PickListIdNumber
        {
            get { return _PickListIdNumber.Value; }
            set { _PickListIdNumber = value; }
        }
        public bool ShouldSerializePickListIdNumber()
        {
            return (_PickListIdNumber.HasValue);
        }

        public string OriginalItem { get; set; }
        private SAPB1.BoYesNoEnum? _BackOrder;
        public SAPB1.BoYesNoEnum BackOrder
        {
            get { return _BackOrder.Value; }
            set { _BackOrder = value; }
        }
        public bool ShouldSerializeBackOrder()
        {
            return (_BackOrder.HasValue);
        }

        public string FreeText { get; set; }
        private int? _ShippingMethod;
        public int ShippingMethod
        {
            get { return _ShippingMethod.Value; }
            set { _ShippingMethod = value; }
        }
        public bool ShouldSerializeShippingMethod()
        {
            return (_ShippingMethod.HasValue);
        }

        private int? _POTargetNum;
        public int POTargetNum
        {
            get { return _POTargetNum.Value; }
            set { _POTargetNum = value; }
        }
        public bool ShouldSerializePOTargetNum()
        {
            return (_POTargetNum.HasValue);
        }

        public string POTargetEntry { get; set; }
        private int? _POTargetRowNum;
        public int POTargetRowNum
        {
            get { return _POTargetRowNum.Value; }
            set { _POTargetRowNum = value; }
        }
        public bool ShouldSerializePOTargetRowNum()
        {
            return (_POTargetRowNum.HasValue);
        }

        private SAPB1.BoCorInvItemStatus? _CorrectionInvoiceItem;
        public SAPB1.BoCorInvItemStatus CorrectionInvoiceItem
        {
            get { return _CorrectionInvoiceItem.Value; }
            set { _CorrectionInvoiceItem = value; }
        }
        public bool ShouldSerializeCorrectionInvoiceItem()
        {
            return (_CorrectionInvoiceItem.HasValue);
        }

        private decimal? _CorrInvAmountToStock;
        public decimal CorrInvAmountToStock
        {
            get { return _CorrInvAmountToStock.Value; }
            set { _CorrInvAmountToStock = value; }
        }
        public bool ShouldSerializeCorrInvAmountToStock()
        {
            return (_CorrInvAmountToStock.HasValue);
        }

        private decimal? _CorrInvAmountToDiffAcct;
        public decimal CorrInvAmountToDiffAcct
        {
            get { return _CorrInvAmountToDiffAcct.Value; }
            set { _CorrInvAmountToDiffAcct = value; }
        }
        public bool ShouldSerializeCorrInvAmountToDiffAcct()
        {
            return (_CorrInvAmountToDiffAcct.HasValue);
        }

        private decimal? _AppliedTax;
        public decimal AppliedTax
        {
            get { return _AppliedTax.Value; }
            set { _AppliedTax = value; }
        }
        public bool ShouldSerializeAppliedTax()
        {
            return (_AppliedTax.HasValue);
        }

        private decimal? _AppliedTaxFC;
        public decimal AppliedTaxFC
        {
            get { return _AppliedTaxFC.Value; }
            set { _AppliedTaxFC = value; }
        }
        public bool ShouldSerializeAppliedTaxFC()
        {
            return (_AppliedTaxFC.HasValue);
        }

        private decimal? _AppliedTaxSC;
        public decimal AppliedTaxSC
        {
            get { return _AppliedTaxSC.Value; }
            set { _AppliedTaxSC = value; }
        }
        public bool ShouldSerializeAppliedTaxSC()
        {
            return (_AppliedTaxSC.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WTLiable;
        public SAPB1.BoYesNoEnum WTLiable
        {
            get { return _WTLiable.Value; }
            set { _WTLiable = value; }
        }
        public bool ShouldSerializeWTLiable()
        {
            return (_WTLiable.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DeferredTax;
        public SAPB1.BoYesNoEnum DeferredTax
        {
            get { return _DeferredTax.Value; }
            set { _DeferredTax = value; }
        }
        public bool ShouldSerializeDeferredTax()
        {
            return (_DeferredTax.HasValue);
        }

        private decimal? _EqualizationTaxPercent;
        public decimal EqualizationTaxPercent
        {
            get { return _EqualizationTaxPercent.Value; }
            set { _EqualizationTaxPercent = value; }
        }
        public bool ShouldSerializeEqualizationTaxPercent()
        {
            return (_EqualizationTaxPercent.HasValue);
        }

        private decimal? _TotalEqualizationTax;
        public decimal TotalEqualizationTax
        {
            get { return _TotalEqualizationTax.Value; }
            set { _TotalEqualizationTax = value; }
        }
        public bool ShouldSerializeTotalEqualizationTax()
        {
            return (_TotalEqualizationTax.HasValue);
        }

        private decimal? _TotalEqualizationTaxFC;
        public decimal TotalEqualizationTaxFC
        {
            get { return _TotalEqualizationTaxFC.Value; }
            set { _TotalEqualizationTaxFC = value; }
        }
        public bool ShouldSerializeTotalEqualizationTaxFC()
        {
            return (_TotalEqualizationTaxFC.HasValue);
        }

        private decimal? _TotalEqualizationTaxSC;
        public decimal TotalEqualizationTaxSC
        {
            get { return _TotalEqualizationTaxSC.Value; }
            set { _TotalEqualizationTaxSC = value; }
        }
        public bool ShouldSerializeTotalEqualizationTaxSC()
        {
            return (_TotalEqualizationTaxSC.HasValue);
        }

        private decimal? _NetTaxAmount;
        public decimal NetTaxAmount
        {
            get { return _NetTaxAmount.Value; }
            set { _NetTaxAmount = value; }
        }
        public bool ShouldSerializeNetTaxAmount()
        {
            return (_NetTaxAmount.HasValue);
        }

        private decimal? _NetTaxAmountFC;
        public decimal NetTaxAmountFC
        {
            get { return _NetTaxAmountFC.Value; }
            set { _NetTaxAmountFC = value; }
        }
        public bool ShouldSerializeNetTaxAmountFC()
        {
            return (_NetTaxAmountFC.HasValue);
        }

        private decimal? _NetTaxAmountSC;
        public decimal NetTaxAmountSC
        {
            get { return _NetTaxAmountSC.Value; }
            set { _NetTaxAmountSC = value; }
        }
        public bool ShouldSerializeNetTaxAmountSC()
        {
            return (_NetTaxAmountSC.HasValue);
        }

        public string MeasureUnit { get; set; }
        private decimal? _UnitsOfMeasurment;
        public decimal UnitsOfMeasurment
        {
            get { return _UnitsOfMeasurment.Value; }
            set { _UnitsOfMeasurment = value; }
        }
        public bool ShouldSerializeUnitsOfMeasurment()
        {
            return (_UnitsOfMeasurment.HasValue);
        }

        private decimal? _LineTotal;
        public decimal LineTotal
        {
            get { return _LineTotal.Value; }
            set { _LineTotal = value; }
        }
        public bool ShouldSerializeLineTotal()
        {
            return (_LineTotal.HasValue);
        }

        private decimal? _TaxPercentagePerRow;
        public decimal TaxPercentagePerRow
        {
            get { return _TaxPercentagePerRow.Value; }
            set { _TaxPercentagePerRow = value; }
        }
        public bool ShouldSerializeTaxPercentagePerRow()
        {
            return (_TaxPercentagePerRow.HasValue);
        }

        private decimal? _TaxTotal;
        public decimal TaxTotal
        {
            get { return _TaxTotal.Value; }
            set { _TaxTotal = value; }
        }
        public bool ShouldSerializeTaxTotal()
        {
            return (_TaxTotal.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ConsumerSalesForecast;
        public SAPB1.BoYesNoEnum ConsumerSalesForecast
        {
            get { return _ConsumerSalesForecast.Value; }
            set { _ConsumerSalesForecast = value; }
        }
        public bool ShouldSerializeConsumerSalesForecast()
        {
            return (_ConsumerSalesForecast.HasValue);
        }

        private decimal? _ExciseAmount;
        public decimal ExciseAmount
        {
            get { return _ExciseAmount.Value; }
            set { _ExciseAmount = value; }
        }
        public bool ShouldSerializeExciseAmount()
        {
            return (_ExciseAmount.HasValue);
        }

        private decimal? _TaxPerUnit;
        public decimal TaxPerUnit
        {
            get { return _TaxPerUnit.Value; }
            set { _TaxPerUnit = value; }
        }
        public bool ShouldSerializeTaxPerUnit()
        {
            return (_TaxPerUnit.HasValue);
        }

        private decimal? _TotalInclTax;
        public decimal TotalInclTax
        {
            get { return _TotalInclTax.Value; }
            set { _TotalInclTax = value; }
        }
        public bool ShouldSerializeTotalInclTax()
        {
            return (_TotalInclTax.HasValue);
        }

        public string CountryOrg { get; set; }
        public string SWW { get; set; }
        private SAPB1.BoTransactionTypeEnum? _TransactionType;
        public SAPB1.BoTransactionTypeEnum TransactionType
        {
            get { return _TransactionType.Value; }
            set { _TransactionType = value; }
        }
        public bool ShouldSerializeTransactionType()
        {
            return (_TransactionType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DistributeExpense;
        public SAPB1.BoYesNoEnum DistributeExpense
        {
            get { return _DistributeExpense.Value; }
            set { _DistributeExpense = value; }
        }
        public bool ShouldSerializeDistributeExpense()
        {
            return (_DistributeExpense.HasValue);
        }

        public string ShipToCode { get; set; }
        private decimal? _RowTotalFC;
        public decimal RowTotalFC
        {
            get { return _RowTotalFC.Value; }
            set { _RowTotalFC = value; }
        }
        public bool ShouldSerializeRowTotalFC()
        {
            return (_RowTotalFC.HasValue);
        }

        private decimal? _RowTotalSC;
        public decimal RowTotalSC
        {
            get { return _RowTotalSC.Value; }
            set { _RowTotalSC = value; }
        }
        public bool ShouldSerializeRowTotalSC()
        {
            return (_RowTotalSC.HasValue);
        }

        private decimal? _LastBuyInmPrice;
        public decimal LastBuyInmPrice
        {
            get { return _LastBuyInmPrice.Value; }
            set { _LastBuyInmPrice = value; }
        }
        public bool ShouldSerializeLastBuyInmPrice()
        {
            return (_LastBuyInmPrice.HasValue);
        }

        private decimal? _LastBuyDistributeSumFc;
        public decimal LastBuyDistributeSumFc
        {
            get { return _LastBuyDistributeSumFc.Value; }
            set { _LastBuyDistributeSumFc = value; }
        }
        public bool ShouldSerializeLastBuyDistributeSumFc()
        {
            return (_LastBuyDistributeSumFc.HasValue);
        }

        private decimal? _LastBuyDistributeSumSc;
        public decimal LastBuyDistributeSumSc
        {
            get { return _LastBuyDistributeSumSc.Value; }
            set { _LastBuyDistributeSumSc = value; }
        }
        public bool ShouldSerializeLastBuyDistributeSumSc()
        {
            return (_LastBuyDistributeSumSc.HasValue);
        }

        private decimal? _LastBuyDistributeSum;
        public decimal LastBuyDistributeSum
        {
            get { return _LastBuyDistributeSum.Value; }
            set { _LastBuyDistributeSum = value; }
        }
        public bool ShouldSerializeLastBuyDistributeSum()
        {
            return (_LastBuyDistributeSum.HasValue);
        }

        private decimal? _StockDistributesumForeign;
        public decimal StockDistributesumForeign
        {
            get { return _StockDistributesumForeign.Value; }
            set { _StockDistributesumForeign = value; }
        }
        public bool ShouldSerializeStockDistributesumForeign()
        {
            return (_StockDistributesumForeign.HasValue);
        }

        private decimal? _StockDistributesumSystem;
        public decimal StockDistributesumSystem
        {
            get { return _StockDistributesumSystem.Value; }
            set { _StockDistributesumSystem = value; }
        }
        public bool ShouldSerializeStockDistributesumSystem()
        {
            return (_StockDistributesumSystem.HasValue);
        }

        private decimal? _StockDistributesum;
        public decimal StockDistributesum
        {
            get { return _StockDistributesum.Value; }
            set { _StockDistributesum = value; }
        }
        public bool ShouldSerializeStockDistributesum()
        {
            return (_StockDistributesum.HasValue);
        }

        private decimal? _StockInmPrice;
        public decimal StockInmPrice
        {
            get { return _StockInmPrice.Value; }
            set { _StockInmPrice = value; }
        }
        public bool ShouldSerializeStockInmPrice()
        {
            return (_StockInmPrice.HasValue);
        }

        private SAPB1.BoDocumentLinePickStatus? _PickStatusEx;
        public SAPB1.BoDocumentLinePickStatus PickStatusEx
        {
            get { return _PickStatusEx.Value; }
            set { _PickStatusEx = value; }
        }
        public bool ShouldSerializePickStatusEx()
        {
            return (_PickStatusEx.HasValue);
        }

        private decimal? _TaxBeforeDPM;
        public decimal TaxBeforeDPM
        {
            get { return _TaxBeforeDPM.Value; }
            set { _TaxBeforeDPM = value; }
        }
        public bool ShouldSerializeTaxBeforeDPM()
        {
            return (_TaxBeforeDPM.HasValue);
        }

        private decimal? _TaxBeforeDPMFC;
        public decimal TaxBeforeDPMFC
        {
            get { return _TaxBeforeDPMFC.Value; }
            set { _TaxBeforeDPMFC = value; }
        }
        public bool ShouldSerializeTaxBeforeDPMFC()
        {
            return (_TaxBeforeDPMFC.HasValue);
        }

        private decimal? _TaxBeforeDPMSC;
        public decimal TaxBeforeDPMSC
        {
            get { return _TaxBeforeDPMSC.Value; }
            set { _TaxBeforeDPMSC = value; }
        }
        public bool ShouldSerializeTaxBeforeDPMSC()
        {
            return (_TaxBeforeDPMSC.HasValue);
        }

        public string CFOPCode { get; set; }
        public string CSTCode { get; set; }
        private int? _Usage;
        public int Usage
        {
            get { return _Usage.Value; }
            set { _Usage = value; }
        }
        public bool ShouldSerializeUsage()
        {
            return (_Usage.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TaxOnly;
        public SAPB1.BoYesNoEnum TaxOnly
        {
            get { return _TaxOnly.Value; }
            set { _TaxOnly = value; }
        }
        public bool ShouldSerializeTaxOnly()
        {
            return (_TaxOnly.HasValue);
        }

        private int? _VisualOrder;
        public int VisualOrder
        {
            get { return _VisualOrder.Value; }
            set { _VisualOrder = value; }
        }
        public bool ShouldSerializeVisualOrder()
        {
            return (_VisualOrder.HasValue);
        }

        private decimal? _BaseOpenQuantity;
        public decimal BaseOpenQuantity
        {
            get { return _BaseOpenQuantity.Value; }
            set { _BaseOpenQuantity = value; }
        }
        public bool ShouldSerializeBaseOpenQuantity()
        {
            return (_BaseOpenQuantity.HasValue);
        }

        private decimal? _UnitPrice;
        public decimal UnitPrice
        {
            get { return _UnitPrice.Value; }
            set { _UnitPrice = value; }
        }
        public bool ShouldSerializeUnitPrice()
        {
            return (_UnitPrice.HasValue);
        }

        private SAPB1.BoStatus? _LineStatus;
        public SAPB1.BoStatus LineStatus
        {
            get { return _LineStatus.Value; }
            set { _LineStatus = value; }
        }
        public bool ShouldSerializeLineStatus()
        {
            return (_LineStatus.HasValue);
        }

        private decimal? _PackageQuantity;
        public decimal PackageQuantity
        {
            get { return _PackageQuantity.Value; }
            set { _PackageQuantity = value; }
        }
        public bool ShouldSerializePackageQuantity()
        {
            return (_PackageQuantity.HasValue);
        }

        public string Text { get; set; }
        private SAPB1.BoDocLineType? _LineType;
        public SAPB1.BoDocLineType LineType
        {
            get { return _LineType.Value; }
            set { _LineType = value; }
        }
        public bool ShouldSerializeLineType()
        {
            return (_LineType.HasValue);
        }

        public string COGSCostingCode { get; set; }
        public string COGSAccountCode { get; set; }
        public string ChangeAssemlyBoMWarehouse { get; set; }
        private decimal? _GrossBuyPrice;
        public decimal GrossBuyPrice
        {
            get { return _GrossBuyPrice.Value; }
            set { _GrossBuyPrice = value; }
        }
        public bool ShouldSerializeGrossBuyPrice()
        {
            return (_GrossBuyPrice.HasValue);
        }

        private int? _GrossBase;
        public int GrossBase
        {
            get { return _GrossBase.Value; }
            set { _GrossBase = value; }
        }
        public bool ShouldSerializeGrossBase()
        {
            return (_GrossBase.HasValue);
        }

        private decimal? _GrossProfitTotalBasePrice;
        public decimal GrossProfitTotalBasePrice
        {
            get { return _GrossProfitTotalBasePrice.Value; }
            set { _GrossProfitTotalBasePrice = value; }
        }
        public bool ShouldSerializeGrossProfitTotalBasePrice()
        {
            return (_GrossProfitTotalBasePrice.HasValue);
        }

        public string CostingCode2 { get; set; }
        public string CostingCode3 { get; set; }
        public string CostingCode4 { get; set; }
        public string CostingCode5 { get; set; }
        public string ItemDetails { get; set; }
        private int? _LocationCode;
        public int LocationCode
        {
            get { return _LocationCode.Value; }
            set { _LocationCode = value; }
        }
        public bool ShouldSerializeLocationCode()
        {
            return (_LocationCode.HasValue);
        }

        private DateTime? _ActualDeliveryDate;
        public DateTime ActualDeliveryDate
        {
            get { return _ActualDeliveryDate.Value; }
            set { _ActualDeliveryDate = value; }
        }
        public bool ShouldSerializeActualDeliveryDate()
        {
            return (_ActualDeliveryDate.HasValue);
        }

        private decimal? _RemainingOpenQuantity;
        public decimal RemainingOpenQuantity
        {
            get { return _RemainingOpenQuantity.Value; }
            set { _RemainingOpenQuantity = value; }
        }
        public bool ShouldSerializeRemainingOpenQuantity()
        {
            return (_RemainingOpenQuantity.HasValue);
        }

        private decimal? _OpenAmount;
        public decimal OpenAmount
        {
            get { return _OpenAmount.Value; }
            set { _OpenAmount = value; }
        }
        public bool ShouldSerializeOpenAmount()
        {
            return (_OpenAmount.HasValue);
        }

        private decimal? _OpenAmountFC;
        public decimal OpenAmountFC
        {
            get { return _OpenAmountFC.Value; }
            set { _OpenAmountFC = value; }
        }
        public bool ShouldSerializeOpenAmountFC()
        {
            return (_OpenAmountFC.HasValue);
        }

        private decimal? _OpenAmountSC;
        public decimal OpenAmountSC
        {
            get { return _OpenAmountSC.Value; }
            set { _OpenAmountSC = value; }
        }
        public bool ShouldSerializeOpenAmountSC()
        {
            return (_OpenAmountSC.HasValue);
        }

        public string ExLineNo { get; set; }
        private DateTime? _RequiredDate;
        public DateTime RequiredDate
        {
            get { return _RequiredDate.Value; }
            set { _RequiredDate = value; }
        }
        public bool ShouldSerializeRequiredDate()
        {
            return (_RequiredDate.HasValue);
        }

        private decimal? _RequiredQuantity;
        public decimal RequiredQuantity
        {
            get { return _RequiredQuantity.Value; }
            set { _RequiredQuantity = value; }
        }
        public bool ShouldSerializeRequiredQuantity()
        {
            return (_RequiredQuantity.HasValue);
        }

        public string COGSCostingCode2 { get; set; }
        public string COGSCostingCode3 { get; set; }
        public string COGSCostingCode4 { get; set; }
        public string COGSCostingCode5 { get; set; }
        public string CSTforIPI { get; set; }
        public string CSTforPIS { get; set; }
        public string CSTforCOFINS { get; set; }
        public string CreditOriginCode { get; set; }
        private SAPB1.BoYesNoEnum? _WithoutInventoryMovement;
        public SAPB1.BoYesNoEnum WithoutInventoryMovement
        {
            get { return _WithoutInventoryMovement.Value; }
            set { _WithoutInventoryMovement = value; }
        }
        public bool ShouldSerializeWithoutInventoryMovement()
        {
            return (_WithoutInventoryMovement.HasValue);
        }

        private int? _AgreementNo;
        public int AgreementNo
        {
            get { return _AgreementNo.Value; }
            set { _AgreementNo = value; }
        }
        public bool ShouldSerializeAgreementNo()
        {
            return (_AgreementNo.HasValue);
        }

        private int? _AgreementRowNumber;
        public int AgreementRowNumber
        {
            get { return _AgreementRowNumber.Value; }
            set { _AgreementRowNumber = value; }
        }
        public bool ShouldSerializeAgreementRowNumber()
        {
            return (_AgreementRowNumber.HasValue);
        }

        public string ShipToDescription { get; set; }
        private int? _ActualBaseEntry;
        public int ActualBaseEntry
        {
            get { return _ActualBaseEntry.Value; }
            set { _ActualBaseEntry = value; }
        }
        public bool ShouldSerializeActualBaseEntry()
        {
            return (_ActualBaseEntry.HasValue);
        }

        private int? _ActualBaseLine;
        public int ActualBaseLine
        {
            get { return _ActualBaseLine.Value; }
            set { _ActualBaseLine = value; }
        }
        public bool ShouldSerializeActualBaseLine()
        {
            return (_ActualBaseLine.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private decimal? _Surpluses;
        public decimal Surpluses
        {
            get { return _Surpluses.Value; }
            set { _Surpluses = value; }
        }
        public bool ShouldSerializeSurpluses()
        {
            return (_Surpluses.HasValue);
        }

        private decimal? _DefectAndBreakup;
        public decimal DefectAndBreakup
        {
            get { return _DefectAndBreakup.Value; }
            set { _DefectAndBreakup = value; }
        }
        public bool ShouldSerializeDefectAndBreakup()
        {
            return (_DefectAndBreakup.HasValue);
        }

        private decimal? _Shortages;
        public decimal Shortages
        {
            get { return _Shortages.Value; }
            set { _Shortages = value; }
        }
        public bool ShouldSerializeShortages()
        {
            return (_Shortages.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ConsiderQuantity;
        public SAPB1.BoYesNoEnum ConsiderQuantity
        {
            get { return _ConsiderQuantity.Value; }
            set { _ConsiderQuantity = value; }
        }
        public bool ShouldSerializeConsiderQuantity()
        {
            return (_ConsiderQuantity.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PartialRetirement;
        public SAPB1.BoYesNoEnum PartialRetirement
        {
            get { return _PartialRetirement.Value; }
            set { _PartialRetirement = value; }
        }
        public bool ShouldSerializePartialRetirement()
        {
            return (_PartialRetirement.HasValue);
        }

        private decimal? _RetirementQuantity;
        public decimal RetirementQuantity
        {
            get { return _RetirementQuantity.Value; }
            set { _RetirementQuantity = value; }
        }
        public bool ShouldSerializeRetirementQuantity()
        {
            return (_RetirementQuantity.HasValue);
        }

        private decimal? _RetirementAPC;
        public decimal RetirementAPC
        {
            get { return _RetirementAPC.Value; }
            set { _RetirementAPC = value; }
        }
        public bool ShouldSerializeRetirementAPC()
        {
            return (_RetirementAPC.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ThirdParty;
        public SAPB1.BoYesNoEnum ThirdParty
        {
            get { return _ThirdParty.Value; }
            set { _ThirdParty = value; }
        }
        public bool ShouldSerializeThirdParty()
        {
            return (_ThirdParty.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableReturnCost;
        public SAPB1.BoYesNoEnum EnableReturnCost
        {
            get { return _EnableReturnCost.Value; }
            set { _EnableReturnCost = value; }
        }
        public bool ShouldSerializeEnableReturnCost()
        {
            return (_EnableReturnCost.HasValue);
        }

        private decimal? _ReturnCost;
        public decimal ReturnCost
        {
            get { return _ReturnCost.Value; }
            set { _ReturnCost = value; }
        }
        public bool ShouldSerializeReturnCost()
        {
            return (_ReturnCost.HasValue);
        }

        public string LineVendor { get; set; }
        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

        public string UoMCode { get; set; }
        private decimal? _InventoryQuantity;
        public decimal InventoryQuantity
        {
            get { return _InventoryQuantity.Value; }
            set { _InventoryQuantity = value; }
        }
        public bool ShouldSerializeInventoryQuantity()
        {
            return (_InventoryQuantity.HasValue);
        }

        private decimal? _RemainingOpenInventoryQuantity;
        public decimal RemainingOpenInventoryQuantity
        {
            get { return _RemainingOpenInventoryQuantity.Value; }
            set { _RemainingOpenInventoryQuantity = value; }
        }
        public bool ShouldSerializeRemainingOpenInventoryQuantity()
        {
            return (_RemainingOpenInventoryQuantity.HasValue);
        }

        private int? _ParentLineNum;
        public int ParentLineNum
        {
            get { return _ParentLineNum.Value; }
            set { _ParentLineNum = value; }
        }
        public bool ShouldSerializeParentLineNum()
        {
            return (_ParentLineNum.HasValue);
        }

        private int? _Incoterms;
        public int Incoterms
        {
            get { return _Incoterms.Value; }
            set { _Incoterms = value; }
        }
        public bool ShouldSerializeIncoterms()
        {
            return (_Incoterms.HasValue);
        }

        private int? _TransportMode;
        public int TransportMode
        {
            get { return _TransportMode.Value; }
            set { _TransportMode = value; }
        }
        public bool ShouldSerializeTransportMode()
        {
            return (_TransportMode.HasValue);
        }

        private SAPB1.BoDocItemType? _ItemType;
        public SAPB1.BoDocItemType ItemType
        {
            get { return _ItemType.Value; }
            set { _ItemType = value; }
        }
        public bool ShouldSerializeItemType()
        {
            return (_ItemType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ChangeInventoryQuantityIndependently;
        public SAPB1.BoYesNoEnum ChangeInventoryQuantityIndependently
        {
            get { return _ChangeInventoryQuantityIndependently.Value; }
            set { _ChangeInventoryQuantityIndependently = value; }
        }
        public bool ShouldSerializeChangeInventoryQuantityIndependently()
        {
            return (_ChangeInventoryQuantityIndependently.HasValue);
        }

        private SAPB1.BoYesNoEnum? _FreeOfChargeBP;
        public SAPB1.BoYesNoEnum FreeOfChargeBP
        {
            get { return _FreeOfChargeBP.Value; }
            set { _FreeOfChargeBP = value; }
        }
        public bool ShouldSerializeFreeOfChargeBP()
        {
            return (_FreeOfChargeBP.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.LineTaxJurisdiction> LineTaxJurisdictions { get; set; }
        public System.Collections.Generic.List<SAPB1.GeneratedAsset> GeneratedAssets { get; set; }
        public System.Collections.Generic.List<SAPB1.DocumentLineAdditionalExpense> DocumentLineAdditionalExpenses { get; set; }
        public System.Collections.Generic.List<SAPB1.WithholdingTaxLine> WithholdingTaxLines { get; set; }
        public System.Collections.Generic.List<SAPB1.SerialNumber> SerialNumbers { get; set; }
        public System.Collections.Generic.List<SAPB1.BatchNumber> BatchNumbers { get; set; }
        public System.Collections.Generic.List<SAPB1.DocumentLinesBinAllocation> DocumentLinesBinAllocations { get; set; }
    }

    public class LineTaxJurisdiction
    {
        public string JurisdictionCode { get; set; }
        private int? _JurisdictionType;
        public int JurisdictionType
        {
            get { return _JurisdictionType.Value; }
            set { _JurisdictionType = value; }
        }
        public bool ShouldSerializeJurisdictionType()
        {
            return (_JurisdictionType.HasValue);
        }

        private decimal? _TaxAmount;
        public decimal TaxAmount
        {
            get { return _TaxAmount.Value; }
            set { _TaxAmount = value; }
        }
        public bool ShouldSerializeTaxAmount()
        {
            return (_TaxAmount.HasValue);
        }

        private decimal? _TaxAmountSC;
        public decimal TaxAmountSC
        {
            get { return _TaxAmountSC.Value; }
            set { _TaxAmountSC = value; }
        }
        public bool ShouldSerializeTaxAmountSC()
        {
            return (_TaxAmountSC.HasValue);
        }

        private decimal? _TaxAmountFC;
        public decimal TaxAmountFC
        {
            get { return _TaxAmountFC.Value; }
            set { _TaxAmountFC = value; }
        }
        public bool ShouldSerializeTaxAmountFC()
        {
            return (_TaxAmountFC.HasValue);
        }

        private decimal? _TaxRate;
        public decimal TaxRate
        {
            get { return _TaxRate.Value; }
            set { _TaxRate = value; }
        }
        public bool ShouldSerializeTaxRate()
        {
            return (_TaxRate.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        private int? _RowSequence;
        public int RowSequence
        {
            get { return _RowSequence.Value; }
            set { _RowSequence = value; }
        }
        public bool ShouldSerializeRowSequence()
        {
            return (_RowSequence.HasValue);
        }

    }

    public class GeneratedAsset
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        private int? _VisualOrder;
        public int VisualOrder
        {
            get { return _VisualOrder.Value; }
            set { _VisualOrder = value; }
        }
        public bool ShouldSerializeVisualOrder()
        {
            return (_VisualOrder.HasValue);
        }

        public string AssetCode { get; set; }
        private SAPB1.GeneratedAssetStatusEnum? _Status;
        public SAPB1.GeneratedAssetStatusEnum Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        public string Remarks { get; set; }
        public string SerialNumber { get; set; }
        private decimal? _amount;
        public decimal amount
        {
            get { return _amount.Value; }
            set { _amount = value; }
        }
        public bool ShouldSerializeamount()
        {
            return (_amount.HasValue);
        }

        private decimal? _amountSC;
        public decimal amountSC
        {
            get { return _amountSC.Value; }
            set { _amountSC = value; }
        }
        public bool ShouldSerializeamountSC()
        {
            return (_amountSC.HasValue);
        }

    }

    public class DocumentLineAdditionalExpense
    {
        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        private int? _GroupCode;
        public int GroupCode
        {
            get { return _GroupCode.Value; }
            set { _GroupCode = value; }
        }
        public bool ShouldSerializeGroupCode()
        {
            return (_GroupCode.HasValue);
        }

        private int? _ExpenseCode;
        public int ExpenseCode
        {
            get { return _ExpenseCode.Value; }
            set { _ExpenseCode = value; }
        }
        public bool ShouldSerializeExpenseCode()
        {
            return (_ExpenseCode.HasValue);
        }

        private decimal? _LineTotal;
        public decimal LineTotal
        {
            get { return _LineTotal.Value; }
            set { _LineTotal = value; }
        }
        public bool ShouldSerializeLineTotal()
        {
            return (_LineTotal.HasValue);
        }

        private decimal? _LineTotalFC;
        public decimal LineTotalFC
        {
            get { return _LineTotalFC.Value; }
            set { _LineTotalFC = value; }
        }
        public bool ShouldSerializeLineTotalFC()
        {
            return (_LineTotalFC.HasValue);
        }

        private decimal? _LineTotalSys;
        public decimal LineTotalSys
        {
            get { return _LineTotalSys.Value; }
            set { _LineTotalSys = value; }
        }
        public bool ShouldSerializeLineTotalSys()
        {
            return (_LineTotalSys.HasValue);
        }

        private decimal? _PaidToDate;
        public decimal PaidToDate
        {
            get { return _PaidToDate.Value; }
            set { _PaidToDate = value; }
        }
        public bool ShouldSerializePaidToDate()
        {
            return (_PaidToDate.HasValue);
        }

        private decimal? _PaidToDateFC;
        public decimal PaidToDateFC
        {
            get { return _PaidToDateFC.Value; }
            set { _PaidToDateFC = value; }
        }
        public bool ShouldSerializePaidToDateFC()
        {
            return (_PaidToDateFC.HasValue);
        }

        private decimal? _PaidToDateSys;
        public decimal PaidToDateSys
        {
            get { return _PaidToDateSys.Value; }
            set { _PaidToDateSys = value; }
        }
        public bool ShouldSerializePaidToDateSys()
        {
            return (_PaidToDateSys.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TaxLiable;
        public SAPB1.BoYesNoEnum TaxLiable
        {
            get { return _TaxLiable.Value; }
            set { _TaxLiable = value; }
        }
        public bool ShouldSerializeTaxLiable()
        {
            return (_TaxLiable.HasValue);
        }

        public string VatGroup { get; set; }
        private decimal? _TaxPercent;
        public decimal TaxPercent
        {
            get { return _TaxPercent.Value; }
            set { _TaxPercent = value; }
        }
        public bool ShouldSerializeTaxPercent()
        {
            return (_TaxPercent.HasValue);
        }

        private decimal? _TaxSum;
        public decimal TaxSum
        {
            get { return _TaxSum.Value; }
            set { _TaxSum = value; }
        }
        public bool ShouldSerializeTaxSum()
        {
            return (_TaxSum.HasValue);
        }

        private decimal? _TaxSumFC;
        public decimal TaxSumFC
        {
            get { return _TaxSumFC.Value; }
            set { _TaxSumFC = value; }
        }
        public bool ShouldSerializeTaxSumFC()
        {
            return (_TaxSumFC.HasValue);
        }

        private decimal? _TaxSumSys;
        public decimal TaxSumSys
        {
            get { return _TaxSumSys.Value; }
            set { _TaxSumSys = value; }
        }
        public bool ShouldSerializeTaxSumSys()
        {
            return (_TaxSumSys.HasValue);
        }

        private decimal? _DeductibleTaxSum;
        public decimal DeductibleTaxSum
        {
            get { return _DeductibleTaxSum.Value; }
            set { _DeductibleTaxSum = value; }
        }
        public bool ShouldSerializeDeductibleTaxSum()
        {
            return (_DeductibleTaxSum.HasValue);
        }

        private decimal? _DeductibleTaxSumFC;
        public decimal DeductibleTaxSumFC
        {
            get { return _DeductibleTaxSumFC.Value; }
            set { _DeductibleTaxSumFC = value; }
        }
        public bool ShouldSerializeDeductibleTaxSumFC()
        {
            return (_DeductibleTaxSumFC.HasValue);
        }

        private decimal? _DeductibleTaxSumSys;
        public decimal DeductibleTaxSumSys
        {
            get { return _DeductibleTaxSumSys.Value; }
            set { _DeductibleTaxSumSys = value; }
        }
        public bool ShouldSerializeDeductibleTaxSumSys()
        {
            return (_DeductibleTaxSumSys.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AquisitionTax;
        public SAPB1.BoYesNoEnum AquisitionTax
        {
            get { return _AquisitionTax.Value; }
            set { _AquisitionTax = value; }
        }
        public bool ShouldSerializeAquisitionTax()
        {
            return (_AquisitionTax.HasValue);
        }

        public string TaxCode { get; set; }
        private SAPB1.BoAdEpnsTaxTypes? _TaxType;
        public SAPB1.BoAdEpnsTaxTypes TaxType
        {
            get { return _TaxType.Value; }
            set { _TaxType = value; }
        }
        public bool ShouldSerializeTaxType()
        {
            return (_TaxType.HasValue);
        }

        private decimal? _TaxPaid;
        public decimal TaxPaid
        {
            get { return _TaxPaid.Value; }
            set { _TaxPaid = value; }
        }
        public bool ShouldSerializeTaxPaid()
        {
            return (_TaxPaid.HasValue);
        }

        private decimal? _TaxPaidFC;
        public decimal TaxPaidFC
        {
            get { return _TaxPaidFC.Value; }
            set { _TaxPaidFC = value; }
        }
        public bool ShouldSerializeTaxPaidFC()
        {
            return (_TaxPaidFC.HasValue);
        }

        private decimal? _TaxPaidSys;
        public decimal TaxPaidSys
        {
            get { return _TaxPaidSys.Value; }
            set { _TaxPaidSys = value; }
        }
        public bool ShouldSerializeTaxPaidSys()
        {
            return (_TaxPaidSys.HasValue);
        }

        private decimal? _EqualizationTaxPercent;
        public decimal EqualizationTaxPercent
        {
            get { return _EqualizationTaxPercent.Value; }
            set { _EqualizationTaxPercent = value; }
        }
        public bool ShouldSerializeEqualizationTaxPercent()
        {
            return (_EqualizationTaxPercent.HasValue);
        }

        private decimal? _EqualizationTaxSum;
        public decimal EqualizationTaxSum
        {
            get { return _EqualizationTaxSum.Value; }
            set { _EqualizationTaxSum = value; }
        }
        public bool ShouldSerializeEqualizationTaxSum()
        {
            return (_EqualizationTaxSum.HasValue);
        }

        private decimal? _EqualizationTaxFC;
        public decimal EqualizationTaxFC
        {
            get { return _EqualizationTaxFC.Value; }
            set { _EqualizationTaxFC = value; }
        }
        public bool ShouldSerializeEqualizationTaxFC()
        {
            return (_EqualizationTaxFC.HasValue);
        }

        private decimal? _EqualizationTaxSys;
        public decimal EqualizationTaxSys
        {
            get { return _EqualizationTaxSys.Value; }
            set { _EqualizationTaxSys = value; }
        }
        public bool ShouldSerializeEqualizationTaxSys()
        {
            return (_EqualizationTaxSys.HasValue);
        }

        private decimal? _TaxTotalSum;
        public decimal TaxTotalSum
        {
            get { return _TaxTotalSum.Value; }
            set { _TaxTotalSum = value; }
        }
        public bool ShouldSerializeTaxTotalSum()
        {
            return (_TaxTotalSum.HasValue);
        }

        private decimal? _TaxTotalSumFC;
        public decimal TaxTotalSumFC
        {
            get { return _TaxTotalSumFC.Value; }
            set { _TaxTotalSumFC = value; }
        }
        public bool ShouldSerializeTaxTotalSumFC()
        {
            return (_TaxTotalSumFC.HasValue);
        }

        private decimal? _TaxTotalSumSys;
        public decimal TaxTotalSumSys
        {
            get { return _TaxTotalSumSys.Value; }
            set { _TaxTotalSumSys = value; }
        }
        public bool ShouldSerializeTaxTotalSumSys()
        {
            return (_TaxTotalSumSys.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WTLiable;
        public SAPB1.BoYesNoEnum WTLiable
        {
            get { return _WTLiable.Value; }
            set { _WTLiable = value; }
        }
        public bool ShouldSerializeWTLiable()
        {
            return (_WTLiable.HasValue);
        }

        private int? _BaseGroup;
        public int BaseGroup
        {
            get { return _BaseGroup.Value; }
            set { _BaseGroup = value; }
        }
        public bool ShouldSerializeBaseGroup()
        {
            return (_BaseGroup.HasValue);
        }

        public string DistributionRule { get; set; }
        public string Project { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
        public System.Collections.Generic.List<SAPB1.LineExpenseTaxJurisdiction> LineExpenseTaxJurisdictions { get; set; }
    }

    public class LineExpenseTaxJurisdiction
    {
        public string JurisdictionCode { get; set; }
        private int? _JurisdictionType;
        public int JurisdictionType
        {
            get { return _JurisdictionType.Value; }
            set { _JurisdictionType = value; }
        }
        public bool ShouldSerializeJurisdictionType()
        {
            return (_JurisdictionType.HasValue);
        }

        private decimal? _TaxAmount;
        public decimal TaxAmount
        {
            get { return _TaxAmount.Value; }
            set { _TaxAmount = value; }
        }
        public bool ShouldSerializeTaxAmount()
        {
            return (_TaxAmount.HasValue);
        }

        private decimal? _TaxAmountSC;
        public decimal TaxAmountSC
        {
            get { return _TaxAmountSC.Value; }
            set { _TaxAmountSC = value; }
        }
        public bool ShouldSerializeTaxAmountSC()
        {
            return (_TaxAmountSC.HasValue);
        }

        private decimal? _TaxAmountFC;
        public decimal TaxAmountFC
        {
            get { return _TaxAmountFC.Value; }
            set { _TaxAmountFC = value; }
        }
        public bool ShouldSerializeTaxAmountFC()
        {
            return (_TaxAmountFC.HasValue);
        }

        private decimal? _TaxRate;
        public decimal TaxRate
        {
            get { return _TaxRate.Value; }
            set { _TaxRate = value; }
        }
        public bool ShouldSerializeTaxRate()
        {
            return (_TaxRate.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        private int? _RowSequence;
        public int RowSequence
        {
            get { return _RowSequence.Value; }
            set { _RowSequence = value; }
        }
        public bool ShouldSerializeRowSequence()
        {
            return (_RowSequence.HasValue);
        }

    }

    public class WithholdingTaxLine
    {
        public string WTCode { get; set; }
        private decimal? _WTAmountSys;
        public decimal WTAmountSys
        {
            get { return _WTAmountSys.Value; }
            set { _WTAmountSys = value; }
        }
        public bool ShouldSerializeWTAmountSys()
        {
            return (_WTAmountSys.HasValue);
        }

        private decimal? _WTAmountFC;
        public decimal WTAmountFC
        {
            get { return _WTAmountFC.Value; }
            set { _WTAmountFC = value; }
        }
        public bool ShouldSerializeWTAmountFC()
        {
            return (_WTAmountFC.HasValue);
        }

        private decimal? _WTAmount;
        public decimal WTAmount
        {
            get { return _WTAmount.Value; }
            set { _WTAmount = value; }
        }
        public bool ShouldSerializeWTAmount()
        {
            return (_WTAmount.HasValue);
        }

        public string WithholdingType { get; set; }
        private decimal? _TaxableAmountinSys;
        public decimal TaxableAmountinSys
        {
            get { return _TaxableAmountinSys.Value; }
            set { _TaxableAmountinSys = value; }
        }
        public bool ShouldSerializeTaxableAmountinSys()
        {
            return (_TaxableAmountinSys.HasValue);
        }

        private decimal? _TaxableAmountFC;
        public decimal TaxableAmountFC
        {
            get { return _TaxableAmountFC.Value; }
            set { _TaxableAmountFC = value; }
        }
        public bool ShouldSerializeTaxableAmountFC()
        {
            return (_TaxableAmountFC.HasValue);
        }

        private decimal? _TaxableAmount;
        public decimal TaxableAmount
        {
            get { return _TaxableAmount.Value; }
            set { _TaxableAmount = value; }
        }
        public bool ShouldSerializeTaxableAmount()
        {
            return (_TaxableAmount.HasValue);
        }

        public string RoundingType { get; set; }
        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

        public string Criteria { get; set; }
        public string Category { get; set; }
        public string BaseType { get; set; }
        private decimal? _AppliedWTAmountSys;
        public decimal AppliedWTAmountSys
        {
            get { return _AppliedWTAmountSys.Value; }
            set { _AppliedWTAmountSys = value; }
        }
        public bool ShouldSerializeAppliedWTAmountSys()
        {
            return (_AppliedWTAmountSys.HasValue);
        }

        private decimal? _AppliedWTAmountFC;
        public decimal AppliedWTAmountFC
        {
            get { return _AppliedWTAmountFC.Value; }
            set { _AppliedWTAmountFC = value; }
        }
        public bool ShouldSerializeAppliedWTAmountFC()
        {
            return (_AppliedWTAmountFC.HasValue);
        }

        private decimal? _AppliedWTAmount;
        public decimal AppliedWTAmount
        {
            get { return _AppliedWTAmount.Value; }
            set { _AppliedWTAmount = value; }
        }
        public bool ShouldSerializeAppliedWTAmount()
        {
            return (_AppliedWTAmount.HasValue);
        }

        public string GLAccount { get; set; }
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _BaseDocEntry;
        public int BaseDocEntry
        {
            get { return _BaseDocEntry.Value; }
            set { _BaseDocEntry = value; }
        }
        public bool ShouldSerializeBaseDocEntry()
        {
            return (_BaseDocEntry.HasValue);
        }

        private int? _BaseDocLine;
        public int BaseDocLine
        {
            get { return _BaseDocLine.Value; }
            set { _BaseDocLine = value; }
        }
        public bool ShouldSerializeBaseDocLine()
        {
            return (_BaseDocLine.HasValue);
        }

        private int? _BaseDocType;
        public int BaseDocType
        {
            get { return _BaseDocType.Value; }
            set { _BaseDocType = value; }
        }
        public bool ShouldSerializeBaseDocType()
        {
            return (_BaseDocType.HasValue);
        }

        private int? _BaseDocumentReference;
        public int BaseDocumentReference
        {
            get { return _BaseDocumentReference.Value; }
            set { _BaseDocumentReference = value; }
        }
        public bool ShouldSerializeBaseDocumentReference()
        {
            return (_BaseDocumentReference.HasValue);
        }

        private SAPB1.BoStatus? _Status;
        public SAPB1.BoStatus Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private int? _TargetAbsEntry;
        public int TargetAbsEntry
        {
            get { return _TargetAbsEntry.Value; }
            set { _TargetAbsEntry = value; }
        }
        public bool ShouldSerializeTargetAbsEntry()
        {
            return (_TargetAbsEntry.HasValue);
        }

        private int? _TargetDocumentType;
        public int TargetDocumentType
        {
            get { return _TargetDocumentType.Value; }
            set { _TargetDocumentType = value; }
        }
        public bool ShouldSerializeTargetDocumentType()
        {
            return (_TargetDocumentType.HasValue);
        }

        public string CSTCodeIncoming { get; set; }
        public string CSTCodeOutgoing { get; set; }
    }

    public class SerialNumber
    {
        public string ManufacturerSerialNumber { get; set; }
        public string InternalSerialNumber { get; set; }
        private DateTime? _ExpiryDate;
        public DateTime ExpiryDate
        {
            get { return _ExpiryDate.Value; }
            set { _ExpiryDate = value; }
        }
        public bool ShouldSerializeExpiryDate()
        {
            return (_ExpiryDate.HasValue);
        }

        private DateTime? _ManufactureDate;
        public DateTime ManufactureDate
        {
            get { return _ManufactureDate.Value; }
            set { _ManufactureDate = value; }
        }
        public bool ShouldSerializeManufactureDate()
        {
            return (_ManufactureDate.HasValue);
        }

        private DateTime? _ReceptionDate;
        public DateTime ReceptionDate
        {
            get { return _ReceptionDate.Value; }
            set { _ReceptionDate = value; }
        }
        public bool ShouldSerializeReceptionDate()
        {
            return (_ReceptionDate.HasValue);
        }

        private DateTime? _WarrantyStart;
        public DateTime WarrantyStart
        {
            get { return _WarrantyStart.Value; }
            set { _WarrantyStart = value; }
        }
        public bool ShouldSerializeWarrantyStart()
        {
            return (_WarrantyStart.HasValue);
        }

        private DateTime? _WarrantyEnd;
        public DateTime WarrantyEnd
        {
            get { return _WarrantyEnd.Value; }
            set { _WarrantyEnd = value; }
        }
        public bool ShouldSerializeWarrantyEnd()
        {
            return (_WarrantyEnd.HasValue);
        }

        public string Location { get; set; }
        public string Notes { get; set; }
        public string BatchID { get; set; }
        private int? _SystemSerialNumber;
        public int SystemSerialNumber
        {
            get { return _SystemSerialNumber.Value; }
            set { _SystemSerialNumber = value; }
        }
        public bool ShouldSerializeSystemSerialNumber()
        {
            return (_SystemSerialNumber.HasValue);
        }

        private int? _BaseLineNumber;
        public int BaseLineNumber
        {
            get { return _BaseLineNumber.Value; }
            set { _BaseLineNumber = value; }
        }
        public bool ShouldSerializeBaseLineNumber()
        {
            return (_BaseLineNumber.HasValue);
        }

        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private int? _TrackingNote;
        public int TrackingNote
        {
            get { return _TrackingNote.Value; }
            set { _TrackingNote = value; }
        }
        public bool ShouldSerializeTrackingNote()
        {
            return (_TrackingNote.HasValue);
        }

        private int? _TrackingNoteLine;
        public int TrackingNoteLine
        {
            get { return _TrackingNoteLine.Value; }
            set { _TrackingNoteLine = value; }
        }
        public bool ShouldSerializeTrackingNoteLine()
        {
            return (_TrackingNoteLine.HasValue);
        }

    }

    public class BatchNumber
    {
        [DataMember(Name = "BatchNumber")]
        public string BatchNumberProperty { get; set; }
        public string ManufacturerSerialNumber { get; set; }
        public string InternalSerialNumber { get; set; }
        private DateTime? _ExpiryDate;
        public DateTime ExpiryDate
        {
            get { return _ExpiryDate.Value; }
            set { _ExpiryDate = value; }
        }
        public bool ShouldSerializeExpiryDate()
        {
            return (_ExpiryDate.HasValue);
        }

        private DateTime? _ManufacturingDate;
        public DateTime ManufacturingDate
        {
            get { return _ManufacturingDate.Value; }
            set { _ManufacturingDate = value; }
        }
        public bool ShouldSerializeManufacturingDate()
        {
            return (_ManufacturingDate.HasValue);
        }

        private DateTime? _AddmisionDate;
        public DateTime AddmisionDate
        {
            get { return _AddmisionDate.Value; }
            set { _AddmisionDate = value; }
        }
        public bool ShouldSerializeAddmisionDate()
        {
            return (_AddmisionDate.HasValue);
        }

        public string Location { get; set; }
        public string Notes { get; set; }
        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private int? _BaseLineNumber;
        public int BaseLineNumber
        {
            get { return _BaseLineNumber.Value; }
            set { _BaseLineNumber = value; }
        }
        public bool ShouldSerializeBaseLineNumber()
        {
            return (_BaseLineNumber.HasValue);
        }

        private int? _TrackingNote;
        public int TrackingNote
        {
            get { return _TrackingNote.Value; }
            set { _TrackingNote = value; }
        }
        public bool ShouldSerializeTrackingNote()
        {
            return (_TrackingNote.HasValue);
        }

        private int? _TrackingNoteLine;
        public int TrackingNoteLine
        {
            get { return _TrackingNoteLine.Value; }
            set { _TrackingNoteLine = value; }
        }
        public bool ShouldSerializeTrackingNoteLine()
        {
            return (_TrackingNoteLine.HasValue);
        }

    }

    public class DocumentLinesBinAllocation
    {
        private int? _BinAbsEntry;
        public int BinAbsEntry
        {
            get { return _BinAbsEntry.Value; }
            set { _BinAbsEntry = value; }
        }
        public bool ShouldSerializeBinAbsEntry()
        {
            return (_BinAbsEntry.HasValue);
        }

        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AllowNegativeQuantity;
        public SAPB1.BoYesNoEnum AllowNegativeQuantity
        {
            get { return _AllowNegativeQuantity.Value; }
            set { _AllowNegativeQuantity = value; }
        }
        public bool ShouldSerializeAllowNegativeQuantity()
        {
            return (_AllowNegativeQuantity.HasValue);
        }

        private int? _SerialAndBatchNumbersBaseLine;
        public int SerialAndBatchNumbersBaseLine
        {
            get { return _SerialAndBatchNumbersBaseLine.Value; }
            set { _SerialAndBatchNumbersBaseLine = value; }
        }
        public bool ShouldSerializeSerialAndBatchNumbersBaseLine()
        {
            return (_SerialAndBatchNumbersBaseLine.HasValue);
        }

        private int? _BaseLineNumber;
        public int BaseLineNumber
        {
            get { return _BaseLineNumber.Value; }
            set { _BaseLineNumber = value; }
        }
        public bool ShouldSerializeBaseLineNumber()
        {
            return (_BaseLineNumber.HasValue);
        }

    }

    public class DocumentAdditionalExpense
    {
        private int? _ExpenseCode;
        public int ExpenseCode
        {
            get { return _ExpenseCode.Value; }
            set { _ExpenseCode = value; }
        }
        public bool ShouldSerializeExpenseCode()
        {
            return (_ExpenseCode.HasValue);
        }

        private decimal? _LineTotal;
        public decimal LineTotal
        {
            get { return _LineTotal.Value; }
            set { _LineTotal = value; }
        }
        public bool ShouldSerializeLineTotal()
        {
            return (_LineTotal.HasValue);
        }

        private decimal? _LineTotalFC;
        public decimal LineTotalFC
        {
            get { return _LineTotalFC.Value; }
            set { _LineTotalFC = value; }
        }
        public bool ShouldSerializeLineTotalFC()
        {
            return (_LineTotalFC.HasValue);
        }

        private decimal? _LineTotalSys;
        public decimal LineTotalSys
        {
            get { return _LineTotalSys.Value; }
            set { _LineTotalSys = value; }
        }
        public bool ShouldSerializeLineTotalSys()
        {
            return (_LineTotalSys.HasValue);
        }

        private decimal? _PaidToDate;
        public decimal PaidToDate
        {
            get { return _PaidToDate.Value; }
            set { _PaidToDate = value; }
        }
        public bool ShouldSerializePaidToDate()
        {
            return (_PaidToDate.HasValue);
        }

        private decimal? _PaidToDateFC;
        public decimal PaidToDateFC
        {
            get { return _PaidToDateFC.Value; }
            set { _PaidToDateFC = value; }
        }
        public bool ShouldSerializePaidToDateFC()
        {
            return (_PaidToDateFC.HasValue);
        }

        private decimal? _PaidToDateSys;
        public decimal PaidToDateSys
        {
            get { return _PaidToDateSys.Value; }
            set { _PaidToDateSys = value; }
        }
        public bool ShouldSerializePaidToDateSys()
        {
            return (_PaidToDateSys.HasValue);
        }

        public string Remarks { get; set; }
        private SAPB1.BoAdEpnsDistribMethods? _DistributionMethod;
        public SAPB1.BoAdEpnsDistribMethods DistributionMethod
        {
            get { return _DistributionMethod.Value; }
            set { _DistributionMethod = value; }
        }
        public bool ShouldSerializeDistributionMethod()
        {
            return (_DistributionMethod.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TaxLiable;
        public SAPB1.BoYesNoEnum TaxLiable
        {
            get { return _TaxLiable.Value; }
            set { _TaxLiable = value; }
        }
        public bool ShouldSerializeTaxLiable()
        {
            return (_TaxLiable.HasValue);
        }

        public string VatGroup { get; set; }
        private decimal? _TaxPercent;
        public decimal TaxPercent
        {
            get { return _TaxPercent.Value; }
            set { _TaxPercent = value; }
        }
        public bool ShouldSerializeTaxPercent()
        {
            return (_TaxPercent.HasValue);
        }

        private decimal? _TaxSum;
        public decimal TaxSum
        {
            get { return _TaxSum.Value; }
            set { _TaxSum = value; }
        }
        public bool ShouldSerializeTaxSum()
        {
            return (_TaxSum.HasValue);
        }

        private decimal? _TaxSumFC;
        public decimal TaxSumFC
        {
            get { return _TaxSumFC.Value; }
            set { _TaxSumFC = value; }
        }
        public bool ShouldSerializeTaxSumFC()
        {
            return (_TaxSumFC.HasValue);
        }

        private decimal? _TaxSumSys;
        public decimal TaxSumSys
        {
            get { return _TaxSumSys.Value; }
            set { _TaxSumSys = value; }
        }
        public bool ShouldSerializeTaxSumSys()
        {
            return (_TaxSumSys.HasValue);
        }

        private decimal? _DeductibleTaxSum;
        public decimal DeductibleTaxSum
        {
            get { return _DeductibleTaxSum.Value; }
            set { _DeductibleTaxSum = value; }
        }
        public bool ShouldSerializeDeductibleTaxSum()
        {
            return (_DeductibleTaxSum.HasValue);
        }

        private decimal? _DeductibleTaxSumFC;
        public decimal DeductibleTaxSumFC
        {
            get { return _DeductibleTaxSumFC.Value; }
            set { _DeductibleTaxSumFC = value; }
        }
        public bool ShouldSerializeDeductibleTaxSumFC()
        {
            return (_DeductibleTaxSumFC.HasValue);
        }

        private decimal? _DeductibleTaxSumSys;
        public decimal DeductibleTaxSumSys
        {
            get { return _DeductibleTaxSumSys.Value; }
            set { _DeductibleTaxSumSys = value; }
        }
        public bool ShouldSerializeDeductibleTaxSumSys()
        {
            return (_DeductibleTaxSumSys.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AquisitionTax;
        public SAPB1.BoYesNoEnum AquisitionTax
        {
            get { return _AquisitionTax.Value; }
            set { _AquisitionTax = value; }
        }
        public bool ShouldSerializeAquisitionTax()
        {
            return (_AquisitionTax.HasValue);
        }

        public string TaxCode { get; set; }
        private SAPB1.BoAdEpnsTaxTypes? _TaxType;
        public SAPB1.BoAdEpnsTaxTypes TaxType
        {
            get { return _TaxType.Value; }
            set { _TaxType = value; }
        }
        public bool ShouldSerializeTaxType()
        {
            return (_TaxType.HasValue);
        }

        private decimal? _TaxPaid;
        public decimal TaxPaid
        {
            get { return _TaxPaid.Value; }
            set { _TaxPaid = value; }
        }
        public bool ShouldSerializeTaxPaid()
        {
            return (_TaxPaid.HasValue);
        }

        private decimal? _TaxPaidFC;
        public decimal TaxPaidFC
        {
            get { return _TaxPaidFC.Value; }
            set { _TaxPaidFC = value; }
        }
        public bool ShouldSerializeTaxPaidFC()
        {
            return (_TaxPaidFC.HasValue);
        }

        private decimal? _TaxPaidSys;
        public decimal TaxPaidSys
        {
            get { return _TaxPaidSys.Value; }
            set { _TaxPaidSys = value; }
        }
        public bool ShouldSerializeTaxPaidSys()
        {
            return (_TaxPaidSys.HasValue);
        }

        private decimal? _EqualizationTaxPercent;
        public decimal EqualizationTaxPercent
        {
            get { return _EqualizationTaxPercent.Value; }
            set { _EqualizationTaxPercent = value; }
        }
        public bool ShouldSerializeEqualizationTaxPercent()
        {
            return (_EqualizationTaxPercent.HasValue);
        }

        private decimal? _EqualizationTaxSum;
        public decimal EqualizationTaxSum
        {
            get { return _EqualizationTaxSum.Value; }
            set { _EqualizationTaxSum = value; }
        }
        public bool ShouldSerializeEqualizationTaxSum()
        {
            return (_EqualizationTaxSum.HasValue);
        }

        private decimal? _EqualizationTaxFC;
        public decimal EqualizationTaxFC
        {
            get { return _EqualizationTaxFC.Value; }
            set { _EqualizationTaxFC = value; }
        }
        public bool ShouldSerializeEqualizationTaxFC()
        {
            return (_EqualizationTaxFC.HasValue);
        }

        private decimal? _EqualizationTaxSys;
        public decimal EqualizationTaxSys
        {
            get { return _EqualizationTaxSys.Value; }
            set { _EqualizationTaxSys = value; }
        }
        public bool ShouldSerializeEqualizationTaxSys()
        {
            return (_EqualizationTaxSys.HasValue);
        }

        private decimal? _TaxTotalSum;
        public decimal TaxTotalSum
        {
            get { return _TaxTotalSum.Value; }
            set { _TaxTotalSum = value; }
        }
        public bool ShouldSerializeTaxTotalSum()
        {
            return (_TaxTotalSum.HasValue);
        }

        private decimal? _TaxTotalSumFC;
        public decimal TaxTotalSumFC
        {
            get { return _TaxTotalSumFC.Value; }
            set { _TaxTotalSumFC = value; }
        }
        public bool ShouldSerializeTaxTotalSumFC()
        {
            return (_TaxTotalSumFC.HasValue);
        }

        private decimal? _TaxTotalSumSys;
        public decimal TaxTotalSumSys
        {
            get { return _TaxTotalSumSys.Value; }
            set { _TaxTotalSumSys = value; }
        }
        public bool ShouldSerializeTaxTotalSumSys()
        {
            return (_TaxTotalSumSys.HasValue);
        }

        private int? _BaseDocEntry;
        public int BaseDocEntry
        {
            get { return _BaseDocEntry.Value; }
            set { _BaseDocEntry = value; }
        }
        public bool ShouldSerializeBaseDocEntry()
        {
            return (_BaseDocEntry.HasValue);
        }

        private int? _BaseDocLine;
        public int BaseDocLine
        {
            get { return _BaseDocLine.Value; }
            set { _BaseDocLine = value; }
        }
        public bool ShouldSerializeBaseDocLine()
        {
            return (_BaseDocLine.HasValue);
        }

        private int? _BaseDocType;
        public int BaseDocType
        {
            get { return _BaseDocType.Value; }
            set { _BaseDocType = value; }
        }
        public bool ShouldSerializeBaseDocType()
        {
            return (_BaseDocType.HasValue);
        }

        private int? _BaseDocumentReference;
        public int BaseDocumentReference
        {
            get { return _BaseDocumentReference.Value; }
            set { _BaseDocumentReference = value; }
        }
        public bool ShouldSerializeBaseDocumentReference()
        {
            return (_BaseDocumentReference.HasValue);
        }

        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private SAPB1.BoYesNoEnum? _LastPurchasePrice;
        public SAPB1.BoYesNoEnum LastPurchasePrice
        {
            get { return _LastPurchasePrice.Value; }
            set { _LastPurchasePrice = value; }
        }
        public bool ShouldSerializeLastPurchasePrice()
        {
            return (_LastPurchasePrice.HasValue);
        }

        private SAPB1.BoStatus? _Status;
        public SAPB1.BoStatus Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Stock;
        public SAPB1.BoYesNoEnum Stock
        {
            get { return _Stock.Value; }
            set { _Stock = value; }
        }
        public bool ShouldSerializeStock()
        {
            return (_Stock.HasValue);
        }

        private int? _TargetAbsEntry;
        public int TargetAbsEntry
        {
            get { return _TargetAbsEntry.Value; }
            set { _TargetAbsEntry = value; }
        }
        public bool ShouldSerializeTargetAbsEntry()
        {
            return (_TargetAbsEntry.HasValue);
        }

        private int? _TargetType;
        public int TargetType
        {
            get { return _TargetType.Value; }
            set { _TargetType = value; }
        }
        public bool ShouldSerializeTargetType()
        {
            return (_TargetType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WTLiable;
        public SAPB1.BoYesNoEnum WTLiable
        {
            get { return _WTLiable.Value; }
            set { _WTLiable = value; }
        }
        public bool ShouldSerializeWTLiable()
        {
            return (_WTLiable.HasValue);
        }

        public string DistributionRule { get; set; }
        public string Project { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
        private decimal? _LineGross;
        public decimal LineGross
        {
            get { return _LineGross.Value; }
            set { _LineGross = value; }
        }
        public bool ShouldSerializeLineGross()
        {
            return (_LineGross.HasValue);
        }

        private decimal? _LineGrossSys;
        public decimal LineGrossSys
        {
            get { return _LineGrossSys.Value; }
            set { _LineGrossSys = value; }
        }
        public bool ShouldSerializeLineGrossSys()
        {
            return (_LineGrossSys.HasValue);
        }

        private decimal? _LineGrossFC;
        public decimal LineGrossFC
        {
            get { return _LineGrossFC.Value; }
            set { _LineGrossFC = value; }
        }
        public bool ShouldSerializeLineGrossFC()
        {
            return (_LineGrossFC.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.DocExpenseTaxJurisdiction> DocExpenseTaxJurisdictions { get; set; }
    }

    public class DocExpenseTaxJurisdiction
    {
        public string JurisdictionCode { get; set; }
        private int? _JurisdictionType;
        public int JurisdictionType
        {
            get { return _JurisdictionType.Value; }
            set { _JurisdictionType = value; }
        }
        public bool ShouldSerializeJurisdictionType()
        {
            return (_JurisdictionType.HasValue);
        }

        private decimal? _TaxAmount;
        public decimal TaxAmount
        {
            get { return _TaxAmount.Value; }
            set { _TaxAmount = value; }
        }
        public bool ShouldSerializeTaxAmount()
        {
            return (_TaxAmount.HasValue);
        }

        private decimal? _TaxAmountSC;
        public decimal TaxAmountSC
        {
            get { return _TaxAmountSC.Value; }
            set { _TaxAmountSC = value; }
        }
        public bool ShouldSerializeTaxAmountSC()
        {
            return (_TaxAmountSC.HasValue);
        }

        private decimal? _TaxAmountFC;
        public decimal TaxAmountFC
        {
            get { return _TaxAmountFC.Value; }
            set { _TaxAmountFC = value; }
        }
        public bool ShouldSerializeTaxAmountFC()
        {
            return (_TaxAmountFC.HasValue);
        }

        private decimal? _TaxRate;
        public decimal TaxRate
        {
            get { return _TaxRate.Value; }
            set { _TaxRate = value; }
        }
        public bool ShouldSerializeTaxRate()
        {
            return (_TaxRate.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        private int? _RowSequence;
        public int RowSequence
        {
            get { return _RowSequence.Value; }
            set { _RowSequence = value; }
        }
        public bool ShouldSerializeRowSequence()
        {
            return (_RowSequence.HasValue);
        }

    }

    public class WithholdingTaxDataWTX
    {
        private decimal? _WTAmountSys;
        public decimal WTAmountSys
        {
            get { return _WTAmountSys.Value; }
            set { _WTAmountSys = value; }
        }
        public bool ShouldSerializeWTAmountSys()
        {
            return (_WTAmountSys.HasValue);
        }

        private decimal? _WTAmountFC;
        public decimal WTAmountFC
        {
            get { return _WTAmountFC.Value; }
            set { _WTAmountFC = value; }
        }
        public bool ShouldSerializeWTAmountFC()
        {
            return (_WTAmountFC.HasValue);
        }

        private decimal? _WTAmount;
        public decimal WTAmount
        {
            get { return _WTAmount.Value; }
            set { _WTAmount = value; }
        }
        public bool ShouldSerializeWTAmount()
        {
            return (_WTAmount.HasValue);
        }

        public string WithholdingType { get; set; }
        private decimal? _TaxableAmountinSys;
        public decimal TaxableAmountinSys
        {
            get { return _TaxableAmountinSys.Value; }
            set { _TaxableAmountinSys = value; }
        }
        public bool ShouldSerializeTaxableAmountinSys()
        {
            return (_TaxableAmountinSys.HasValue);
        }

        private decimal? _TaxableAmountFC;
        public decimal TaxableAmountFC
        {
            get { return _TaxableAmountFC.Value; }
            set { _TaxableAmountFC = value; }
        }
        public bool ShouldSerializeTaxableAmountFC()
        {
            return (_TaxableAmountFC.HasValue);
        }

        private decimal? _TaxableAmount;
        public decimal TaxableAmount
        {
            get { return _TaxableAmount.Value; }
            set { _TaxableAmount = value; }
        }
        public bool ShouldSerializeTaxableAmount()
        {
            return (_TaxableAmount.HasValue);
        }

        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

        public string Category { get; set; }
        public string BaseType { get; set; }
        private decimal? _AppliedWTAmountSys;
        public decimal AppliedWTAmountSys
        {
            get { return _AppliedWTAmountSys.Value; }
            set { _AppliedWTAmountSys = value; }
        }
        public bool ShouldSerializeAppliedWTAmountSys()
        {
            return (_AppliedWTAmountSys.HasValue);
        }

        private decimal? _AppliedWTAmountFC;
        public decimal AppliedWTAmountFC
        {
            get { return _AppliedWTAmountFC.Value; }
            set { _AppliedWTAmountFC = value; }
        }
        public bool ShouldSerializeAppliedWTAmountFC()
        {
            return (_AppliedWTAmountFC.HasValue);
        }

        private decimal? _AppliedWTAmount;
        public decimal AppliedWTAmount
        {
            get { return _AppliedWTAmount.Value; }
            set { _AppliedWTAmount = value; }
        }
        public bool ShouldSerializeAppliedWTAmount()
        {
            return (_AppliedWTAmount.HasValue);
        }

        public string GLAccount { get; set; }
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _BaseDocEntry;
        public int BaseDocEntry
        {
            get { return _BaseDocEntry.Value; }
            set { _BaseDocEntry = value; }
        }
        public bool ShouldSerializeBaseDocEntry()
        {
            return (_BaseDocEntry.HasValue);
        }

        private int? _BaseDocLine;
        public int BaseDocLine
        {
            get { return _BaseDocLine.Value; }
            set { _BaseDocLine = value; }
        }
        public bool ShouldSerializeBaseDocLine()
        {
            return (_BaseDocLine.HasValue);
        }

        public string BaseDocType { get; set; }
        public string WTAbsId { get; set; }
        private decimal? _ExemptRate;
        public decimal ExemptRate
        {
            get { return _ExemptRate.Value; }
            set { _ExemptRate = value; }
        }
        public bool ShouldSerializeExemptRate()
        {
            return (_ExemptRate.HasValue);
        }

        private decimal? _BaseNetAmountSys;
        public decimal BaseNetAmountSys
        {
            get { return _BaseNetAmountSys.Value; }
            set { _BaseNetAmountSys = value; }
        }
        public bool ShouldSerializeBaseNetAmountSys()
        {
            return (_BaseNetAmountSys.HasValue);
        }

        private decimal? _BaseNetAmountFC;
        public decimal BaseNetAmountFC
        {
            get { return _BaseNetAmountFC.Value; }
            set { _BaseNetAmountFC = value; }
        }
        public bool ShouldSerializeBaseNetAmountFC()
        {
            return (_BaseNetAmountFC.HasValue);
        }

        private decimal? _BaseNetAmount;
        public decimal BaseNetAmount
        {
            get { return _BaseNetAmount.Value; }
            set { _BaseNetAmount = value; }
        }
        public bool ShouldSerializeBaseNetAmount()
        {
            return (_BaseNetAmount.HasValue);
        }

        private decimal? _BaseVatmountSys;
        public decimal BaseVatmountSys
        {
            get { return _BaseVatmountSys.Value; }
            set { _BaseVatmountSys = value; }
        }
        public bool ShouldSerializeBaseVatmountSys()
        {
            return (_BaseVatmountSys.HasValue);
        }

        private decimal? _BaseVatmountFC;
        public decimal BaseVatmountFC
        {
            get { return _BaseVatmountFC.Value; }
            set { _BaseVatmountFC = value; }
        }
        public bool ShouldSerializeBaseVatmountFC()
        {
            return (_BaseVatmountFC.HasValue);
        }

        private decimal? _BaseVatmount;
        public decimal BaseVatmount
        {
            get { return _BaseVatmount.Value; }
            set { _BaseVatmount = value; }
        }
        public bool ShouldSerializeBaseVatmount()
        {
            return (_BaseVatmount.HasValue);
        }

        private decimal? _AccumBaseAmountSys;
        public decimal AccumBaseAmountSys
        {
            get { return _AccumBaseAmountSys.Value; }
            set { _AccumBaseAmountSys = value; }
        }
        public bool ShouldSerializeAccumBaseAmountSys()
        {
            return (_AccumBaseAmountSys.HasValue);
        }

        private decimal? _AccumBaseAmountFC;
        public decimal AccumBaseAmountFC
        {
            get { return _AccumBaseAmountFC.Value; }
            set { _AccumBaseAmountFC = value; }
        }
        public bool ShouldSerializeAccumBaseAmountFC()
        {
            return (_AccumBaseAmountFC.HasValue);
        }

        private decimal? _AccumBaseAmount;
        public decimal AccumBaseAmount
        {
            get { return _AccumBaseAmount.Value; }
            set { _AccumBaseAmount = value; }
        }
        public bool ShouldSerializeAccumBaseAmount()
        {
            return (_AccumBaseAmount.HasValue);
        }

        private decimal? _AccumWTaxAmountSys;
        public decimal AccumWTaxAmountSys
        {
            get { return _AccumWTaxAmountSys.Value; }
            set { _AccumWTaxAmountSys = value; }
        }
        public bool ShouldSerializeAccumWTaxAmountSys()
        {
            return (_AccumWTaxAmountSys.HasValue);
        }

        private decimal? _AccumWTaxAmountFC;
        public decimal AccumWTaxAmountFC
        {
            get { return _AccumWTaxAmountFC.Value; }
            set { _AccumWTaxAmountFC = value; }
        }
        public bool ShouldSerializeAccumWTaxAmountFC()
        {
            return (_AccumWTaxAmountFC.HasValue);
        }

        private decimal? _AccumWTaxAmount;
        public decimal AccumWTaxAmount
        {
            get { return _AccumWTaxAmount.Value; }
            set { _AccumWTaxAmount = value; }
        }
        public bool ShouldSerializeAccumWTaxAmount()
        {
            return (_AccumWTaxAmount.HasValue);
        }

    }

    public class WithholdingTaxData
    {
        public string WTCode { get; set; }
        private decimal? _WTAmountSys;
        public decimal WTAmountSys
        {
            get { return _WTAmountSys.Value; }
            set { _WTAmountSys = value; }
        }
        public bool ShouldSerializeWTAmountSys()
        {
            return (_WTAmountSys.HasValue);
        }

        private decimal? _WTAmountFC;
        public decimal WTAmountFC
        {
            get { return _WTAmountFC.Value; }
            set { _WTAmountFC = value; }
        }
        public bool ShouldSerializeWTAmountFC()
        {
            return (_WTAmountFC.HasValue);
        }

        private decimal? _WTAmount;
        public decimal WTAmount
        {
            get { return _WTAmount.Value; }
            set { _WTAmount = value; }
        }
        public bool ShouldSerializeWTAmount()
        {
            return (_WTAmount.HasValue);
        }

        public string WithholdingType { get; set; }
        private decimal? _TaxableAmountinSys;
        public decimal TaxableAmountinSys
        {
            get { return _TaxableAmountinSys.Value; }
            set { _TaxableAmountinSys = value; }
        }
        public bool ShouldSerializeTaxableAmountinSys()
        {
            return (_TaxableAmountinSys.HasValue);
        }

        private decimal? _TaxableAmountFC;
        public decimal TaxableAmountFC
        {
            get { return _TaxableAmountFC.Value; }
            set { _TaxableAmountFC = value; }
        }
        public bool ShouldSerializeTaxableAmountFC()
        {
            return (_TaxableAmountFC.HasValue);
        }

        private decimal? _TaxableAmount;
        public decimal TaxableAmount
        {
            get { return _TaxableAmount.Value; }
            set { _TaxableAmount = value; }
        }
        public bool ShouldSerializeTaxableAmount()
        {
            return (_TaxableAmount.HasValue);
        }

        public string RoundingType { get; set; }
        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

        public string Criteria { get; set; }
        public string Category { get; set; }
        public string BaseType { get; set; }
        private decimal? _AppliedWTAmountSys;
        public decimal AppliedWTAmountSys
        {
            get { return _AppliedWTAmountSys.Value; }
            set { _AppliedWTAmountSys = value; }
        }
        public bool ShouldSerializeAppliedWTAmountSys()
        {
            return (_AppliedWTAmountSys.HasValue);
        }

        private decimal? _AppliedWTAmountFC;
        public decimal AppliedWTAmountFC
        {
            get { return _AppliedWTAmountFC.Value; }
            set { _AppliedWTAmountFC = value; }
        }
        public bool ShouldSerializeAppliedWTAmountFC()
        {
            return (_AppliedWTAmountFC.HasValue);
        }

        private decimal? _AppliedWTAmount;
        public decimal AppliedWTAmount
        {
            get { return _AppliedWTAmount.Value; }
            set { _AppliedWTAmount = value; }
        }
        public bool ShouldSerializeAppliedWTAmount()
        {
            return (_AppliedWTAmount.HasValue);
        }

        public string GLAccount { get; set; }
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _BaseDocEntry;
        public int BaseDocEntry
        {
            get { return _BaseDocEntry.Value; }
            set { _BaseDocEntry = value; }
        }
        public bool ShouldSerializeBaseDocEntry()
        {
            return (_BaseDocEntry.HasValue);
        }

        private int? _BaseDocLine;
        public int BaseDocLine
        {
            get { return _BaseDocLine.Value; }
            set { _BaseDocLine = value; }
        }
        public bool ShouldSerializeBaseDocLine()
        {
            return (_BaseDocLine.HasValue);
        }

        private int? _BaseDocType;
        public int BaseDocType
        {
            get { return _BaseDocType.Value; }
            set { _BaseDocType = value; }
        }
        public bool ShouldSerializeBaseDocType()
        {
            return (_BaseDocType.HasValue);
        }

        private int? _BaseDocumentReference;
        public int BaseDocumentReference
        {
            get { return _BaseDocumentReference.Value; }
            set { _BaseDocumentReference = value; }
        }
        public bool ShouldSerializeBaseDocumentReference()
        {
            return (_BaseDocumentReference.HasValue);
        }

        private SAPB1.BoStatus? _Status;
        public SAPB1.BoStatus Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private int? _TargetAbsEntry;
        public int TargetAbsEntry
        {
            get { return _TargetAbsEntry.Value; }
            set { _TargetAbsEntry = value; }
        }
        public bool ShouldSerializeTargetAbsEntry()
        {
            return (_TargetAbsEntry.HasValue);
        }

        private int? _TargetDocumentType;
        public int TargetDocumentType
        {
            get { return _TargetDocumentType.Value; }
            set { _TargetDocumentType = value; }
        }
        public bool ShouldSerializeTargetDocumentType()
        {
            return (_TargetDocumentType.HasValue);
        }

    }

    public class DocumentPackage
    {
        private int? _Number;
        public int Number
        {
            get { return _Number.Value; }
            set { _Number = value; }
        }
        public bool ShouldSerializeNumber()
        {
            return (_Number.HasValue);
        }

        public string Type { get; set; }
        private decimal? _TotalWeight;
        public decimal TotalWeight
        {
            get { return _TotalWeight.Value; }
            set { _TotalWeight = value; }
        }
        public bool ShouldSerializeTotalWeight()
        {
            return (_TotalWeight.HasValue);
        }

        private int? _Units;
        public int Units
        {
            get { return _Units.Value; }
            set { _Units = value; }
        }
        public bool ShouldSerializeUnits()
        {
            return (_Units.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.DocumentPackageItem> DocumentPackageItems { get; set; }
    }

    public class DocumentPackageItem
    {
        private int? _PackageNumber;
        public int PackageNumber
        {
            get { return _PackageNumber.Value; }
            set { _PackageNumber = value; }
        }
        public bool ShouldSerializePackageNumber()
        {
            return (_PackageNumber.HasValue);
        }

        public string ItemCode { get; set; }
        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

        public string MeasureUnit { get; set; }
        private decimal? _UnitsOfMeasurement;
        public decimal UnitsOfMeasurement
        {
            get { return _UnitsOfMeasurement.Value; }
            set { _UnitsOfMeasurement = value; }
        }
        public bool ShouldSerializeUnitsOfMeasurement()
        {
            return (_UnitsOfMeasurement.HasValue);
        }

    }

    public class DocumentSpecialLine
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _AfterLineNumber;
        public int AfterLineNumber
        {
            get { return _AfterLineNumber.Value; }
            set { _AfterLineNumber = value; }
        }
        public bool ShouldSerializeAfterLineNumber()
        {
            return (_AfterLineNumber.HasValue);
        }

        private int? _OrderNumber;
        public int OrderNumber
        {
            get { return _OrderNumber.Value; }
            set { _OrderNumber = value; }
        }
        public bool ShouldSerializeOrderNumber()
        {
            return (_OrderNumber.HasValue);
        }

        private SAPB1.BoDocSpecialLineType? _LineType;
        public SAPB1.BoDocSpecialLineType LineType
        {
            get { return _LineType.Value; }
            set { _LineType = value; }
        }
        public bool ShouldSerializeLineType()
        {
            return (_LineType.HasValue);
        }

        private decimal? _Subtotal;
        public decimal Subtotal
        {
            get { return _Subtotal.Value; }
            set { _Subtotal = value; }
        }
        public bool ShouldSerializeSubtotal()
        {
            return (_Subtotal.HasValue);
        }

        public string LineText { get; set; }
        private decimal? _SubtotalFC;
        public decimal SubtotalFC
        {
            get { return _SubtotalFC.Value; }
            set { _SubtotalFC = value; }
        }
        public bool ShouldSerializeSubtotalFC()
        {
            return (_SubtotalFC.HasValue);
        }

        private decimal? _SubtotalSC;
        public decimal SubtotalSC
        {
            get { return _SubtotalSC.Value; }
            set { _SubtotalSC = value; }
        }
        public bool ShouldSerializeSubtotalSC()
        {
            return (_SubtotalSC.HasValue);
        }

        private decimal? _TaxAmount;
        public decimal TaxAmount
        {
            get { return _TaxAmount.Value; }
            set { _TaxAmount = value; }
        }
        public bool ShouldSerializeTaxAmount()
        {
            return (_TaxAmount.HasValue);
        }

        private decimal? _TaxAmountFC;
        public decimal TaxAmountFC
        {
            get { return _TaxAmountFC.Value; }
            set { _TaxAmountFC = value; }
        }
        public bool ShouldSerializeTaxAmountFC()
        {
            return (_TaxAmountFC.HasValue);
        }

        private decimal? _TaxAmountSC;
        public decimal TaxAmountSC
        {
            get { return _TaxAmountSC.Value; }
            set { _TaxAmountSC = value; }
        }
        public bool ShouldSerializeTaxAmountSC()
        {
            return (_TaxAmountSC.HasValue);
        }

        private decimal? _Freight1;
        public decimal Freight1
        {
            get { return _Freight1.Value; }
            set { _Freight1 = value; }
        }
        public bool ShouldSerializeFreight1()
        {
            return (_Freight1.HasValue);
        }

        private decimal? _Freight1FC;
        public decimal Freight1FC
        {
            get { return _Freight1FC.Value; }
            set { _Freight1FC = value; }
        }
        public bool ShouldSerializeFreight1FC()
        {
            return (_Freight1FC.HasValue);
        }

        private decimal? _Freight1SC;
        public decimal Freight1SC
        {
            get { return _Freight1SC.Value; }
            set { _Freight1SC = value; }
        }
        public bool ShouldSerializeFreight1SC()
        {
            return (_Freight1SC.HasValue);
        }

        private decimal? _Freight2;
        public decimal Freight2
        {
            get { return _Freight2.Value; }
            set { _Freight2 = value; }
        }
        public bool ShouldSerializeFreight2()
        {
            return (_Freight2.HasValue);
        }

        private decimal? _Freight2FC;
        public decimal Freight2FC
        {
            get { return _Freight2FC.Value; }
            set { _Freight2FC = value; }
        }
        public bool ShouldSerializeFreight2FC()
        {
            return (_Freight2FC.HasValue);
        }

        private decimal? _Freight2SC;
        public decimal Freight2SC
        {
            get { return _Freight2SC.Value; }
            set { _Freight2SC = value; }
        }
        public bool ShouldSerializeFreight2SC()
        {
            return (_Freight2SC.HasValue);
        }

        private decimal? _Freight3;
        public decimal Freight3
        {
            get { return _Freight3.Value; }
            set { _Freight3 = value; }
        }
        public bool ShouldSerializeFreight3()
        {
            return (_Freight3.HasValue);
        }

        private decimal? _Freight3FC;
        public decimal Freight3FC
        {
            get { return _Freight3FC.Value; }
            set { _Freight3FC = value; }
        }
        public bool ShouldSerializeFreight3FC()
        {
            return (_Freight3FC.HasValue);
        }

        private decimal? _Freight3SC;
        public decimal Freight3SC
        {
            get { return _Freight3SC.Value; }
            set { _Freight3SC = value; }
        }
        public bool ShouldSerializeFreight3SC()
        {
            return (_Freight3SC.HasValue);
        }

        private decimal? _GrossTotal;
        public decimal GrossTotal
        {
            get { return _GrossTotal.Value; }
            set { _GrossTotal = value; }
        }
        public bool ShouldSerializeGrossTotal()
        {
            return (_GrossTotal.HasValue);
        }

        private decimal? _GrossTotalFC;
        public decimal GrossTotalFC
        {
            get { return _GrossTotalFC.Value; }
            set { _GrossTotalFC = value; }
        }
        public bool ShouldSerializeGrossTotalFC()
        {
            return (_GrossTotalFC.HasValue);
        }

        private decimal? _GrossTotalSC;
        public decimal GrossTotalSC
        {
            get { return _GrossTotalSC.Value; }
            set { _GrossTotalSC = value; }
        }
        public bool ShouldSerializeGrossTotalSC()
        {
            return (_GrossTotalSC.HasValue);
        }

    }

    public class DocumentInstallment
    {
        private DateTime? _DueDate;
        public DateTime DueDate
        {
            get { return _DueDate.Value; }
            set { _DueDate = value; }
        }
        public bool ShouldSerializeDueDate()
        {
            return (_DueDate.HasValue);
        }

        private decimal? _Percentage;
        public decimal Percentage
        {
            get { return _Percentage.Value; }
            set { _Percentage = value; }
        }
        public bool ShouldSerializePercentage()
        {
            return (_Percentage.HasValue);
        }

        private decimal? _Total;
        public decimal Total
        {
            get { return _Total.Value; }
            set { _Total = value; }
        }
        public bool ShouldSerializeTotal()
        {
            return (_Total.HasValue);
        }

        private DateTime? _LastDunningDate;
        public DateTime LastDunningDate
        {
            get { return _LastDunningDate.Value; }
            set { _LastDunningDate = value; }
        }
        public bool ShouldSerializeLastDunningDate()
        {
            return (_LastDunningDate.HasValue);
        }

        private int? _DunningLevel;
        public int DunningLevel
        {
            get { return _DunningLevel.Value; }
            set { _DunningLevel = value; }
        }
        public bool ShouldSerializeDunningLevel()
        {
            return (_DunningLevel.HasValue);
        }

        private decimal? _TotalFC;
        public decimal TotalFC
        {
            get { return _TotalFC.Value; }
            set { _TotalFC = value; }
        }
        public bool ShouldSerializeTotalFC()
        {
            return (_TotalFC.HasValue);
        }

        private int? _InstallmentId;
        public int InstallmentId
        {
            get { return _InstallmentId.Value; }
            set { _InstallmentId = value; }
        }
        public bool ShouldSerializeInstallmentId()
        {
            return (_InstallmentId.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PaymentOrdered;
        public SAPB1.BoYesNoEnum PaymentOrdered
        {
            get { return _PaymentOrdered.Value; }
            set { _PaymentOrdered = value; }
        }
        public bool ShouldSerializePaymentOrdered()
        {
            return (_PaymentOrdered.HasValue);
        }

    }

    public class DownPaymentToDraw
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private DateTime? _PostingDate;
        public DateTime PostingDate
        {
            get { return _PostingDate.Value; }
            set { _PostingDate = value; }
        }
        public bool ShouldSerializePostingDate()
        {
            return (_PostingDate.HasValue);
        }

        private DateTime? _DueDate;
        public DateTime DueDate
        {
            get { return _DueDate.Value; }
            set { _DueDate = value; }
        }
        public bool ShouldSerializeDueDate()
        {
            return (_DueDate.HasValue);
        }

        public string Name { get; set; }
        public string Details { get; set; }
        private decimal? _AmountToDraw;
        public decimal AmountToDraw
        {
            get { return _AmountToDraw.Value; }
            set { _AmountToDraw = value; }
        }
        public bool ShouldSerializeAmountToDraw()
        {
            return (_AmountToDraw.HasValue);
        }

        private SAPB1.DownPaymentTypeEnum? _DownPaymentType;
        public SAPB1.DownPaymentTypeEnum DownPaymentType
        {
            get { return _DownPaymentType.Value; }
            set { _DownPaymentType = value; }
        }
        public bool ShouldSerializeDownPaymentType()
        {
            return (_DownPaymentType.HasValue);
        }

        private decimal? _AmountToDrawFC;
        public decimal AmountToDrawFC
        {
            get { return _AmountToDrawFC.Value; }
            set { _AmountToDrawFC = value; }
        }
        public bool ShouldSerializeAmountToDrawFC()
        {
            return (_AmountToDrawFC.HasValue);
        }

        private decimal? _AmountToDrawSC;
        public decimal AmountToDrawSC
        {
            get { return _AmountToDrawSC.Value; }
            set { _AmountToDrawSC = value; }
        }
        public bool ShouldSerializeAmountToDrawSC()
        {
            return (_AmountToDrawSC.HasValue);
        }

        private int? _DocInternalID;
        public int DocInternalID
        {
            get { return _DocInternalID.Value; }
            set { _DocInternalID = value; }
        }
        public bool ShouldSerializeDocInternalID()
        {
            return (_DocInternalID.HasValue);
        }

        private int? _RowNum;
        public int RowNum
        {
            get { return _RowNum.Value; }
            set { _RowNum = value; }
        }
        public bool ShouldSerializeRowNum()
        {
            return (_RowNum.HasValue);
        }

        private int? _DocNumber;
        public int DocNumber
        {
            get { return _DocNumber.Value; }
            set { _DocNumber = value; }
        }
        public bool ShouldSerializeDocNumber()
        {
            return (_DocNumber.HasValue);
        }

        private decimal? _Tax;
        public decimal Tax
        {
            get { return _Tax.Value; }
            set { _Tax = value; }
        }
        public bool ShouldSerializeTax()
        {
            return (_Tax.HasValue);
        }

        private decimal? _TaxFC;
        public decimal TaxFC
        {
            get { return _TaxFC.Value; }
            set { _TaxFC = value; }
        }
        public bool ShouldSerializeTaxFC()
        {
            return (_TaxFC.HasValue);
        }

        private decimal? _TaxSC;
        public decimal TaxSC
        {
            get { return _TaxSC.Value; }
            set { _TaxSC = value; }
        }
        public bool ShouldSerializeTaxSC()
        {
            return (_TaxSC.HasValue);
        }

        private decimal? _GrossAmountToDraw;
        public decimal GrossAmountToDraw
        {
            get { return _GrossAmountToDraw.Value; }
            set { _GrossAmountToDraw = value; }
        }
        public bool ShouldSerializeGrossAmountToDraw()
        {
            return (_GrossAmountToDraw.HasValue);
        }

        private decimal? _GrossAmountToDrawFC;
        public decimal GrossAmountToDrawFC
        {
            get { return _GrossAmountToDrawFC.Value; }
            set { _GrossAmountToDrawFC = value; }
        }
        public bool ShouldSerializeGrossAmountToDrawFC()
        {
            return (_GrossAmountToDrawFC.HasValue);
        }

        private decimal? _GrossAmountToDrawSC;
        public decimal GrossAmountToDrawSC
        {
            get { return _GrossAmountToDrawSC.Value; }
            set { _GrossAmountToDrawSC = value; }
        }
        public bool ShouldSerializeGrossAmountToDrawSC()
        {
            return (_GrossAmountToDrawSC.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsGrossLine;
        public SAPB1.BoYesNoEnum IsGrossLine
        {
            get { return _IsGrossLine.Value; }
            set { _IsGrossLine = value; }
        }
        public bool ShouldSerializeIsGrossLine()
        {
            return (_IsGrossLine.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.DownPaymentToDrawDetails> DownPaymentsToDrawDetails { get; set; }
    }

    public class DownPaymentToDrawDetails
    {
        private int? _DocInternalID;
        public int DocInternalID
        {
            get { return _DocInternalID.Value; }
            set { _DocInternalID = value; }
        }
        public bool ShouldSerializeDocInternalID()
        {
            return (_DocInternalID.HasValue);
        }

        private int? _RowNum;
        public int RowNum
        {
            get { return _RowNum.Value; }
            set { _RowNum = value; }
        }
        public bool ShouldSerializeRowNum()
        {
            return (_RowNum.HasValue);
        }

        private int? _SeqNum;
        public int SeqNum
        {
            get { return _SeqNum.Value; }
            set { _SeqNum = value; }
        }
        public bool ShouldSerializeSeqNum()
        {
            return (_SeqNum.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        public string VatGroupCode { get; set; }
        private decimal? _VatPercent;
        public decimal VatPercent
        {
            get { return _VatPercent.Value; }
            set { _VatPercent = value; }
        }
        public bool ShouldSerializeVatPercent()
        {
            return (_VatPercent.HasValue);
        }

        private decimal? _AmountToDraw;
        public decimal AmountToDraw
        {
            get { return _AmountToDraw.Value; }
            set { _AmountToDraw = value; }
        }
        public bool ShouldSerializeAmountToDraw()
        {
            return (_AmountToDraw.HasValue);
        }

        private decimal? _AmountToDrawFC;
        public decimal AmountToDrawFC
        {
            get { return _AmountToDrawFC.Value; }
            set { _AmountToDrawFC = value; }
        }
        public bool ShouldSerializeAmountToDrawFC()
        {
            return (_AmountToDrawFC.HasValue);
        }

        private decimal? _AmountToDrawSC;
        public decimal AmountToDrawSC
        {
            get { return _AmountToDrawSC.Value; }
            set { _AmountToDrawSC = value; }
        }
        public bool ShouldSerializeAmountToDrawSC()
        {
            return (_AmountToDrawSC.HasValue);
        }

        private decimal? _Tax;
        public decimal Tax
        {
            get { return _Tax.Value; }
            set { _Tax = value; }
        }
        public bool ShouldSerializeTax()
        {
            return (_Tax.HasValue);
        }

        private decimal? _TaxFC;
        public decimal TaxFC
        {
            get { return _TaxFC.Value; }
            set { _TaxFC = value; }
        }
        public bool ShouldSerializeTaxFC()
        {
            return (_TaxFC.HasValue);
        }

        private decimal? _TaxSC;
        public decimal TaxSC
        {
            get { return _TaxSC.Value; }
            set { _TaxSC = value; }
        }
        public bool ShouldSerializeTaxSC()
        {
            return (_TaxSC.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsGrossLine;
        public SAPB1.BoYesNoEnum IsGrossLine
        {
            get { return _IsGrossLine.Value; }
            set { _IsGrossLine = value; }
        }
        public bool ShouldSerializeIsGrossLine()
        {
            return (_IsGrossLine.HasValue);
        }

        private decimal? _GrossAmountToDraw;
        public decimal GrossAmountToDraw
        {
            get { return _GrossAmountToDraw.Value; }
            set { _GrossAmountToDraw = value; }
        }
        public bool ShouldSerializeGrossAmountToDraw()
        {
            return (_GrossAmountToDraw.HasValue);
        }

        private decimal? _GrossAmountToDrawFC;
        public decimal GrossAmountToDrawFC
        {
            get { return _GrossAmountToDrawFC.Value; }
            set { _GrossAmountToDrawFC = value; }
        }
        public bool ShouldSerializeGrossAmountToDrawFC()
        {
            return (_GrossAmountToDrawFC.HasValue);
        }

        private decimal? _GrossAmountToDrawSC;
        public decimal GrossAmountToDrawSC
        {
            get { return _GrossAmountToDrawSC.Value; }
            set { _GrossAmountToDrawSC = value; }
        }
        public bool ShouldSerializeGrossAmountToDrawSC()
        {
            return (_GrossAmountToDrawSC.HasValue);
        }

        private SAPB1.LineTypeEnum? _LineType;
        public SAPB1.LineTypeEnum LineType
        {
            get { return _LineType.Value; }
            set { _LineType = value; }
        }
        public bool ShouldSerializeLineType()
        {
            return (_LineType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TaxAdjust;
        public SAPB1.BoYesNoEnum TaxAdjust
        {
            get { return _TaxAdjust.Value; }
            set { _TaxAdjust = value; }
        }
        public bool ShouldSerializeTaxAdjust()
        {
            return (_TaxAdjust.HasValue);
        }

    }

    public class TaxExtension
    {
        public string TaxId0 { get; set; }
        public string TaxId1 { get; set; }
        public string TaxId2 { get; set; }
        public string TaxId3 { get; set; }
        public string TaxId4 { get; set; }
        public string TaxId5 { get; set; }
        public string TaxId6 { get; set; }
        public string TaxId7 { get; set; }
        public string TaxId8 { get; set; }
        public string TaxId9 { get; set; }
        public string State { get; set; }
        public string County { get; set; }
        public string Incoterms { get; set; }
        public string Vehicle { get; set; }
        public string VehicleState { get; set; }
        public string NFRef { get; set; }
        public string Carrier { get; set; }
        private int? _PackQuantity;
        public int PackQuantity
        {
            get { return _PackQuantity.Value; }
            set { _PackQuantity = value; }
        }
        public bool ShouldSerializePackQuantity()
        {
            return (_PackQuantity.HasValue);
        }

        public string PackDescription { get; set; }
        public string Brand { get; set; }
        private int? _ShipUnitNo;
        public int ShipUnitNo
        {
            get { return _ShipUnitNo.Value; }
            set { _ShipUnitNo = value; }
        }
        public bool ShouldSerializeShipUnitNo()
        {
            return (_ShipUnitNo.HasValue);
        }

        private decimal? _NetWeight;
        public decimal NetWeight
        {
            get { return _NetWeight.Value; }
            set { _NetWeight = value; }
        }
        public bool ShouldSerializeNetWeight()
        {
            return (_NetWeight.HasValue);
        }

        private decimal? _GrossWeight;
        public decimal GrossWeight
        {
            get { return _GrossWeight.Value; }
            set { _GrossWeight = value; }
        }
        public bool ShouldSerializeGrossWeight()
        {
            return (_GrossWeight.HasValue);
        }

        public string StreetS { get; set; }
        public string BlockS { get; set; }
        public string BuildingS { get; set; }
        public string CityS { get; set; }
        public string ZipCodeS { get; set; }
        public string CountyS { get; set; }
        public string StateS { get; set; }
        public string CountryS { get; set; }
        public string StreetB { get; set; }
        public string BlockB { get; set; }
        public string BuildingB { get; set; }
        public string CityB { get; set; }
        public string ZipCodeB { get; set; }
        public string CountyB { get; set; }
        public string StateB { get; set; }
        public string CountryB { get; set; }
        private SAPB1.BoYesNoEnum? _ImportOrExport;
        public SAPB1.BoYesNoEnum ImportOrExport
        {
            get { return _ImportOrExport.Value; }
            set { _ImportOrExport = value; }
        }
        public bool ShouldSerializeImportOrExport()
        {
            return (_ImportOrExport.HasValue);
        }

        private int? _MainUsage;
        public int MainUsage
        {
            get { return _MainUsage.Value; }
            set { _MainUsage = value; }
        }
        public bool ShouldSerializeMainUsage()
        {
            return (_MainUsage.HasValue);
        }

        public string GlobalLocationNumberS { get; set; }
        public string GlobalLocationNumberB { get; set; }
        public string TaxId12 { get; set; }
        public string TaxId13 { get; set; }
    }

    public class AddressExtension
    {
        public string ShipToStreet { get; set; }
        public string ShipToStreetNo { get; set; }
        public string ShipToBlock { get; set; }
        public string ShipToBuilding { get; set; }
        public string ShipToCity { get; set; }
        public string ShipToZipCode { get; set; }
        public string ShipToCounty { get; set; }
        public string ShipToState { get; set; }
        public string ShipToCountry { get; set; }
        public string ShipToAddressType { get; set; }
        public string BillToStreet { get; set; }
        public string BillToStreetNo { get; set; }
        public string BillToBlock { get; set; }
        public string BillToBuilding { get; set; }
        public string BillToCity { get; set; }
        public string BillToZipCode { get; set; }
        public string BillToCounty { get; set; }
        public string BillToState { get; set; }
        public string BillToCountry { get; set; }
        public string BillToAddressType { get; set; }
        public string ShipToGlobalLocationNumber { get; set; }
        public string BillToGlobalLocationNumber { get; set; }
        public string ShipToAddress2 { get; set; }
        public string ShipToAddress3 { get; set; }
        public string BillToAddress2 { get; set; }
        public string BillToAddress3 { get; set; }
    }

    public class DeductionTaxHierarchy
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        public string BPCode { get; set; }
        public string HierarchyCode { get; set; }
        public string HierarchyName { get; set; }
        private DateTime? _ValidFrom;
        public DateTime ValidFrom
        {
            get { return _ValidFrom.Value; }
            set { _ValidFrom = value; }
        }
        public bool ShouldSerializeValidFrom()
        {
            return (_ValidFrom.HasValue);
        }

        private DateTime? _ValidUntil;
        public DateTime ValidUntil
        {
            get { return _ValidUntil.Value; }
            set { _ValidUntil = value; }
        }
        public bool ShouldSerializeValidUntil()
        {
            return (_ValidUntil.HasValue);
        }

        private decimal? _DeductionPercent;
        public decimal DeductionPercent
        {
            get { return _DeductionPercent.Value; }
            set { _DeductionPercent = value; }
        }
        public bool ShouldSerializeDeductionPercent()
        {
            return (_DeductionPercent.HasValue);
        }

        private decimal? _MaximumTotal;
        public decimal MaximumTotal
        {
            get { return _MaximumTotal.Value; }
            set { _MaximumTotal = value; }
        }
        public bool ShouldSerializeMaximumTotal()
        {
            return (_MaximumTotal.HasValue);
        }

        private DateTime? _LastUpdated;
        public DateTime LastUpdated
        {
            get { return _LastUpdated.Value; }
            set { _LastUpdated = value; }
        }
        public bool ShouldSerializeLastUpdated()
        {
            return (_LastUpdated.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.DeductionTaxHierarchies_Line> DeductionTaxHierarchies_Lines { get; set; }
    }

    public class DeductionTaxHierarchies_Line
    {
        private int? _RowNumber;
        public int RowNumber
        {
            get { return _RowNumber.Value; }
            set { _RowNumber = value; }
        }
        public bool ShouldSerializeRowNumber()
        {
            return (_RowNumber.HasValue);
        }

        private decimal? _DeductionPercent;
        public decimal DeductionPercent
        {
            get { return _DeductionPercent.Value; }
            set { _DeductionPercent = value; }
        }
        public bool ShouldSerializeDeductionPercent()
        {
            return (_DeductionPercent.HasValue);
        }

        private decimal? _MaximumTotal;
        public decimal MaximumTotal
        {
            get { return _MaximumTotal.Value; }
            set { _MaximumTotal = value; }
        }
        public bool ShouldSerializeMaximumTotal()
        {
            return (_MaximumTotal.HasValue);
        }

    }

    public class DeductionTaxGroupParams
    {
        private int? _GroupKey;
        public int GroupKey
        {
            get { return _GroupKey.Value; }
            set { _GroupKey = value; }
        }
        public bool ShouldSerializeGroupKey()
        {
            return (_GroupKey.HasValue);
        }

    }

    public class DeductionTaxGroup
    {
        private int? _GroupKey;
        public int GroupKey
        {
            get { return _GroupKey.Value; }
            set { _GroupKey = value; }
        }
        public bool ShouldSerializeGroupKey()
        {
            return (_GroupKey.HasValue);
        }

        private SAPB1.BoDeductionTaxGroupCodeEnum? _GroupCode;
        public SAPB1.BoDeductionTaxGroupCodeEnum GroupCode
        {
            get { return _GroupCode.Value; }
            set { _GroupCode = value; }
        }
        public bool ShouldSerializeGroupCode()
        {
            return (_GroupCode.HasValue);
        }

        public string GroupName { get; set; }
        private decimal? _MaxRedin;
        public decimal MaxRedin
        {
            get { return _MaxRedin.Value; }
            set { _MaxRedin = value; }
        }
        public bool ShouldSerializeMaxRedin()
        {
            return (_MaxRedin.HasValue);
        }

        public string GroupExtendedCode { get; set; }
    }

    public class UserParams
    {
        private int? _InternalKey;
        public int InternalKey
        {
            get { return _InternalKey.Value; }
            set { _InternalKey = value; }
        }
        public bool ShouldSerializeInternalKey()
        {
            return (_InternalKey.HasValue);
        }

    }

    public class User
    {
        private int? _InternalKey;
        public int InternalKey
        {
            get { return _InternalKey.Value; }
            set { _InternalKey = value; }
        }
        public bool ShouldSerializeInternalKey()
        {
            return (_InternalKey.HasValue);
        }

        public string UserPassword { get; set; }
        public string UserCode { get; set; }
        public string UserName { get; set; }
        private SAPB1.BoYesNoEnum? _Superuser;
        public SAPB1.BoYesNoEnum Superuser
        {
            get { return _Superuser.Value; }
            set { _Superuser = value; }
        }
        public bool ShouldSerializeSuperuser()
        {
            return (_Superuser.HasValue);
        }

        public string eMail { get; set; }
        public string MobilePhoneNumber { get; set; }
        public string Defaults { get; set; }
        public string FaxNumber { get; set; }
        private int? _Branch;
        public int Branch
        {
            get { return _Branch.Value; }
            set { _Branch = value; }
        }
        public bool ShouldSerializeBranch()
        {
            return (_Branch.HasValue);
        }

        private int? _Department;
        public int Department
        {
            get { return _Department.Value; }
            set { _Department = value; }
        }
        public bool ShouldSerializeDepartment()
        {
            return (_Department.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Locked;
        public SAPB1.BoYesNoEnum Locked
        {
            get { return _Locked.Value; }
            set { _Locked = value; }
        }
        public bool ShouldSerializeLocked()
        {
            return (_Locked.HasValue);
        }

        private SAPB1.BoUserGroup? _Group;
        public SAPB1.BoUserGroup Group
        {
            get { return _Group.Value; }
            set { _Group = value; }
        }
        public bool ShouldSerializeGroup()
        {
            return (_Group.HasValue);
        }

        private decimal? _MaxDiscountGeneral;
        public decimal MaxDiscountGeneral
        {
            get { return _MaxDiscountGeneral.Value; }
            set { _MaxDiscountGeneral = value; }
        }
        public bool ShouldSerializeMaxDiscountGeneral()
        {
            return (_MaxDiscountGeneral.HasValue);
        }

        private decimal? _MaxDiscountSales;
        public decimal MaxDiscountSales
        {
            get { return _MaxDiscountSales.Value; }
            set { _MaxDiscountSales = value; }
        }
        public bool ShouldSerializeMaxDiscountSales()
        {
            return (_MaxDiscountSales.HasValue);
        }

        private decimal? _MaxDiscountPurchase;
        public decimal MaxDiscountPurchase
        {
            get { return _MaxDiscountPurchase.Value; }
            set { _MaxDiscountPurchase = value; }
        }
        public bool ShouldSerializeMaxDiscountPurchase()
        {
            return (_MaxDiscountPurchase.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CashLimit;
        public SAPB1.BoYesNoEnum CashLimit
        {
            get { return _CashLimit.Value; }
            set { _CashLimit = value; }
        }
        public bool ShouldSerializeCashLimit()
        {
            return (_CashLimit.HasValue);
        }

        private decimal? _MaxCashAmtForIncmngPayts;
        public decimal MaxCashAmtForIncmngPayts
        {
            get { return _MaxCashAmtForIncmngPayts.Value; }
            set { _MaxCashAmtForIncmngPayts = value; }
        }
        public bool ShouldSerializeMaxCashAmtForIncmngPayts()
        {
            return (_MaxCashAmtForIncmngPayts.HasValue);
        }

        private DateTime? _LastLogoutDate;
        public DateTime LastLogoutDate
        {
            get { return _LastLogoutDate.Value; }
            set { _LastLogoutDate = value; }
        }
        public bool ShouldSerializeLastLogoutDate()
        {
            return (_LastLogoutDate.HasValue);
        }

        private TimeSpan? _LastLoginTime;
        public TimeSpan LastLoginTime
        {
            get { return _LastLoginTime.Value; }
            set { _LastLoginTime = value; }
        }
        public bool ShouldSerializeLastLoginTime()
        {
            return (_LastLoginTime.HasValue);
        }

        private TimeSpan? _LastLogoutTime;
        public TimeSpan LastLogoutTime
        {
            get { return _LastLogoutTime.Value; }
            set { _LastLogoutTime = value; }
        }
        public bool ShouldSerializeLastLogoutTime()
        {
            return (_LastLogoutTime.HasValue);
        }

        private TimeSpan? _LastPasswordChangeTime;
        public TimeSpan LastPasswordChangeTime
        {
            get { return _LastPasswordChangeTime.Value; }
            set { _LastPasswordChangeTime = value; }
        }
        public bool ShouldSerializeLastPasswordChangeTime()
        {
            return (_LastPasswordChangeTime.HasValue);
        }

        public string LastPasswordChangedBy { get; set; }
        public System.Collections.Generic.List<SAPB1.UserPermissionItem> UserPermission { get; set; }
        public System.Collections.Generic.List<SAPB1.UserActionRecordItem> UserActionRecord { get; set; }
        public System.Collections.Generic.List<SAPB1.UserBranchAssignmentItem> UserBranchAssignment { get; set; }
    }

    public class UserPermissionItem
    {
        private int? _UserCode;
        public int UserCode
        {
            get { return _UserCode.Value; }
            set { _UserCode = value; }
        }
        public bool ShouldSerializeUserCode()
        {
            return (_UserCode.HasValue);
        }

        public string PermissionID { get; set; }
        private SAPB1.BoPermission? _Permission;
        public SAPB1.BoPermission Permission
        {
            get { return _Permission.Value; }
            set { _Permission = value; }
        }
        public bool ShouldSerializePermission()
        {
            return (_Permission.HasValue);
        }

    }

    public class UserActionRecordItem
    {
        public string UserCode { get; set; }
        private SAPB1.UserActionTypeEnum? _Action;
        public SAPB1.UserActionTypeEnum Action
        {
            get { return _Action.Value; }
            set { _Action = value; }
        }
        public bool ShouldSerializeAction()
        {
            return (_Action.HasValue);
        }

        public string ActionBy { get; set; }
        public string ClientIP { get; set; }
        public string ClientName { get; set; }
        private DateTime? _ActionDate;
        public DateTime ActionDate
        {
            get { return _ActionDate.Value; }
            set { _ActionDate = value; }
        }
        public bool ShouldSerializeActionDate()
        {
            return (_ActionDate.HasValue);
        }

        private TimeSpan? _ActionTime;
        public TimeSpan ActionTime
        {
            get { return _ActionTime.Value; }
            set { _ActionTime = value; }
        }
        public bool ShouldSerializeActionTime()
        {
            return (_ActionTime.HasValue);
        }

        private int? _WindowsSession;
        public int WindowsSession
        {
            get { return _WindowsSession.Value; }
            set { _WindowsSession = value; }
        }
        public bool ShouldSerializeWindowsSession()
        {
            return (_WindowsSession.HasValue);
        }

        public string WindowsUser { get; set; }
        public string ProcessName { get; set; }
        private int? _ProcessID;
        public int ProcessID
        {
            get { return _ProcessID.Value; }
            set { _ProcessID = value; }
        }
        public bool ShouldSerializeProcessID()
        {
            return (_ProcessID.HasValue);
        }

    }

    public class UserBranchAssignmentItem
    {
        public string UserCode { get; set; }
        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

    }

    public class ApprovalStage
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
        private int? _NoOfApproversRequired;
        public int NoOfApproversRequired
        {
            get { return _NoOfApproversRequired.Value; }
            set { _NoOfApproversRequired = value; }
        }
        public bool ShouldSerializeNoOfApproversRequired()
        {
            return (_NoOfApproversRequired.HasValue);
        }

        public string Remarks { get; set; }
        public System.Collections.Generic.List<SAPB1.ApprovalStageApprover> ApprovalStageApprovers { get; set; }
    }

    public class ApprovalStageApprover
    {
        private int? _UserID;
        public int UserID
        {
            get { return _UserID.Value; }
            set { _UserID = value; }
        }
        public bool ShouldSerializeUserID()
        {
            return (_UserID.HasValue);
        }

    }

    public class ApprovalStageParams
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
    }

    public class ApprovalTemplate
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
        public string Remarks { get; set; }
        private SAPB1.BoYesNoEnum? _UseTerms;
        public SAPB1.BoYesNoEnum UseTerms
        {
            get { return _UseTerms.Value; }
            set { _UseTerms = value; }
        }
        public bool ShouldSerializeUseTerms()
        {
            return (_UseTerms.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsActive;
        public SAPB1.BoYesNoEnum IsActive
        {
            get { return _IsActive.Value; }
            set { _IsActive = value; }
        }
        public bool ShouldSerializeIsActive()
        {
            return (_IsActive.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsActiveWhenUpdatingDocuments;
        public SAPB1.BoYesNoEnum IsActiveWhenUpdatingDocuments
        {
            get { return _IsActiveWhenUpdatingDocuments.Value; }
            set { _IsActiveWhenUpdatingDocuments = value; }
        }
        public bool ShouldSerializeIsActiveWhenUpdatingDocuments()
        {
            return (_IsActiveWhenUpdatingDocuments.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ApprovalTemplateUser> ApprovalTemplateUsers { get; set; }
        public System.Collections.Generic.List<SAPB1.ApprovalTemplateStage> ApprovalTemplateStages { get; set; }
        public System.Collections.Generic.List<SAPB1.ApprovalTemplateDocument> ApprovalTemplateDocuments { get; set; }
        public System.Collections.Generic.List<SAPB1.ApprovalTemplateTerm> ApprovalTemplateTerms { get; set; }
        public System.Collections.Generic.List<SAPB1.ApprovalTemplateQuery> ApprovalTemplateQueries { get; set; }
    }

    public class ApprovalTemplateUser
    {
        private int? _UserID;
        public int UserID
        {
            get { return _UserID.Value; }
            set { _UserID = value; }
        }
        public bool ShouldSerializeUserID()
        {
            return (_UserID.HasValue);
        }

    }

    public class ApprovalTemplateStage
    {
        private int? _SortID;
        public int SortID
        {
            get { return _SortID.Value; }
            set { _SortID = value; }
        }
        public bool ShouldSerializeSortID()
        {
            return (_SortID.HasValue);
        }

        private int? _ApprovalStageCode;
        public int ApprovalStageCode
        {
            get { return _ApprovalStageCode.Value; }
            set { _ApprovalStageCode = value; }
        }
        public bool ShouldSerializeApprovalStageCode()
        {
            return (_ApprovalStageCode.HasValue);
        }

        public string Remarks { get; set; }
    }

    public class ApprovalTemplateDocument
    {
        private SAPB1.ApprovalTemplatesDocumentTypeEnum? _DocumentType;
        public SAPB1.ApprovalTemplatesDocumentTypeEnum DocumentType
        {
            get { return _DocumentType.Value; }
            set { _DocumentType = value; }
        }
        public bool ShouldSerializeDocumentType()
        {
            return (_DocumentType.HasValue);
        }

    }

    public class ApprovalTemplateTerm
    {
        private SAPB1.ApprovalTemplateConditionTypeEnum? _ConditionType;
        public SAPB1.ApprovalTemplateConditionTypeEnum ConditionType
        {
            get { return _ConditionType.Value; }
            set { _ConditionType = value; }
        }
        public bool ShouldSerializeConditionType()
        {
            return (_ConditionType.HasValue);
        }

        private SAPB1.ApprovalTemplateOperationTypeEnum? _OperationType;
        public SAPB1.ApprovalTemplateOperationTypeEnum OperationType
        {
            get { return _OperationType.Value; }
            set { _OperationType = value; }
        }
        public bool ShouldSerializeOperationType()
        {
            return (_OperationType.HasValue);
        }

        public string Value { get; set; }
    }

    public class ApprovalTemplateQuery
    {
        private int? _QueryID;
        public int QueryID
        {
            get { return _QueryID.Value; }
            set { _QueryID = value; }
        }
        public bool ShouldSerializeQueryID()
        {
            return (_QueryID.HasValue);
        }

    }

    public class ApprovalTemplateParams
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
    }

    public class ApprovalRequest
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string ObjectType { get; set; }
        public string IsDraft { get; set; }
        private int? _ObjectEntry;
        public int ObjectEntry
        {
            get { return _ObjectEntry.Value; }
            set { _ObjectEntry = value; }
        }
        public bool ShouldSerializeObjectEntry()
        {
            return (_ObjectEntry.HasValue);
        }

        private SAPB1.BoApprovalRequestStatusEnum? _Status;
        public SAPB1.BoApprovalRequestStatusEnum Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        public string Remarks { get; set; }
        private int? _CurrentStage;
        public int CurrentStage
        {
            get { return _CurrentStage.Value; }
            set { _CurrentStage = value; }
        }
        public bool ShouldSerializeCurrentStage()
        {
            return (_CurrentStage.HasValue);
        }

        private int? _OriginatorID;
        public int OriginatorID
        {
            get { return _OriginatorID.Value; }
            set { _OriginatorID = value; }
        }
        public bool ShouldSerializeOriginatorID()
        {
            return (_OriginatorID.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ApprovalRequestLine> ApprovalRequestLines { get; set; }
        public System.Collections.Generic.List<SAPB1.ApprovalRequestDecision> ApprovalRequestDecisions { get; set; }
    }

    public class ApprovalRequestLine
    {
        private int? _StageCode;
        public int StageCode
        {
            get { return _StageCode.Value; }
            set { _StageCode = value; }
        }
        public bool ShouldSerializeStageCode()
        {
            return (_StageCode.HasValue);
        }

        private int? _UserID;
        public int UserID
        {
            get { return _UserID.Value; }
            set { _UserID = value; }
        }
        public bool ShouldSerializeUserID()
        {
            return (_UserID.HasValue);
        }

        private SAPB1.BoApprovalRequestDecisionEnum? _Status;
        public SAPB1.BoApprovalRequestDecisionEnum Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        public string Remarks { get; set; }
    }

    public class ApprovalRequestDecision
    {
        public string ApproverUserName { get; set; }
        public string ApproverPassword { get; set; }
        private SAPB1.BoApprovalRequestDecisionEnum? _Status;
        public SAPB1.BoApprovalRequestDecisionEnum Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        public string Remarks { get; set; }
    }

    public class ApprovalRequestParams
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Remarks { get; set; }
        private SAPB1.BoApprovalRequestStatusEnum? _Status;
        public SAPB1.BoApprovalRequestStatusEnum Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

    }

    public class AdditionalExpense
    {
        public string Name { get; set; }
        public string RevenuesAccount { get; set; }
        public string ExpenseAccount { get; set; }
        private SAPB1.BoYesNoEnum? _TaxLiable;
        public SAPB1.BoYesNoEnum TaxLiable
        {
            get { return _TaxLiable.Value; }
            set { _TaxLiable = value; }
        }
        public bool ShouldSerializeTaxLiable()
        {
            return (_TaxLiable.HasValue);
        }

        private decimal? _FixedAmountRevenues;
        public decimal FixedAmountRevenues
        {
            get { return _FixedAmountRevenues.Value; }
            set { _FixedAmountRevenues = value; }
        }
        public bool ShouldSerializeFixedAmountRevenues()
        {
            return (_FixedAmountRevenues.HasValue);
        }

        private decimal? _FixedAmountExpenses;
        public decimal FixedAmountExpenses
        {
            get { return _FixedAmountExpenses.Value; }
            set { _FixedAmountExpenses = value; }
        }
        public bool ShouldSerializeFixedAmountExpenses()
        {
            return (_FixedAmountExpenses.HasValue);
        }

        public string OutputVATGroup { get; set; }
        public string InputVATGroup { get; set; }
        private SAPB1.BoAeDistMthd? _DistributionMethod;
        public SAPB1.BoAeDistMthd DistributionMethod
        {
            get { return _DistributionMethod.Value; }
            set { _DistributionMethod = value; }
        }
        public bool ShouldSerializeDistributionMethod()
        {
            return (_DistributionMethod.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Includein1099;
        public SAPB1.BoYesNoEnum Includein1099
        {
            get { return _Includein1099.Value; }
            set { _Includein1099 = value; }
        }
        public bool ShouldSerializeIncludein1099()
        {
            return (_Includein1099.HasValue);
        }

        public string FreightOffsetAccount { get; set; }
        public string WTLiable { get; set; }
        private int? _ExpensCode;
        public int ExpensCode
        {
            get { return _ExpensCode.Value; }
            set { _ExpensCode = value; }
        }
        public bool ShouldSerializeExpensCode()
        {
            return (_ExpensCode.HasValue);
        }

        public string ExpenseExemptedAccount { get; set; }
        public string RevenuesExemptedAccount { get; set; }
        public string DistributionRule { get; set; }
        private SAPB1.DrawingMethodEnum? _DrawingMethod;
        public SAPB1.DrawingMethodEnum DrawingMethod
        {
            get { return _DrawingMethod.Value; }
            set { _DrawingMethod = value; }
        }
        public bool ShouldSerializeDrawingMethod()
        {
            return (_DrawingMethod.HasValue);
        }

        private SAPB1.FreightTypeEnum? _FreightType;
        public SAPB1.FreightTypeEnum FreightType
        {
            get { return _FreightType.Value; }
            set { _FreightType = value; }
        }
        public bool ShouldSerializeFreightType()
        {
            return (_FreightType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Stock;
        public SAPB1.BoYesNoEnum Stock
        {
            get { return _Stock.Value; }
            set { _Stock = value; }
        }
        public bool ShouldSerializeStock()
        {
            return (_Stock.HasValue);
        }

        private SAPB1.BoYesNoEnum? _LastPurchasePrice;
        public SAPB1.BoYesNoEnum LastPurchasePrice
        {
            get { return _LastPurchasePrice.Value; }
            set { _LastPurchasePrice = value; }
        }
        public bool ShouldSerializeLastPurchasePrice()
        {
            return (_LastPurchasePrice.HasValue);
        }

        public string Project { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
    }

    public class StockTransferParams
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

    }

    public class StockTransfer
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Printed;
        public SAPB1.BoYesNoEnum Printed
        {
            get { return _Printed.Value; }
            set { _Printed = value; }
        }
        public bool ShouldSerializePrinted()
        {
            return (_Printed.HasValue);
        }

        private DateTime? _DocDate;
        public DateTime DocDate
        {
            get { return _DocDate.Value; }
            set { _DocDate = value; }
        }
        public bool ShouldSerializeDocDate()
        {
            return (_DocDate.HasValue);
        }

        private DateTime? _DueDate;
        public DateTime DueDate
        {
            get { return _DueDate.Value; }
            set { _DueDate = value; }
        }
        public bool ShouldSerializeDueDate()
        {
            return (_DueDate.HasValue);
        }

        public string CardCode { get; set; }
        public string CardName { get; set; }
        public string Address { get; set; }
        public string Reference1 { get; set; }
        public string Reference2 { get; set; }
        public string Comments { get; set; }
        public string JournalMemo { get; set; }
        private int? _PriceList;
        public int PriceList
        {
            get { return _PriceList.Value; }
            set { _PriceList = value; }
        }
        public bool ShouldSerializePriceList()
        {
            return (_PriceList.HasValue);
        }

        private int? _SalesPersonCode;
        public int SalesPersonCode
        {
            get { return _SalesPersonCode.Value; }
            set { _SalesPersonCode = value; }
        }
        public bool ShouldSerializeSalesPersonCode()
        {
            return (_SalesPersonCode.HasValue);
        }

        public string FromWarehouse { get; set; }
        public string ToWarehouse { get; set; }
        private DateTime? _CreationDate;
        public DateTime CreationDate
        {
            get { return _CreationDate.Value; }
            set { _CreationDate = value; }
        }
        public bool ShouldSerializeCreationDate()
        {
            return (_CreationDate.HasValue);
        }

        private DateTime? _UpdateDate;
        public DateTime UpdateDate
        {
            get { return _UpdateDate.Value; }
            set { _UpdateDate = value; }
        }
        public bool ShouldSerializeUpdateDate()
        {
            return (_UpdateDate.HasValue);
        }

        private int? _FinancialPeriod;
        public int FinancialPeriod
        {
            get { return _FinancialPeriod.Value; }
            set { _FinancialPeriod = value; }
        }
        public bool ShouldSerializeFinancialPeriod()
        {
            return (_FinancialPeriod.HasValue);
        }

        private int? _TransNum;
        public int TransNum
        {
            get { return _TransNum.Value; }
            set { _TransNum = value; }
        }
        public bool ShouldSerializeTransNum()
        {
            return (_TransNum.HasValue);
        }

        private int? _DocNum;
        public int DocNum
        {
            get { return _DocNum.Value; }
            set { _DocNum = value; }
        }
        public bool ShouldSerializeDocNum()
        {
            return (_DocNum.HasValue);
        }

        private DateTime? _TaxDate;
        public DateTime TaxDate
        {
            get { return _TaxDate.Value; }
            set { _TaxDate = value; }
        }
        public bool ShouldSerializeTaxDate()
        {
            return (_TaxDate.HasValue);
        }

        private int? _ContactPerson;
        public int ContactPerson
        {
            get { return _ContactPerson.Value; }
            set { _ContactPerson = value; }
        }
        public bool ShouldSerializeContactPerson()
        {
            return (_ContactPerson.HasValue);
        }

        public string FolioPrefixString { get; set; }
        private int? _FolioNumber;
        public int FolioNumber
        {
            get { return _FolioNumber.Value; }
            set { _FolioNumber = value; }
        }
        public bool ShouldSerializeFolioNumber()
        {
            return (_FolioNumber.HasValue);
        }

        public string DocObjectCode { get; set; }
        private SAPB1.StockTransferAuthorizationStatusEnum? _AuthorizationStatus;
        public SAPB1.StockTransferAuthorizationStatusEnum AuthorizationStatus
        {
            get { return _AuthorizationStatus.Value; }
            set { _AuthorizationStatus = value; }
        }
        public bool ShouldSerializeAuthorizationStatus()
        {
            return (_AuthorizationStatus.HasValue);
        }

        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

        public string BPLName { get; set; }
        public string VATRegNum { get; set; }
        public string AuthorizationCode { get; set; }
        private DateTime? _StartDeliveryDate;
        public DateTime StartDeliveryDate
        {
            get { return _StartDeliveryDate.Value; }
            set { _StartDeliveryDate = value; }
        }
        public bool ShouldSerializeStartDeliveryDate()
        {
            return (_StartDeliveryDate.HasValue);
        }

        private TimeSpan? _StartDeliveryTime;
        public TimeSpan StartDeliveryTime
        {
            get { return _StartDeliveryTime.Value; }
            set { _StartDeliveryTime = value; }
        }
        public bool ShouldSerializeStartDeliveryTime()
        {
            return (_StartDeliveryTime.HasValue);
        }

        private DateTime? _EndDeliveryDate;
        public DateTime EndDeliveryDate
        {
            get { return _EndDeliveryDate.Value; }
            set { _EndDeliveryDate = value; }
        }
        public bool ShouldSerializeEndDeliveryDate()
        {
            return (_EndDeliveryDate.HasValue);
        }

        private TimeSpan? _EndDeliveryTime;
        public TimeSpan EndDeliveryTime
        {
            get { return _EndDeliveryTime.Value; }
            set { _EndDeliveryTime = value; }
        }
        public bool ShouldSerializeEndDeliveryTime()
        {
            return (_EndDeliveryTime.HasValue);
        }

        public string VehiclePlate { get; set; }
        public string ATDocumentType { get; set; }
        private int? _EDocExportFormat;
        public int EDocExportFormat
        {
            get { return _EDocExportFormat.Value; }
            set { _EDocExportFormat = value; }
        }
        public bool ShouldSerializeEDocExportFormat()
        {
            return (_EDocExportFormat.HasValue);
        }

        private SAPB1.ElecCommStatusEnum? _ElecCommStatus;
        public SAPB1.ElecCommStatusEnum ElecCommStatus
        {
            get { return _ElecCommStatus.Value; }
            set { _ElecCommStatus = value; }
        }
        public bool ShouldSerializeElecCommStatus()
        {
            return (_ElecCommStatus.HasValue);
        }

        public string ElecCommMessage { get; set; }
        public System.Collections.Generic.List<SAPB1.StockTransfer_ApprovalRequest> StockTransfer_ApprovalRequests { get; set; }
        public System.Collections.Generic.List<SAPB1.StockTransferLine> StockTransferLines { get; set; }
        public SAPB1.StockTransferTaxExtension StockTransferTaxExtension { get; set; }
    }

    public class StockTransfer_ApprovalRequest
    {
        private int? _ApprovalTemplatesID;
        public int ApprovalTemplatesID
        {
            get { return _ApprovalTemplatesID.Value; }
            set { _ApprovalTemplatesID = value; }
        }
        public bool ShouldSerializeApprovalTemplatesID()
        {
            return (_ApprovalTemplatesID.HasValue);
        }

        public string Remarks { get; set; }
    }

    public class StockTransferLine
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        public string ItemCode { get; set; }
        public string ItemDescription { get; set; }
        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private decimal? _Price;
        public decimal Price
        {
            get { return _Price.Value; }
            set { _Price = value; }
        }
        public bool ShouldSerializePrice()
        {
            return (_Price.HasValue);
        }

        public string Currency { get; set; }
        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

        private decimal? _DiscountPercent;
        public decimal DiscountPercent
        {
            get { return _DiscountPercent.Value; }
            set { _DiscountPercent = value; }
        }
        public bool ShouldSerializeDiscountPercent()
        {
            return (_DiscountPercent.HasValue);
        }

        public string VendorNum { get; set; }
        public string SerialNumber { get; set; }
        public string WarehouseCode { get; set; }
        public string FromWarehouseCode { get; set; }
        public string ProjectCode { get; set; }
        private decimal? _Factor;
        public decimal Factor
        {
            get { return _Factor.Value; }
            set { _Factor = value; }
        }
        public bool ShouldSerializeFactor()
        {
            return (_Factor.HasValue);
        }

        private decimal? _Factor2;
        public decimal Factor2
        {
            get { return _Factor2.Value; }
            set { _Factor2 = value; }
        }
        public bool ShouldSerializeFactor2()
        {
            return (_Factor2.HasValue);
        }

        private decimal? _Factor3;
        public decimal Factor3
        {
            get { return _Factor3.Value; }
            set { _Factor3 = value; }
        }
        public bool ShouldSerializeFactor3()
        {
            return (_Factor3.HasValue);
        }

        private decimal? _Factor4;
        public decimal Factor4
        {
            get { return _Factor4.Value; }
            set { _Factor4 = value; }
        }
        public bool ShouldSerializeFactor4()
        {
            return (_Factor4.HasValue);
        }

        public string DistributionRule { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
        private SAPB1.BoYesNoEnum? _UseBaseUnits;
        public SAPB1.BoYesNoEnum UseBaseUnits
        {
            get { return _UseBaseUnits.Value; }
            set { _UseBaseUnits = value; }
        }
        public bool ShouldSerializeUseBaseUnits()
        {
            return (_UseBaseUnits.HasValue);
        }

        public string MeasureUnit { get; set; }
        private decimal? _UnitsOfMeasurment;
        public decimal UnitsOfMeasurment
        {
            get { return _UnitsOfMeasurment.Value; }
            set { _UnitsOfMeasurment = value; }
        }
        public bool ShouldSerializeUnitsOfMeasurment()
        {
            return (_UnitsOfMeasurment.HasValue);
        }

        private SAPB1.InvBaseDocTypeEnum? _BaseType;
        public SAPB1.InvBaseDocTypeEnum BaseType
        {
            get { return _BaseType.Value; }
            set { _BaseType = value; }
        }
        public bool ShouldSerializeBaseType()
        {
            return (_BaseType.HasValue);
        }

        private int? _BaseLine;
        public int BaseLine
        {
            get { return _BaseLine.Value; }
            set { _BaseLine = value; }
        }
        public bool ShouldSerializeBaseLine()
        {
            return (_BaseLine.HasValue);
        }

        private int? _BaseEntry;
        public int BaseEntry
        {
            get { return _BaseEntry.Value; }
            set { _BaseEntry = value; }
        }
        public bool ShouldSerializeBaseEntry()
        {
            return (_BaseEntry.HasValue);
        }

        private decimal? _UnitPrice;
        public decimal UnitPrice
        {
            get { return _UnitPrice.Value; }
            set { _UnitPrice = value; }
        }
        public bool ShouldSerializeUnitPrice()
        {
            return (_UnitPrice.HasValue);
        }

        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

        public string UoMCode { get; set; }
        private decimal? _InventoryQuantity;
        public decimal InventoryQuantity
        {
            get { return _InventoryQuantity.Value; }
            set { _InventoryQuantity = value; }
        }
        public bool ShouldSerializeInventoryQuantity()
        {
            return (_InventoryQuantity.HasValue);
        }

        private decimal? _RemainingOpenQuantity;
        public decimal RemainingOpenQuantity
        {
            get { return _RemainingOpenQuantity.Value; }
            set { _RemainingOpenQuantity = value; }
        }
        public bool ShouldSerializeRemainingOpenQuantity()
        {
            return (_RemainingOpenQuantity.HasValue);
        }

        private decimal? _RemainingOpenInventoryQuantity;
        public decimal RemainingOpenInventoryQuantity
        {
            get { return _RemainingOpenInventoryQuantity.Value; }
            set { _RemainingOpenInventoryQuantity = value; }
        }
        public bool ShouldSerializeRemainingOpenInventoryQuantity()
        {
            return (_RemainingOpenInventoryQuantity.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.SerialNumber> SerialNumbers { get; set; }
        public System.Collections.Generic.List<SAPB1.BatchNumber> BatchNumbers { get; set; }
        public System.Collections.Generic.List<SAPB1.StockTransferLinesBinAllocation> StockTransferLinesBinAllocations { get; set; }
    }

    public class StockTransferLinesBinAllocation
    {
        private int? _BinAbsEntry;
        public int BinAbsEntry
        {
            get { return _BinAbsEntry.Value; }
            set { _BinAbsEntry = value; }
        }
        public bool ShouldSerializeBinAbsEntry()
        {
            return (_BinAbsEntry.HasValue);
        }

        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AllowNegativeQuantity;
        public SAPB1.BoYesNoEnum AllowNegativeQuantity
        {
            get { return _AllowNegativeQuantity.Value; }
            set { _AllowNegativeQuantity = value; }
        }
        public bool ShouldSerializeAllowNegativeQuantity()
        {
            return (_AllowNegativeQuantity.HasValue);
        }

        private int? _SerialAndBatchNumbersBaseLine;
        public int SerialAndBatchNumbersBaseLine
        {
            get { return _SerialAndBatchNumbersBaseLine.Value; }
            set { _SerialAndBatchNumbersBaseLine = value; }
        }
        public bool ShouldSerializeSerialAndBatchNumbersBaseLine()
        {
            return (_SerialAndBatchNumbersBaseLine.HasValue);
        }

        private SAPB1.BinActionTypeEnum? _BinActionType;
        public SAPB1.BinActionTypeEnum BinActionType
        {
            get { return _BinActionType.Value; }
            set { _BinActionType = value; }
        }
        public bool ShouldSerializeBinActionType()
        {
            return (_BinActionType.HasValue);
        }

        private int? _BaseLineNumber;
        public int BaseLineNumber
        {
            get { return _BaseLineNumber.Value; }
            set { _BaseLineNumber = value; }
        }
        public bool ShouldSerializeBaseLineNumber()
        {
            return (_BaseLineNumber.HasValue);
        }

    }

    public class StockTransferTaxExtension
    {
        private SAPB1.BoYesNoEnum? _SupportVAT;
        public SAPB1.BoYesNoEnum SupportVAT
        {
            get { return _SupportVAT.Value; }
            set { _SupportVAT = value; }
        }
        public bool ShouldSerializeSupportVAT()
        {
            return (_SupportVAT.HasValue);
        }

        public string FormNumber { get; set; }
        public string TransactionCategory { get; set; }
    }

    public class SalesTaxAuthorityParams
    {
        public string Code { get; set; }
        private int? _Type;
        public int Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

    }

    public class SalesTaxAuthority
    {
        public string UseTaxAccount { get; set; }
        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        private int? _Type;
        public int Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

        public string AOrRTaxAccount { get; set; }
        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

        public string AOrPTaxAccount { get; set; }
        private decimal? _NonDeductiblePrecent;
        public decimal NonDeductiblePrecent
        {
            get { return _NonDeductiblePrecent.Value; }
            set { _NonDeductiblePrecent = value; }
        }
        public bool ShouldSerializeNonDeductiblePrecent()
        {
            return (_NonDeductiblePrecent.HasValue);
        }

        public string NonDeductibleAccount { get; set; }
        public string Name { get; set; }
        public string DeferredTaxAccount { get; set; }
        public string Code { get; set; }
        private decimal? _MinTaxableAmount;
        public decimal MinTaxableAmount
        {
            get { return _MinTaxableAmount.Value; }
            set { _MinTaxableAmount = value; }
        }
        public bool ShouldSerializeMinTaxableAmount()
        {
            return (_MinTaxableAmount.HasValue);
        }

        private decimal? _MaxTaxableAmount;
        public decimal MaxTaxableAmount
        {
            get { return _MaxTaxableAmount.Value; }
            set { _MaxTaxableAmount = value; }
        }
        public bool ShouldSerializeMaxTaxableAmount()
        {
            return (_MaxTaxableAmount.HasValue);
        }

        private decimal? _FlatTaxAmount;
        public decimal FlatTaxAmount
        {
            get { return _FlatTaxAmount.Value; }
            set { _FlatTaxAmount = value; }
        }
        public bool ShouldSerializeFlatTaxAmount()
        {
            return (_FlatTaxAmount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _InclInPrice;
        public SAPB1.BoYesNoEnum InclInPrice
        {
            get { return _InclInPrice.Value; }
            set { _InclInPrice = value; }
        }
        public bool ShouldSerializeInclInPrice()
        {
            return (_InclInPrice.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Exempt;
        public SAPB1.BoYesNoEnum Exempt
        {
            get { return _Exempt.Value; }
            set { _Exempt = value; }
        }
        public bool ShouldSerializeExempt()
        {
            return (_Exempt.HasValue);
        }

        public string APExpAccount { get; set; }
        public string ARExpAccount { get; set; }
        private SAPB1.BoYesNoEnum? _InclInGrossRevenue;
        public SAPB1.BoYesNoEnum InclInGrossRevenue
        {
            get { return _InclInGrossRevenue.Value; }
            set { _InclInGrossRevenue = value; }
        }
        public bool ShouldSerializeInclInGrossRevenue()
        {
            return (_InclInGrossRevenue.HasValue);
        }

        private int? _TextCode;
        public int TextCode
        {
            get { return _TextCode.Value; }
            set { _TextCode = value; }
        }
        public bool ShouldSerializeTextCode()
        {
            return (_TextCode.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.TaxDefinition> TaxDefinitions { get; set; }
    }

    public class SalesTaxAuthorityKey
    {
        private int? _Type;
        public int Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

        public string Code { get; set; }
    }

    public class TaxDefinition
    {
        private DateTime? _Effectivefrom;
        public DateTime Effectivefrom
        {
            get { return _Effectivefrom.Value; }
            set { _Effectivefrom = value; }
        }
        public bool ShouldSerializeEffectivefrom()
        {
            return (_Effectivefrom.HasValue);
        }

        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

    }

    public class SalesTaxAuthoritiesType
    {
        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        public string Name { get; set; }
        private SAPB1.BoYesNoEnum? _VAT;
        public SAPB1.BoYesNoEnum VAT
        {
            get { return _VAT.Value; }
            set { _VAT = value; }
        }
        public bool ShouldSerializeVAT()
        {
            return (_VAT.HasValue);
        }

        private int? _Numerator;
        public int Numerator
        {
            get { return _Numerator.Value; }
            set { _Numerator = value; }
        }
        public bool ShouldSerializeNumerator()
        {
            return (_Numerator.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TaxCreditControl;
        public SAPB1.BoYesNoEnum TaxCreditControl
        {
            get { return _TaxCreditControl.Value; }
            set { _TaxCreditControl = value; }
        }
        public bool ShouldSerializeTaxCreditControl()
        {
            return (_TaxCreditControl.HasValue);
        }

    }

    public class SalesTaxCode
    {
        private SAPB1.BoYesNoEnum? _ValidForAR;
        public SAPB1.BoYesNoEnum ValidForAR
        {
            get { return _ValidForAR.Value; }
            set { _ValidForAR = value; }
        }
        public bool ShouldSerializeValidForAR()
        {
            return (_ValidForAR.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ValidForAP;
        public SAPB1.BoYesNoEnum ValidForAP
        {
            get { return _ValidForAP.Value; }
            set { _ValidForAP = value; }
        }
        public bool ShouldSerializeValidForAP()
        {
            return (_ValidForAP.HasValue);
        }

        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

        public string Name { get; set; }
        private SAPB1.BoYesNoEnum? _Freight;
        public SAPB1.BoYesNoEnum Freight
        {
            get { return _Freight.Value; }
            set { _Freight = value; }
        }
        public bool ShouldSerializeFreight()
        {
            return (_Freight.HasValue);
        }

        public string Code { get; set; }
        private SAPB1.BoYesNoEnum? _IsItemLevel;
        public SAPB1.BoYesNoEnum IsItemLevel
        {
            get { return _IsItemLevel.Value; }
            set { _IsItemLevel = value; }
        }
        public bool ShouldSerializeIsItemLevel()
        {
            return (_IsItemLevel.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Inactive;
        public SAPB1.BoYesNoEnum Inactive
        {
            get { return _Inactive.Value; }
            set { _Inactive = value; }
        }
        public bool ShouldSerializeInactive()
        {
            return (_Inactive.HasValue);
        }

        private SAPB1.BoYesNoEnum? _FADebit;
        public SAPB1.BoYesNoEnum FADebit
        {
            get { return _FADebit.Value; }
            set { _FADebit = value; }
        }
        public bool ShouldSerializeFADebit()
        {
            return (_FADebit.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.SalesTaxCodes_Line> SalesTaxCodes_Lines { get; set; }
    }

    public class SalesTaxCodes_Line
    {
        private int? _STATaxOnTaxType;
        public int STATaxOnTaxType
        {
            get { return _STATaxOnTaxType.Value; }
            set { _STATaxOnTaxType = value; }
        }
        public bool ShouldSerializeSTATaxOnTaxType()
        {
            return (_STATaxOnTaxType.HasValue);
        }

        public string STATaxonTaxCode { get; set; }
        public string STCCode { get; set; }
        private int? _STAType;
        public int STAType
        {
            get { return _STAType.Value; }
            set { _STAType = value; }
        }
        public bool ShouldSerializeSTAType()
        {
            return (_STAType.HasValue);
        }

        public string STACode { get; set; }
        private int? _RowNumber;
        public int RowNumber
        {
            get { return _RowNumber.Value; }
            set { _RowNumber = value; }
        }
        public bool ShouldSerializeRowNumber()
        {
            return (_RowNumber.HasValue);
        }

        private decimal? _EffectiveRate;
        public decimal EffectiveRate
        {
            get { return _EffectiveRate.Value; }
            set { _EffectiveRate = value; }
        }
        public bool ShouldSerializeEffectiveRate()
        {
            return (_EffectiveRate.HasValue);
        }

    }

    public class Country
    {
        public string Code { get; set; }
        public string Name { get; set; }
        public string CodeForReports { get; set; }
        private int? _AddressFormat;
        public int AddressFormat
        {
            get { return _AddressFormat.Value; }
            set { _AddressFormat = value; }
        }
        public bool ShouldSerializeAddressFormat()
        {
            return (_AddressFormat.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EU;
        public SAPB1.BoYesNoEnum EU
        {
            get { return _EU.Value; }
            set { _EU = value; }
        }
        public bool ShouldSerializeEU()
        {
            return (_EU.HasValue);
        }

        private int? _NumberOfDigitsForTaxID;
        public int NumberOfDigitsForTaxID
        {
            get { return _NumberOfDigitsForTaxID.Value; }
            set { _NumberOfDigitsForTaxID = value; }
        }
        public bool ShouldSerializeNumberOfDigitsForTaxID()
        {
            return (_NumberOfDigitsForTaxID.HasValue);
        }

        private int? _BankCodeDigits;
        public int BankCodeDigits
        {
            get { return _BankCodeDigits.Value; }
            set { _BankCodeDigits = value; }
        }
        public bool ShouldSerializeBankCodeDigits()
        {
            return (_BankCodeDigits.HasValue);
        }

        private int? _BankBranchDigits;
        public int BankBranchDigits
        {
            get { return _BankBranchDigits.Value; }
            set { _BankBranchDigits = value; }
        }
        public bool ShouldSerializeBankBranchDigits()
        {
            return (_BankBranchDigits.HasValue);
        }

        private int? _BankAccountDigits;
        public int BankAccountDigits
        {
            get { return _BankAccountDigits.Value; }
            set { _BankAccountDigits = value; }
        }
        public bool ShouldSerializeBankAccountDigits()
        {
            return (_BankAccountDigits.HasValue);
        }

        private int? _BankControlKeyDigits;
        public int BankControlKeyDigits
        {
            get { return _BankControlKeyDigits.Value; }
            set { _BankControlKeyDigits = value; }
        }
        public bool ShouldSerializeBankControlKeyDigits()
        {
            return (_BankControlKeyDigits.HasValue);
        }

        private SAPB1.DomesticBankAccountValidationEnum? _DomesticAccountValidation;
        public SAPB1.DomesticBankAccountValidationEnum DomesticAccountValidation
        {
            get { return _DomesticAccountValidation.Value; }
            set { _DomesticAccountValidation = value; }
        }
        public bool ShouldSerializeDomesticAccountValidation()
        {
            return (_DomesticAccountValidation.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IbanValidation;
        public SAPB1.BoYesNoEnum IbanValidation
        {
            get { return _IbanValidation.Value; }
            set { _IbanValidation = value; }
        }
        public bool ShouldSerializeIbanValidation()
        {
            return (_IbanValidation.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Blacklisted;
        public SAPB1.BoYesNoEnum Blacklisted
        {
            get { return _Blacklisted.Value; }
            set { _Blacklisted = value; }
        }
        public bool ShouldSerializeBlacklisted()
        {
            return (_Blacklisted.HasValue);
        }

        public string UICCountryCode { get; set; }
    }

    public class CountryParams
    {
        public string Code { get; set; }
        public string Name { get; set; }
    }

    public class Campaign
    {
        private int? _CampaignNumber;
        public int CampaignNumber
        {
            get { return _CampaignNumber.Value; }
            set { _CampaignNumber = value; }
        }
        public bool ShouldSerializeCampaignNumber()
        {
            return (_CampaignNumber.HasValue);
        }

        public string CampaignName { get; set; }
        private SAPB1.CampaignTypeEnum? _CampaignType;
        public SAPB1.CampaignTypeEnum CampaignType
        {
            get { return _CampaignType.Value; }
            set { _CampaignType = value; }
        }
        public bool ShouldSerializeCampaignType()
        {
            return (_CampaignType.HasValue);
        }

        public string TargetGroup { get; set; }
        private int? _Owner;
        public int Owner
        {
            get { return _Owner.Value; }
            set { _Owner = value; }
        }
        public bool ShouldSerializeOwner()
        {
            return (_Owner.HasValue);
        }

        private SAPB1.CampaignStatusEnum? _Status;
        public SAPB1.CampaignStatusEnum Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private DateTime? _FinishDate;
        public DateTime FinishDate
        {
            get { return _FinishDate.Value; }
            set { _FinishDate = value; }
        }
        public bool ShouldSerializeFinishDate()
        {
            return (_FinishDate.HasValue);
        }

        public string Remarks { get; set; }
        private SAPB1.BoYesNoEnum? _GeneratedByWizard;
        public SAPB1.BoYesNoEnum GeneratedByWizard
        {
            get { return _GeneratedByWizard.Value; }
            set { _GeneratedByWizard = value; }
        }
        public bool ShouldSerializeGeneratedByWizard()
        {
            return (_GeneratedByWizard.HasValue);
        }

        private int? _AttachementsEntry;
        public int AttachementsEntry
        {
            get { return _AttachementsEntry.Value; }
            set { _AttachementsEntry = value; }
        }
        public bool ShouldSerializeAttachementsEntry()
        {
            return (_AttachementsEntry.HasValue);
        }

        private SAPB1.TargetGroupTypeEnum? _TargetGroupType;
        public SAPB1.TargetGroupTypeEnum TargetGroupType
        {
            get { return _TargetGroupType.Value; }
            set { _TargetGroupType = value; }
        }
        public bool ShouldSerializeTargetGroupType()
        {
            return (_TargetGroupType.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.CampaignBusinessPartner> CampaignBusinessPartners { get; set; }
        public System.Collections.Generic.List<SAPB1.CampaignItem> CampaignItems { get; set; }
        public System.Collections.Generic.List<SAPB1.CampaignPartner> CampaignPartners { get; set; }
    }

    public class CampaignBusinessPartner
    {
        private int? _CampaignNumber;
        public int CampaignNumber
        {
            get { return _CampaignNumber.Value; }
            set { _CampaignNumber = value; }
        }
        public bool ShouldSerializeCampaignNumber()
        {
            return (_CampaignNumber.HasValue);
        }

        private int? _CampaignLineNumber;
        public int CampaignLineNumber
        {
            get { return _CampaignLineNumber.Value; }
            set { _CampaignLineNumber = value; }
        }
        public bool ShouldSerializeCampaignLineNumber()
        {
            return (_CampaignLineNumber.HasValue);
        }

        public string BPCode { get; set; }
        public string BPName { get; set; }
        public string BPGroupName { get; set; }
        public string BPIndustryName { get; set; }
        public string BPStatus { get; set; }
        public string ContactCode { get; set; }
        public string ContactTitle { get; set; }
        public string ContactPosition { get; set; }
        public string ContactEmail { get; set; }
        public string ContactTelephone { get; set; }
        public string ContactMobile { get; set; }
        public string ContactFax { get; set; }
        public string ContactAddress { get; set; }
        private SAPB1.BoYesNoEnum? _Response;
        public SAPB1.BoYesNoEnum Response
        {
            get { return _Response.Value; }
            set { _Response = value; }
        }
        public bool ShouldSerializeResponse()
        {
            return (_Response.HasValue);
        }

        private int? _RelatedSalesOpportunity;
        public int RelatedSalesOpportunity
        {
            get { return _RelatedSalesOpportunity.Value; }
            set { _RelatedSalesOpportunity = value; }
        }
        public bool ShouldSerializeRelatedSalesOpportunity()
        {
            return (_RelatedSalesOpportunity.HasValue);
        }

        public string Street { get; set; }
        public string Block { get; set; }
        public string City { get; set; }
        public string ZipCode { get; set; }
        public string County { get; set; }
        public string State { get; set; }
        public string Country { get; set; }
        public string Building { get; set; }
        private SAPB1.LinkedDocTypeEnum? _DocType;
        public SAPB1.LinkedDocTypeEnum DocType
        {
            get { return _DocType.Value; }
            set { _DocType = value; }
        }
        public bool ShouldSerializeDocType()
        {
            return (_DocType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsShowLinkedDoc;
        public SAPB1.BoYesNoEnum IsShowLinkedDoc
        {
            get { return _IsShowLinkedDoc.Value; }
            set { _IsShowLinkedDoc = value; }
        }
        public bool ShouldSerializeIsShowLinkedDoc()
        {
            return (_IsShowLinkedDoc.HasValue);
        }

        private int? _DocNumber;
        public int DocNumber
        {
            get { return _DocNumber.Value; }
            set { _DocNumber = value; }
        }
        public bool ShouldSerializeDocNumber()
        {
            return (_DocNumber.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        public string FirstName { get; set; }
        public string MiddleName { get; set; }
        public string LastName { get; set; }
        public string AddressID { get; set; }
        public string AddressType { get; set; }
        public string AddressName2 { get; set; }
        public string AddressName3 { get; set; }
        public string FederalTaxID { get; set; }
        public string StreetNo { get; set; }
        private SAPB1.BoYesNoEnum? _CreateActivity;
        public SAPB1.BoYesNoEnum CreateActivity
        {
            get { return _CreateActivity.Value; }
            set { _CreateActivity = value; }
        }
        public bool ShouldSerializeCreateActivity()
        {
            return (_CreateActivity.HasValue);
        }

        private SAPB1.CampaignAssignToEnum? _AssignTo;
        public SAPB1.CampaignAssignToEnum AssignTo
        {
            get { return _AssignTo.Value; }
            set { _AssignTo = value; }
        }
        public bool ShouldSerializeAssignTo()
        {
            return (_AssignTo.HasValue);
        }

        private int? _AssignName;
        public int AssignName
        {
            get { return _AssignName.Value; }
            set { _AssignName = value; }
        }
        public bool ShouldSerializeAssignName()
        {
            return (_AssignName.HasValue);
        }

        public string ResponseType { get; set; }
    }

    public class CampaignItem
    {
        private int? _CampaignNumber;
        public int CampaignNumber
        {
            get { return _CampaignNumber.Value; }
            set { _CampaignNumber = value; }
        }
        public bool ShouldSerializeCampaignNumber()
        {
            return (_CampaignNumber.HasValue);
        }

        private int? _CampaignLineNumber;
        public int CampaignLineNumber
        {
            get { return _CampaignLineNumber.Value; }
            set { _CampaignLineNumber = value; }
        }
        public bool ShouldSerializeCampaignLineNumber()
        {
            return (_CampaignLineNumber.HasValue);
        }

        public string ItemCode { get; set; }
        public string ItemName { get; set; }
        private SAPB1.CampaignItemTypeEnum? _ItemType;
        public SAPB1.CampaignItemTypeEnum ItemType
        {
            get { return _ItemType.Value; }
            set { _ItemType = value; }
        }
        public bool ShouldSerializeItemType()
        {
            return (_ItemType.HasValue);
        }

        public string ItemGroup { get; set; }
    }

    public class CampaignPartner
    {
        private int? _CampaignNumber;
        public int CampaignNumber
        {
            get { return _CampaignNumber.Value; }
            set { _CampaignNumber = value; }
        }
        public bool ShouldSerializeCampaignNumber()
        {
            return (_CampaignNumber.HasValue);
        }

        private int? _CampaignLineNumber;
        public int CampaignLineNumber
        {
            get { return _CampaignLineNumber.Value; }
            set { _CampaignLineNumber = value; }
        }
        public bool ShouldSerializeCampaignLineNumber()
        {
            return (_CampaignLineNumber.HasValue);
        }

        private int? _PartnerID;
        public int PartnerID
        {
            get { return _PartnerID.Value; }
            set { _PartnerID = value; }
        }
        public bool ShouldSerializePartnerID()
        {
            return (_PartnerID.HasValue);
        }

        private int? _RelationshipCode;
        public int RelationshipCode
        {
            get { return _RelationshipCode.Value; }
            set { _RelationshipCode = value; }
        }
        public bool ShouldSerializeRelationshipCode()
        {
            return (_RelationshipCode.HasValue);
        }

        public string RelatedBP { get; set; }
        public string Details { get; set; }
    }

    public class CampaignParams
    {
        private int? _CampaignNumber;
        public int CampaignNumber
        {
            get { return _CampaignNumber.Value; }
            set { _CampaignNumber = value; }
        }
        public bool ShouldSerializeCampaignNumber()
        {
            return (_CampaignNumber.HasValue);
        }

        public string CampaignName { get; set; }
    }

    public class QueryCategory
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
        public string Permissions { get; set; }
    }

    public class FactoringIndicator
    {
        public string IndicatorCode { get; set; }
        public string IndicatorName { get; set; }
    }

    public class PaymentParams
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

    }

    public class Payment
    {
        private int? _DocNum;
        public int DocNum
        {
            get { return _DocNum.Value; }
            set { _DocNum = value; }
        }
        public bool ShouldSerializeDocNum()
        {
            return (_DocNum.HasValue);
        }

        private SAPB1.BoRcptTypes? _DocType;
        public SAPB1.BoRcptTypes DocType
        {
            get { return _DocType.Value; }
            set { _DocType = value; }
        }
        public bool ShouldSerializeDocType()
        {
            return (_DocType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _HandWritten;
        public SAPB1.BoYesNoEnum HandWritten
        {
            get { return _HandWritten.Value; }
            set { _HandWritten = value; }
        }
        public bool ShouldSerializeHandWritten()
        {
            return (_HandWritten.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Printed;
        public SAPB1.BoYesNoEnum Printed
        {
            get { return _Printed.Value; }
            set { _Printed = value; }
        }
        public bool ShouldSerializePrinted()
        {
            return (_Printed.HasValue);
        }

        private DateTime? _DocDate;
        public DateTime DocDate
        {
            get { return _DocDate.Value; }
            set { _DocDate = value; }
        }
        public bool ShouldSerializeDocDate()
        {
            return (_DocDate.HasValue);
        }

        public string CardCode { get; set; }
        public string CardName { get; set; }
        public string Address { get; set; }
        public string CashAccount { get; set; }
        public string DocCurrency { get; set; }
        private decimal? _CashSum;
        public decimal CashSum
        {
            get { return _CashSum.Value; }
            set { _CashSum = value; }
        }
        public bool ShouldSerializeCashSum()
        {
            return (_CashSum.HasValue);
        }

        public string CheckAccount { get; set; }
        public string TransferAccount { get; set; }
        private decimal? _TransferSum;
        public decimal TransferSum
        {
            get { return _TransferSum.Value; }
            set { _TransferSum = value; }
        }
        public bool ShouldSerializeTransferSum()
        {
            return (_TransferSum.HasValue);
        }

        private DateTime? _TransferDate;
        public DateTime TransferDate
        {
            get { return _TransferDate.Value; }
            set { _TransferDate = value; }
        }
        public bool ShouldSerializeTransferDate()
        {
            return (_TransferDate.HasValue);
        }

        public string TransferReference { get; set; }
        private SAPB1.BoYesNoEnum? _LocalCurrency;
        public SAPB1.BoYesNoEnum LocalCurrency
        {
            get { return _LocalCurrency.Value; }
            set { _LocalCurrency = value; }
        }
        public bool ShouldSerializeLocalCurrency()
        {
            return (_LocalCurrency.HasValue);
        }

        private decimal? _DocRate;
        public decimal DocRate
        {
            get { return _DocRate.Value; }
            set { _DocRate = value; }
        }
        public bool ShouldSerializeDocRate()
        {
            return (_DocRate.HasValue);
        }

        public string Reference1 { get; set; }
        public string Reference2 { get; set; }
        public string CounterReference { get; set; }
        public string Remarks { get; set; }
        public string JournalRemarks { get; set; }
        private SAPB1.BoYesNoEnum? _SplitTransaction;
        public SAPB1.BoYesNoEnum SplitTransaction
        {
            get { return _SplitTransaction.Value; }
            set { _SplitTransaction = value; }
        }
        public bool ShouldSerializeSplitTransaction()
        {
            return (_SplitTransaction.HasValue);
        }

        private int? _ContactPersonCode;
        public int ContactPersonCode
        {
            get { return _ContactPersonCode.Value; }
            set { _ContactPersonCode = value; }
        }
        public bool ShouldSerializeContactPersonCode()
        {
            return (_ContactPersonCode.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ApplyVAT;
        public SAPB1.BoYesNoEnum ApplyVAT
        {
            get { return _ApplyVAT.Value; }
            set { _ApplyVAT = value; }
        }
        public bool ShouldSerializeApplyVAT()
        {
            return (_ApplyVAT.HasValue);
        }

        private DateTime? _TaxDate;
        public DateTime TaxDate
        {
            get { return _TaxDate.Value; }
            set { _TaxDate = value; }
        }
        public bool ShouldSerializeTaxDate()
        {
            return (_TaxDate.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        public string BankCode { get; set; }
        public string BankAccount { get; set; }
        private decimal? _DiscountPercent;
        public decimal DiscountPercent
        {
            get { return _DiscountPercent.Value; }
            set { _DiscountPercent = value; }
        }
        public bool ShouldSerializeDiscountPercent()
        {
            return (_DiscountPercent.HasValue);
        }

        public string ProjectCode { get; set; }
        private SAPB1.BoYesNoEnum? _CurrencyIsLocal;
        public SAPB1.BoYesNoEnum CurrencyIsLocal
        {
            get { return _CurrencyIsLocal.Value; }
            set { _CurrencyIsLocal = value; }
        }
        public bool ShouldSerializeCurrencyIsLocal()
        {
            return (_CurrencyIsLocal.HasValue);
        }

        private decimal? _DeductionPercent;
        public decimal DeductionPercent
        {
            get { return _DeductionPercent.Value; }
            set { _DeductionPercent = value; }
        }
        public bool ShouldSerializeDeductionPercent()
        {
            return (_DeductionPercent.HasValue);
        }

        private decimal? _DeductionSum;
        public decimal DeductionSum
        {
            get { return _DeductionSum.Value; }
            set { _DeductionSum = value; }
        }
        public bool ShouldSerializeDeductionSum()
        {
            return (_DeductionSum.HasValue);
        }

        private decimal? _CashSumFC;
        public decimal CashSumFC
        {
            get { return _CashSumFC.Value; }
            set { _CashSumFC = value; }
        }
        public bool ShouldSerializeCashSumFC()
        {
            return (_CashSumFC.HasValue);
        }

        private decimal? _CashSumSys;
        public decimal CashSumSys
        {
            get { return _CashSumSys.Value; }
            set { _CashSumSys = value; }
        }
        public bool ShouldSerializeCashSumSys()
        {
            return (_CashSumSys.HasValue);
        }

        public string BoeAccount { get; set; }
        private decimal? _BillOfExchangeAmount;
        public decimal BillOfExchangeAmount
        {
            get { return _BillOfExchangeAmount.Value; }
            set { _BillOfExchangeAmount = value; }
        }
        public bool ShouldSerializeBillOfExchangeAmount()
        {
            return (_BillOfExchangeAmount.HasValue);
        }

        private SAPB1.BoBoeStatus? _BillofExchangeStatus;
        public SAPB1.BoBoeStatus BillofExchangeStatus
        {
            get { return _BillofExchangeStatus.Value; }
            set { _BillofExchangeStatus = value; }
        }
        public bool ShouldSerializeBillofExchangeStatus()
        {
            return (_BillofExchangeStatus.HasValue);
        }

        private decimal? _BillOfExchangeAmountFC;
        public decimal BillOfExchangeAmountFC
        {
            get { return _BillOfExchangeAmountFC.Value; }
            set { _BillOfExchangeAmountFC = value; }
        }
        public bool ShouldSerializeBillOfExchangeAmountFC()
        {
            return (_BillOfExchangeAmountFC.HasValue);
        }

        private decimal? _BillOfExchangeAmountSC;
        public decimal BillOfExchangeAmountSC
        {
            get { return _BillOfExchangeAmountSC.Value; }
            set { _BillOfExchangeAmountSC = value; }
        }
        public bool ShouldSerializeBillOfExchangeAmountSC()
        {
            return (_BillOfExchangeAmountSC.HasValue);
        }

        public string BillOfExchangeAgent { get; set; }
        public string WTCode { get; set; }
        private decimal? _WTAmount;
        public decimal WTAmount
        {
            get { return _WTAmount.Value; }
            set { _WTAmount = value; }
        }
        public bool ShouldSerializeWTAmount()
        {
            return (_WTAmount.HasValue);
        }

        private decimal? _WTAmountFC;
        public decimal WTAmountFC
        {
            get { return _WTAmountFC.Value; }
            set { _WTAmountFC = value; }
        }
        public bool ShouldSerializeWTAmountFC()
        {
            return (_WTAmountFC.HasValue);
        }

        private decimal? _WTAmountSC;
        public decimal WTAmountSC
        {
            get { return _WTAmountSC.Value; }
            set { _WTAmountSC = value; }
        }
        public bool ShouldSerializeWTAmountSC()
        {
            return (_WTAmountSC.HasValue);
        }

        public string WTAccount { get; set; }
        private decimal? _WTTaxableAmount;
        public decimal WTTaxableAmount
        {
            get { return _WTTaxableAmount.Value; }
            set { _WTTaxableAmount = value; }
        }
        public bool ShouldSerializeWTTaxableAmount()
        {
            return (_WTTaxableAmount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Proforma;
        public SAPB1.BoYesNoEnum Proforma
        {
            get { return _Proforma.Value; }
            set { _Proforma = value; }
        }
        public bool ShouldSerializeProforma()
        {
            return (_Proforma.HasValue);
        }

        public string PayToBankCode { get; set; }
        public string PayToBankBranch { get; set; }
        public string PayToBankAccountNo { get; set; }
        public string PayToCode { get; set; }
        public string PayToBankCountry { get; set; }
        private SAPB1.BoYesNoEnum? _IsPayToBank;
        public SAPB1.BoYesNoEnum IsPayToBank
        {
            get { return _IsPayToBank.Value; }
            set { _IsPayToBank = value; }
        }
        public bool ShouldSerializeIsPayToBank()
        {
            return (_IsPayToBank.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private SAPB1.BoPaymentPriorities? _PaymentPriority;
        public SAPB1.BoPaymentPriorities PaymentPriority
        {
            get { return _PaymentPriority.Value; }
            set { _PaymentPriority = value; }
        }
        public bool ShouldSerializePaymentPriority()
        {
            return (_PaymentPriority.HasValue);
        }

        public string TaxGroup { get; set; }
        private decimal? _BankChargeAmount;
        public decimal BankChargeAmount
        {
            get { return _BankChargeAmount.Value; }
            set { _BankChargeAmount = value; }
        }
        public bool ShouldSerializeBankChargeAmount()
        {
            return (_BankChargeAmount.HasValue);
        }

        private decimal? _BankChargeAmountInFC;
        public decimal BankChargeAmountInFC
        {
            get { return _BankChargeAmountInFC.Value; }
            set { _BankChargeAmountInFC = value; }
        }
        public bool ShouldSerializeBankChargeAmountInFC()
        {
            return (_BankChargeAmountInFC.HasValue);
        }

        private decimal? _BankChargeAmountInSC;
        public decimal BankChargeAmountInSC
        {
            get { return _BankChargeAmountInSC.Value; }
            set { _BankChargeAmountInSC = value; }
        }
        public bool ShouldSerializeBankChargeAmountInSC()
        {
            return (_BankChargeAmountInSC.HasValue);
        }

        private decimal? _UnderOverpaymentdifference;
        public decimal UnderOverpaymentdifference
        {
            get { return _UnderOverpaymentdifference.Value; }
            set { _UnderOverpaymentdifference = value; }
        }
        public bool ShouldSerializeUnderOverpaymentdifference()
        {
            return (_UnderOverpaymentdifference.HasValue);
        }

        private decimal? _UnderOverpaymentdiffSC;
        public decimal UnderOverpaymentdiffSC
        {
            get { return _UnderOverpaymentdiffSC.Value; }
            set { _UnderOverpaymentdiffSC = value; }
        }
        public bool ShouldSerializeUnderOverpaymentdiffSC()
        {
            return (_UnderOverpaymentdiffSC.HasValue);
        }

        private decimal? _WtBaseSum;
        public decimal WtBaseSum
        {
            get { return _WtBaseSum.Value; }
            set { _WtBaseSum = value; }
        }
        public bool ShouldSerializeWtBaseSum()
        {
            return (_WtBaseSum.HasValue);
        }

        private decimal? _WtBaseSumFC;
        public decimal WtBaseSumFC
        {
            get { return _WtBaseSumFC.Value; }
            set { _WtBaseSumFC = value; }
        }
        public bool ShouldSerializeWtBaseSumFC()
        {
            return (_WtBaseSumFC.HasValue);
        }

        private decimal? _WtBaseSumSC;
        public decimal WtBaseSumSC
        {
            get { return _WtBaseSumSC.Value; }
            set { _WtBaseSumSC = value; }
        }
        public bool ShouldSerializeWtBaseSumSC()
        {
            return (_WtBaseSumSC.HasValue);
        }

        private DateTime? _VatDate;
        public DateTime VatDate
        {
            get { return _VatDate.Value; }
            set { _VatDate = value; }
        }
        public bool ShouldSerializeVatDate()
        {
            return (_VatDate.HasValue);
        }

        public string TransactionCode { get; set; }
        private SAPB1.BoORCTPaymentTypeEnum? _PaymentType;
        public SAPB1.BoORCTPaymentTypeEnum PaymentType
        {
            get { return _PaymentType.Value; }
            set { _PaymentType = value; }
        }
        public bool ShouldSerializePaymentType()
        {
            return (_PaymentType.HasValue);
        }

        private decimal? _TransferRealAmount;
        public decimal TransferRealAmount
        {
            get { return _TransferRealAmount.Value; }
            set { _TransferRealAmount = value; }
        }
        public bool ShouldSerializeTransferRealAmount()
        {
            return (_TransferRealAmount.HasValue);
        }

        private SAPB1.BoPaymentsObjectType? _DocObjectCode;
        public SAPB1.BoPaymentsObjectType DocObjectCode
        {
            get { return _DocObjectCode.Value; }
            set { _DocObjectCode = value; }
        }
        public bool ShouldSerializeDocObjectCode()
        {
            return (_DocObjectCode.HasValue);
        }

        private SAPB1.BoRcptTypes? _DocTypte;
        public SAPB1.BoRcptTypes DocTypte
        {
            get { return _DocTypte.Value; }
            set { _DocTypte = value; }
        }
        public bool ShouldSerializeDocTypte()
        {
            return (_DocTypte.HasValue);
        }

        private DateTime? _DueDate;
        public DateTime DueDate
        {
            get { return _DueDate.Value; }
            set { _DueDate = value; }
        }
        public bool ShouldSerializeDueDate()
        {
            return (_DueDate.HasValue);
        }

        private int? _LocationCode;
        public int LocationCode
        {
            get { return _LocationCode.Value; }
            set { _LocationCode = value; }
        }
        public bool ShouldSerializeLocationCode()
        {
            return (_LocationCode.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Cancelled;
        public SAPB1.BoYesNoEnum Cancelled
        {
            get { return _Cancelled.Value; }
            set { _Cancelled = value; }
        }
        public bool ShouldSerializeCancelled()
        {
            return (_Cancelled.HasValue);
        }

        public string ControlAccount { get; set; }
        private decimal? _UnderOverpaymentdiffFC;
        public decimal UnderOverpaymentdiffFC
        {
            get { return _UnderOverpaymentdiffFC.Value; }
            set { _UnderOverpaymentdiffFC = value; }
        }
        public bool ShouldSerializeUnderOverpaymentdiffFC()
        {
            return (_UnderOverpaymentdiffFC.HasValue);
        }

        private SAPB1.PaymentsAuthorizationStatusEnum? _AuthorizationStatus;
        public SAPB1.PaymentsAuthorizationStatusEnum AuthorizationStatus
        {
            get { return _AuthorizationStatus.Value; }
            set { _AuthorizationStatus = value; }
        }
        public bool ShouldSerializeAuthorizationStatus()
        {
            return (_AuthorizationStatus.HasValue);
        }

        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

        public string BPLName { get; set; }
        public string VATRegNum { get; set; }
        public System.Collections.Generic.List<SAPB1.PaymentCheck> PaymentChecks { get; set; }
        public System.Collections.Generic.List<SAPB1.PaymentInvoice> PaymentInvoices { get; set; }
        public System.Collections.Generic.List<SAPB1.PaymentCreditCard> PaymentCreditCards { get; set; }
        public System.Collections.Generic.List<SAPB1.PaymentAccount> PaymentAccounts { get; set; }
        public SAPB1.BillOfExchange BillOfExchange { get; set; }
        public System.Collections.Generic.List<SAPB1.WithholdingTaxCertificatesData> WithholdingTaxCertificatesCollection { get; set; }
        public System.Collections.Generic.List<SAPB1.CashFlowAssignment> CashFlowAssignments { get; set; }
        public System.Collections.Generic.List<SAPB1.Payments_ApprovalRequest> Payments_ApprovalRequests { get; set; }
        public System.Collections.Generic.List<SAPB1.WithholdingTaxDataWTX> WithholdingTaxDataWTXCollection { get; set; }
    }

    public class PaymentCheck
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private DateTime? _DueDate;
        public DateTime DueDate
        {
            get { return _DueDate.Value; }
            set { _DueDate = value; }
        }
        public bool ShouldSerializeDueDate()
        {
            return (_DueDate.HasValue);
        }

        private int? _CheckNumber;
        public int CheckNumber
        {
            get { return _CheckNumber.Value; }
            set { _CheckNumber = value; }
        }
        public bool ShouldSerializeCheckNumber()
        {
            return (_CheckNumber.HasValue);
        }

        public string BankCode { get; set; }
        public string Branch { get; set; }
        public string AccounttNum { get; set; }
        public string Details { get; set; }
        private SAPB1.BoYesNoEnum? _Trnsfrable;
        public SAPB1.BoYesNoEnum Trnsfrable
        {
            get { return _Trnsfrable.Value; }
            set { _Trnsfrable = value; }
        }
        public bool ShouldSerializeTrnsfrable()
        {
            return (_Trnsfrable.HasValue);
        }

        private decimal? _CheckSum;
        public decimal CheckSum
        {
            get { return _CheckSum.Value; }
            set { _CheckSum = value; }
        }
        public bool ShouldSerializeCheckSum()
        {
            return (_CheckSum.HasValue);
        }

        public string Currency { get; set; }
        public string CountryCode { get; set; }
        private int? _CheckAbsEntry;
        public int CheckAbsEntry
        {
            get { return _CheckAbsEntry.Value; }
            set { _CheckAbsEntry = value; }
        }
        public bool ShouldSerializeCheckAbsEntry()
        {
            return (_CheckAbsEntry.HasValue);
        }

        public string CheckAccount { get; set; }
        private SAPB1.BoYesNoEnum? _ManualCheck;
        public SAPB1.BoYesNoEnum ManualCheck
        {
            get { return _ManualCheck.Value; }
            set { _ManualCheck = value; }
        }
        public bool ShouldSerializeManualCheck()
        {
            return (_ManualCheck.HasValue);
        }

        public string FiscalID { get; set; }
        public string OriginallyIssuedBy { get; set; }
        private SAPB1.BoYesNoEnum? _Endorse;
        public SAPB1.BoYesNoEnum Endorse
        {
            get { return _Endorse.Value; }
            set { _Endorse = value; }
        }
        public bool ShouldSerializeEndorse()
        {
            return (_Endorse.HasValue);
        }

        private int? _EndorsableCheckNo;
        public int EndorsableCheckNo
        {
            get { return _EndorsableCheckNo.Value; }
            set { _EndorsableCheckNo = value; }
        }
        public bool ShouldSerializeEndorsableCheckNo()
        {
            return (_EndorsableCheckNo.HasValue);
        }

    }

    public class PaymentInvoice
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private decimal? _SumApplied;
        public decimal SumApplied
        {
            get { return _SumApplied.Value; }
            set { _SumApplied = value; }
        }
        public bool ShouldSerializeSumApplied()
        {
            return (_SumApplied.HasValue);
        }

        private decimal? _AppliedFC;
        public decimal AppliedFC
        {
            get { return _AppliedFC.Value; }
            set { _AppliedFC = value; }
        }
        public bool ShouldSerializeAppliedFC()
        {
            return (_AppliedFC.HasValue);
        }

        private decimal? _AppliedSys;
        public decimal AppliedSys
        {
            get { return _AppliedSys.Value; }
            set { _AppliedSys = value; }
        }
        public bool ShouldSerializeAppliedSys()
        {
            return (_AppliedSys.HasValue);
        }

        private decimal? _DocRate;
        public decimal DocRate
        {
            get { return _DocRate.Value; }
            set { _DocRate = value; }
        }
        public bool ShouldSerializeDocRate()
        {
            return (_DocRate.HasValue);
        }

        private int? _DocLine;
        public int DocLine
        {
            get { return _DocLine.Value; }
            set { _DocLine = value; }
        }
        public bool ShouldSerializeDocLine()
        {
            return (_DocLine.HasValue);
        }

        private SAPB1.BoRcptInvTypes? _InvoiceType;
        public SAPB1.BoRcptInvTypes InvoiceType
        {
            get { return _InvoiceType.Value; }
            set { _InvoiceType = value; }
        }
        public bool ShouldSerializeInvoiceType()
        {
            return (_InvoiceType.HasValue);
        }

        private decimal? _DiscountPercent;
        public decimal DiscountPercent
        {
            get { return _DiscountPercent.Value; }
            set { _DiscountPercent = value; }
        }
        public bool ShouldSerializeDiscountPercent()
        {
            return (_DiscountPercent.HasValue);
        }

        private decimal? _PaidSum;
        public decimal PaidSum
        {
            get { return _PaidSum.Value; }
            set { _PaidSum = value; }
        }
        public bool ShouldSerializePaidSum()
        {
            return (_PaidSum.HasValue);
        }

        private int? _InstallmentId;
        public int InstallmentId
        {
            get { return _InstallmentId.Value; }
            set { _InstallmentId = value; }
        }
        public bool ShouldSerializeInstallmentId()
        {
            return (_InstallmentId.HasValue);
        }

        private decimal? _WitholdingTaxApplied;
        public decimal WitholdingTaxApplied
        {
            get { return _WitholdingTaxApplied.Value; }
            set { _WitholdingTaxApplied = value; }
        }
        public bool ShouldSerializeWitholdingTaxApplied()
        {
            return (_WitholdingTaxApplied.HasValue);
        }

        private decimal? _WitholdingTaxAppliedFC;
        public decimal WitholdingTaxAppliedFC
        {
            get { return _WitholdingTaxAppliedFC.Value; }
            set { _WitholdingTaxAppliedFC = value; }
        }
        public bool ShouldSerializeWitholdingTaxAppliedFC()
        {
            return (_WitholdingTaxAppliedFC.HasValue);
        }

        private decimal? _WitholdingTaxAppliedSC;
        public decimal WitholdingTaxAppliedSC
        {
            get { return _WitholdingTaxAppliedSC.Value; }
            set { _WitholdingTaxAppliedSC = value; }
        }
        public bool ShouldSerializeWitholdingTaxAppliedSC()
        {
            return (_WitholdingTaxAppliedSC.HasValue);
        }

        private DateTime? _LinkDate;
        public DateTime LinkDate
        {
            get { return _LinkDate.Value; }
            set { _LinkDate = value; }
        }
        public bool ShouldSerializeLinkDate()
        {
            return (_LinkDate.HasValue);
        }

        public string DistributionRule { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
        private decimal? _TotalDiscount;
        public decimal TotalDiscount
        {
            get { return _TotalDiscount.Value; }
            set { _TotalDiscount = value; }
        }
        public bool ShouldSerializeTotalDiscount()
        {
            return (_TotalDiscount.HasValue);
        }

        private decimal? _TotalDiscountFC;
        public decimal TotalDiscountFC
        {
            get { return _TotalDiscountFC.Value; }
            set { _TotalDiscountFC = value; }
        }
        public bool ShouldSerializeTotalDiscountFC()
        {
            return (_TotalDiscountFC.HasValue);
        }

        private decimal? _TotalDiscountSC;
        public decimal TotalDiscountSC
        {
            get { return _TotalDiscountSC.Value; }
            set { _TotalDiscountSC = value; }
        }
        public bool ShouldSerializeTotalDiscountSC()
        {
            return (_TotalDiscountSC.HasValue);
        }

    }

    public class PaymentCreditCard
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _CreditCard;
        public int CreditCard
        {
            get { return _CreditCard.Value; }
            set { _CreditCard = value; }
        }
        public bool ShouldSerializeCreditCard()
        {
            return (_CreditCard.HasValue);
        }

        public string CreditAcct { get; set; }
        public string CreditCardNumber { get; set; }
        private DateTime? _CardValidUntil;
        public DateTime CardValidUntil
        {
            get { return _CardValidUntil.Value; }
            set { _CardValidUntil = value; }
        }
        public bool ShouldSerializeCardValidUntil()
        {
            return (_CardValidUntil.HasValue);
        }

        public string VoucherNum { get; set; }
        public string OwnerIdNum { get; set; }
        public string OwnerPhone { get; set; }
        private int? _PaymentMethodCode;
        public int PaymentMethodCode
        {
            get { return _PaymentMethodCode.Value; }
            set { _PaymentMethodCode = value; }
        }
        public bool ShouldSerializePaymentMethodCode()
        {
            return (_PaymentMethodCode.HasValue);
        }

        private int? _NumOfPayments;
        public int NumOfPayments
        {
            get { return _NumOfPayments.Value; }
            set { _NumOfPayments = value; }
        }
        public bool ShouldSerializeNumOfPayments()
        {
            return (_NumOfPayments.HasValue);
        }

        private DateTime? _FirstPaymentDue;
        public DateTime FirstPaymentDue
        {
            get { return _FirstPaymentDue.Value; }
            set { _FirstPaymentDue = value; }
        }
        public bool ShouldSerializeFirstPaymentDue()
        {
            return (_FirstPaymentDue.HasValue);
        }

        private decimal? _FirstPaymentSum;
        public decimal FirstPaymentSum
        {
            get { return _FirstPaymentSum.Value; }
            set { _FirstPaymentSum = value; }
        }
        public bool ShouldSerializeFirstPaymentSum()
        {
            return (_FirstPaymentSum.HasValue);
        }

        private decimal? _AdditionalPaymentSum;
        public decimal AdditionalPaymentSum
        {
            get { return _AdditionalPaymentSum.Value; }
            set { _AdditionalPaymentSum = value; }
        }
        public bool ShouldSerializeAdditionalPaymentSum()
        {
            return (_AdditionalPaymentSum.HasValue);
        }

        private decimal? _CreditSum;
        public decimal CreditSum
        {
            get { return _CreditSum.Value; }
            set { _CreditSum = value; }
        }
        public bool ShouldSerializeCreditSum()
        {
            return (_CreditSum.HasValue);
        }

        public string CreditCur { get; set; }
        private decimal? _CreditRate;
        public decimal CreditRate
        {
            get { return _CreditRate.Value; }
            set { _CreditRate = value; }
        }
        public bool ShouldSerializeCreditRate()
        {
            return (_CreditRate.HasValue);
        }

        public string ConfirmationNum { get; set; }
        private int? _NumOfCreditPayments;
        public int NumOfCreditPayments
        {
            get { return _NumOfCreditPayments.Value; }
            set { _NumOfCreditPayments = value; }
        }
        public bool ShouldSerializeNumOfCreditPayments()
        {
            return (_NumOfCreditPayments.HasValue);
        }

        private SAPB1.BoRcptCredTypes? _CreditType;
        public SAPB1.BoRcptCredTypes CreditType
        {
            get { return _CreditType.Value; }
            set { _CreditType = value; }
        }
        public bool ShouldSerializeCreditType()
        {
            return (_CreditType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SplitPayments;
        public SAPB1.BoYesNoEnum SplitPayments
        {
            get { return _SplitPayments.Value; }
            set { _SplitPayments = value; }
        }
        public bool ShouldSerializeSplitPayments()
        {
            return (_SplitPayments.HasValue);
        }

    }

    public class PaymentAccount
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        public string AccountCode { get; set; }
        private decimal? _SumPaid;
        public decimal SumPaid
        {
            get { return _SumPaid.Value; }
            set { _SumPaid = value; }
        }
        public bool ShouldSerializeSumPaid()
        {
            return (_SumPaid.HasValue);
        }

        private decimal? _SumPaidFC;
        public decimal SumPaidFC
        {
            get { return _SumPaidFC.Value; }
            set { _SumPaidFC = value; }
        }
        public bool ShouldSerializeSumPaidFC()
        {
            return (_SumPaidFC.HasValue);
        }

        public string Decription { get; set; }
        public string VatGroup { get; set; }
        public string AccountName { get; set; }
        private decimal? _GrossAmount;
        public decimal GrossAmount
        {
            get { return _GrossAmount.Value; }
            set { _GrossAmount = value; }
        }
        public bool ShouldSerializeGrossAmount()
        {
            return (_GrossAmount.HasValue);
        }

        public string ProfitCenter { get; set; }
        public string ProjectCode { get; set; }
        private decimal? _VatAmount;
        public decimal VatAmount
        {
            get { return _VatAmount.Value; }
            set { _VatAmount = value; }
        }
        public bool ShouldSerializeVatAmount()
        {
            return (_VatAmount.HasValue);
        }

        public string ProfitCenter2 { get; set; }
        public string ProfitCenter3 { get; set; }
        public string ProfitCenter4 { get; set; }
        public string ProfitCenter5 { get; set; }
        private int? _LocationCode;
        public int LocationCode
        {
            get { return _LocationCode.Value; }
            set { _LocationCode = value; }
        }
        public bool ShouldSerializeLocationCode()
        {
            return (_LocationCode.HasValue);
        }

        private decimal? _EqualizationVatAmount;
        public decimal EqualizationVatAmount
        {
            get { return _EqualizationVatAmount.Value; }
            set { _EqualizationVatAmount = value; }
        }
        public bool ShouldSerializeEqualizationVatAmount()
        {
            return (_EqualizationVatAmount.HasValue);
        }

    }

    public class BillOfExchange
    {
        private int? _BillOfExchangeNo;
        public int BillOfExchangeNo
        {
            get { return _BillOfExchangeNo.Value; }
            set { _BillOfExchangeNo = value; }
        }
        public bool ShouldSerializeBillOfExchangeNo()
        {
            return (_BillOfExchangeNo.HasValue);
        }

        private DateTime? _BillOfExchangeDueDate;
        public DateTime BillOfExchangeDueDate
        {
            get { return _BillOfExchangeDueDate.Value; }
            set { _BillOfExchangeDueDate = value; }
        }
        public bool ShouldSerializeBillOfExchangeDueDate()
        {
            return (_BillOfExchangeDueDate.HasValue);
        }

        public string Details { get; set; }
        public string ReferenceNo { get; set; }
        public string Remarks { get; set; }
        public string PaymentMethodCode { get; set; }
        public string BPBankCode { get; set; }
        public string BPBankAct { get; set; }
        public string BPBankCountry { get; set; }
        public string ControlKey { get; set; }
        public string PaymentEngineStatus1 { get; set; }
        public string PaymentEngineStatus2 { get; set; }
        public string PaymentEngineStatus3 { get; set; }
        public string StampTaxCode { get; set; }
        private decimal? _StampTaxAmount;
        public decimal StampTaxAmount
        {
            get { return _StampTaxAmount.Value; }
            set { _StampTaxAmount = value; }
        }
        public bool ShouldSerializeStampTaxAmount()
        {
            return (_StampTaxAmount.HasValue);
        }

        private int? _FolioNumber;
        public int FolioNumber
        {
            get { return _FolioNumber.Value; }
            set { _FolioNumber = value; }
        }
        public bool ShouldSerializeFolioNumber()
        {
            return (_FolioNumber.HasValue);
        }

        public string FolioPrefixString { get; set; }
        private decimal? _InterestAmount;
        public decimal InterestAmount
        {
            get { return _InterestAmount.Value; }
            set { _InterestAmount = value; }
        }
        public bool ShouldSerializeInterestAmount()
        {
            return (_InterestAmount.HasValue);
        }

        private decimal? _DiscountAmount;
        public decimal DiscountAmount
        {
            get { return _DiscountAmount.Value; }
            set { _DiscountAmount = value; }
        }
        public bool ShouldSerializeDiscountAmount()
        {
            return (_DiscountAmount.HasValue);
        }

        private decimal? _FineAmount;
        public decimal FineAmount
        {
            get { return _FineAmount.Value; }
            set { _FineAmount = value; }
        }
        public bool ShouldSerializeFineAmount()
        {
            return (_FineAmount.HasValue);
        }

        private DateTime? _InterestDate;
        public DateTime InterestDate
        {
            get { return _InterestDate.Value; }
            set { _InterestDate = value; }
        }
        public bool ShouldSerializeInterestDate()
        {
            return (_InterestDate.HasValue);
        }

        private DateTime? _DiscountDate;
        public DateTime DiscountDate
        {
            get { return _DiscountDate.Value; }
            set { _DiscountDate = value; }
        }
        public bool ShouldSerializeDiscountDate()
        {
            return (_DiscountDate.HasValue);
        }

        private DateTime? _FineDate;
        public DateTime FineDate
        {
            get { return _FineDate.Value; }
            set { _FineDate = value; }
        }
        public bool ShouldSerializeFineDate()
        {
            return (_FineDate.HasValue);
        }

        private decimal? _IOFAmount;
        public decimal IOFAmount
        {
            get { return _IOFAmount.Value; }
            set { _IOFAmount = value; }
        }
        public bool ShouldSerializeIOFAmount()
        {
            return (_IOFAmount.HasValue);
        }

        private decimal? _ServiceFeeAmount;
        public decimal ServiceFeeAmount
        {
            get { return _ServiceFeeAmount.Value; }
            set { _ServiceFeeAmount = value; }
        }
        public bool ShouldSerializeServiceFeeAmount()
        {
            return (_ServiceFeeAmount.HasValue);
        }

        private decimal? _OtherExpensesAmount;
        public decimal OtherExpensesAmount
        {
            get { return _OtherExpensesAmount.Value; }
            set { _OtherExpensesAmount = value; }
        }
        public bool ShouldSerializeOtherExpensesAmount()
        {
            return (_OtherExpensesAmount.HasValue);
        }

        private decimal? _OtherIncomesAmount;
        public decimal OtherIncomesAmount
        {
            get { return _OtherIncomesAmount.Value; }
            set { _OtherIncomesAmount = value; }
        }
        public bool ShouldSerializeOtherIncomesAmount()
        {
            return (_OtherIncomesAmount.HasValue);
        }

    }

    public class WithholdingTaxCertificatesData
    {
        public string POICodeRef { get; set; }
        public string POICode { get; set; }
        public string Certificate { get; set; }
        public string WTaxType { get; set; }
        public string PeriodIndicator { get; set; }
        private int? _WhtAbsId;
        public int WhtAbsId
        {
            get { return _WhtAbsId.Value; }
            set { _WhtAbsId = value; }
        }
        public bool ShouldSerializeWhtAbsId()
        {
            return (_WhtAbsId.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private int? _Number;
        public int Number
        {
            get { return _Number.Value; }
            set { _Number = value; }
        }
        public bool ShouldSerializeNumber()
        {
            return (_Number.HasValue);
        }

        private DateTime? _IssueDate;
        public DateTime IssueDate
        {
            get { return _IssueDate.Value; }
            set { _IssueDate = value; }
        }
        public bool ShouldSerializeIssueDate()
        {
            return (_IssueDate.HasValue);
        }

        private decimal? _SumVATAmount;
        public decimal SumVATAmount
        {
            get { return _SumVATAmount.Value; }
            set { _SumVATAmount = value; }
        }
        public bool ShouldSerializeSumVATAmount()
        {
            return (_SumVATAmount.HasValue);
        }

        private decimal? _SumDocTotal;
        public decimal SumDocTotal
        {
            get { return _SumDocTotal.Value; }
            set { _SumDocTotal = value; }
        }
        public bool ShouldSerializeSumDocTotal()
        {
            return (_SumDocTotal.HasValue);
        }

        private decimal? _SumBaseAmount;
        public decimal SumBaseAmount
        {
            get { return _SumBaseAmount.Value; }
            set { _SumBaseAmount = value; }
        }
        public bool ShouldSerializeSumBaseAmount()
        {
            return (_SumBaseAmount.HasValue);
        }

        private decimal? _SumAccumAmount;
        public decimal SumAccumAmount
        {
            get { return _SumAccumAmount.Value; }
            set { _SumAccumAmount = value; }
        }
        public bool ShouldSerializeSumAccumAmount()
        {
            return (_SumAccumAmount.HasValue);
        }

        private decimal? _SumPercAmount;
        public decimal SumPercAmount
        {
            get { return _SumPercAmount.Value; }
            set { _SumPercAmount = value; }
        }
        public bool ShouldSerializeSumPercAmount()
        {
            return (_SumPercAmount.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.WTGroups> WTGroupsCollection { get; set; }
    }

    public class WTGroups
    {
        private int? _WTAbsEntry;
        public int WTAbsEntry
        {
            get { return _WTAbsEntry.Value; }
            set { _WTAbsEntry = value; }
        }
        public bool ShouldSerializeWTAbsEntry()
        {
            return (_WTAbsEntry.HasValue);
        }

        private decimal? _Percent;
        public decimal Percent
        {
            get { return _Percent.Value; }
            set { _Percent = value; }
        }
        public bool ShouldSerializePercent()
        {
            return (_Percent.HasValue);
        }

        private decimal? _SumVATAmount;
        public decimal SumVATAmount
        {
            get { return _SumVATAmount.Value; }
            set { _SumVATAmount = value; }
        }
        public bool ShouldSerializeSumVATAmount()
        {
            return (_SumVATAmount.HasValue);
        }

        private decimal? _SumDocTotal;
        public decimal SumDocTotal
        {
            get { return _SumDocTotal.Value; }
            set { _SumDocTotal = value; }
        }
        public bool ShouldSerializeSumDocTotal()
        {
            return (_SumDocTotal.HasValue);
        }

        private decimal? _SumBaseAmount;
        public decimal SumBaseAmount
        {
            get { return _SumBaseAmount.Value; }
            set { _SumBaseAmount = value; }
        }
        public bool ShouldSerializeSumBaseAmount()
        {
            return (_SumBaseAmount.HasValue);
        }

        private decimal? _SumAccumAmount;
        public decimal SumAccumAmount
        {
            get { return _SumAccumAmount.Value; }
            set { _SumAccumAmount = value; }
        }
        public bool ShouldSerializeSumAccumAmount()
        {
            return (_SumAccumAmount.HasValue);
        }

        private decimal? _SumPerceptAmount;
        public decimal SumPerceptAmount
        {
            get { return _SumPerceptAmount.Value; }
            set { _SumPerceptAmount = value; }
        }
        public bool ShouldSerializeSumPerceptAmount()
        {
            return (_SumPerceptAmount.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.DocsInWTGroups> DocsInWTGroupsCollection { get; set; }
    }

    public class DocsInWTGroups
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        public string DocObjType { get; set; }
        private decimal? _VATAmount;
        public decimal VATAmount
        {
            get { return _VATAmount.Value; }
            set { _VATAmount = value; }
        }
        public bool ShouldSerializeVATAmount()
        {
            return (_VATAmount.HasValue);
        }

        private decimal? _DocTotal;
        public decimal DocTotal
        {
            get { return _DocTotal.Value; }
            set { _DocTotal = value; }
        }
        public bool ShouldSerializeDocTotal()
        {
            return (_DocTotal.HasValue);
        }

        private decimal? _BaseAmount;
        public decimal BaseAmount
        {
            get { return _BaseAmount.Value; }
            set { _BaseAmount = value; }
        }
        public bool ShouldSerializeBaseAmount()
        {
            return (_BaseAmount.HasValue);
        }

        private decimal? _AccumAmount;
        public decimal AccumAmount
        {
            get { return _AccumAmount.Value; }
            set { _AccumAmount = value; }
        }
        public bool ShouldSerializeAccumAmount()
        {
            return (_AccumAmount.HasValue);
        }

        private decimal? _PerceptAmount;
        public decimal PerceptAmount
        {
            get { return _PerceptAmount.Value; }
            set { _PerceptAmount = value; }
        }
        public bool ShouldSerializePerceptAmount()
        {
            return (_PerceptAmount.HasValue);
        }

        private decimal? _Percent;
        public decimal Percent
        {
            get { return _Percent.Value; }
            set { _Percent = value; }
        }
        public bool ShouldSerializePercent()
        {
            return (_Percent.HasValue);
        }

    }

    public class CashFlowAssignment
    {
        private int? _CashFlowAssignmentsID;
        public int CashFlowAssignmentsID
        {
            get { return _CashFlowAssignmentsID.Value; }
            set { _CashFlowAssignmentsID = value; }
        }
        public bool ShouldSerializeCashFlowAssignmentsID()
        {
            return (_CashFlowAssignmentsID.HasValue);
        }

        private int? _CashFlowLineItemID;
        public int CashFlowLineItemID
        {
            get { return _CashFlowLineItemID.Value; }
            set { _CashFlowLineItemID = value; }
        }
        public bool ShouldSerializeCashFlowLineItemID()
        {
            return (_CashFlowLineItemID.HasValue);
        }

        private decimal? _Credit;
        public decimal Credit
        {
            get { return _Credit.Value; }
            set { _Credit = value; }
        }
        public bool ShouldSerializeCredit()
        {
            return (_Credit.HasValue);
        }

        private SAPB1.PaymentMeansTypeEnum? _PaymentMeans;
        public SAPB1.PaymentMeansTypeEnum PaymentMeans
        {
            get { return _PaymentMeans.Value; }
            set { _PaymentMeans = value; }
        }
        public bool ShouldSerializePaymentMeans()
        {
            return (_PaymentMeans.HasValue);
        }

        public string CheckNumber { get; set; }
        private decimal? _AmountLC;
        public decimal AmountLC
        {
            get { return _AmountLC.Value; }
            set { _AmountLC = value; }
        }
        public bool ShouldSerializeAmountLC()
        {
            return (_AmountLC.HasValue);
        }

        private decimal? _AmountFC;
        public decimal AmountFC
        {
            get { return _AmountFC.Value; }
            set { _AmountFC = value; }
        }
        public bool ShouldSerializeAmountFC()
        {
            return (_AmountFC.HasValue);
        }

        private int? _JDTLineId;
        public int JDTLineId
        {
            get { return _JDTLineId.Value; }
            set { _JDTLineId = value; }
        }
        public bool ShouldSerializeJDTLineId()
        {
            return (_JDTLineId.HasValue);
        }

    }

    public class Payments_ApprovalRequest
    {
        private int? _ApprovalTemplatesID;
        public int ApprovalTemplatesID
        {
            get { return _ApprovalTemplatesID.Value; }
            set { _ApprovalTemplatesID = value; }
        }
        public bool ShouldSerializeApprovalTemplatesID()
        {
            return (_ApprovalTemplatesID.HasValue);
        }

        public string Remarks { get; set; }
    }

    public class AccountSegmentationParams
    {
        private int? _Numerator;
        public int Numerator
        {
            get { return _Numerator.Value; }
            set { _Numerator = value; }
        }
        public bool ShouldSerializeNumerator()
        {
            return (_Numerator.HasValue);
        }

    }

    public class AccountSegmentation
    {
        private int? _Numerator;
        public int Numerator
        {
            get { return _Numerator.Value; }
            set { _Numerator = value; }
        }
        public bool ShouldSerializeNumerator()
        {
            return (_Numerator.HasValue);
        }

        public string Name { get; set; }
        private int? _Size;
        public int Size
        {
            get { return _Size.Value; }
            set { _Size = value; }
        }
        public bool ShouldSerializeSize()
        {
            return (_Size.HasValue);
        }

        private SAPB1.AccountSegmentationTypeEnum? _Type;
        public SAPB1.AccountSegmentationTypeEnum Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.AccountSegmentationsCategory> AccountSegmentationsCategories { get; set; }
    }

    public class AccountSegmentationsCategory
    {
        private int? _SegmentID;
        public int SegmentID
        {
            get { return _SegmentID.Value; }
            set { _SegmentID = value; }
        }
        public bool ShouldSerializeSegmentID()
        {
            return (_SegmentID.HasValue);
        }

        public string Code { get; set; }
        public string Name { get; set; }
        public string ShortName { get; set; }
    }

    public class AccountSegmentationCategory
    {
        private int? _SegmentID;
        public int SegmentID
        {
            get { return _SegmentID.Value; }
            set { _SegmentID = value; }
        }
        public bool ShouldSerializeSegmentID()
        {
            return (_SegmentID.HasValue);
        }

        public string Code { get; set; }
        public string Name { get; set; }
        public string ShortName { get; set; }
    }

    public class AccountSegmentationCategoryKey
    {
        private int? _SegmentID;
        public int SegmentID
        {
            get { return _SegmentID.Value; }
            set { _SegmentID = value; }
        }
        public bool ShouldSerializeSegmentID()
        {
            return (_SegmentID.HasValue);
        }

        public string Code { get; set; }
    }

    public class WarehouseLocation
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
        public string LSTVATNumber { get; set; }
        public string CSTNumber { get; set; }
        public string ExemptionNumber { get; set; }
        public string TANNumber { get; set; }
        public string ServiceTaxNumber { get; set; }
        public string AssesseeType { get; set; }
        public string CompanyType { get; set; }
        public string NatureOfBusiness { get; set; }
        public string TINNumber { get; set; }
        public string RegistrationType { get; set; }
        public string EccNumber { get; set; }
        public string CERange { get; set; }
        public string CEDivision { get; set; }
        public string CECommissionerate { get; set; }
        public string ManufacturerCode { get; set; }
        public string Jurisdiction { get; set; }
        public string Street { get; set; }
        public string Block { get; set; }
        public string ZipCode { get; set; }
        public string City { get; set; }
        public string County { get; set; }
        public string Country { get; set; }
        public string State { get; set; }
        public string PANNumber { get; set; }
        public string CERegisterNumber { get; set; }
        public string BuildingFloorRoom { get; set; }
    }

    public class Forms1099
    {
        private int? _FormCode;
        public int FormCode
        {
            get { return _FormCode.Value; }
            set { _FormCode = value; }
        }
        public bool ShouldSerializeFormCode()
        {
            return (_FormCode.HasValue);
        }

        public string Form1099 { get; set; }
        public System.Collections.Generic.List<SAPB1.Boxes1099> Boxes1099 { get; set; }
    }

    public class Boxes1099
    {
        private int? _FormCode;
        public int FormCode
        {
            get { return _FormCode.Value; }
            set { _FormCode = value; }
        }
        public bool ShouldSerializeFormCode()
        {
            return (_FormCode.HasValue);
        }

        public string Box1099 { get; set; }
        public string BoxDescription { get; set; }
        private decimal? _Minimum1099Amount;
        public decimal Minimum1099Amount
        {
            get { return _Minimum1099Amount.Value; }
            set { _Minimum1099Amount = value; }
        }
        public bool ShouldSerializeMinimum1099Amount()
        {
            return (_Minimum1099Amount.HasValue);
        }

    }

    public class InventoryCycles
    {
        private int? _CycleCode;
        public int CycleCode
        {
            get { return _CycleCode.Value; }
            set { _CycleCode = value; }
        }
        public bool ShouldSerializeCycleCode()
        {
            return (_CycleCode.HasValue);
        }

        public string CycleName { get; set; }
        private SAPB1.BoFrequency? _Frequency;
        public SAPB1.BoFrequency Frequency
        {
            get { return _Frequency.Value; }
            set { _Frequency = value; }
        }
        public bool ShouldSerializeFrequency()
        {
            return (_Frequency.HasValue);
        }

        private int? _Day;
        public int Day
        {
            get { return _Day.Value; }
            set { _Day = value; }
        }
        public bool ShouldSerializeDay()
        {
            return (_Day.HasValue);
        }

        private TimeSpan? _Hour;
        public TimeSpan Hour
        {
            get { return _Hour.Value; }
            set { _Hour = value; }
        }
        public bool ShouldSerializeHour()
        {
            return (_Hour.HasValue);
        }

        private DateTime? _NextCountingDate;
        public DateTime NextCountingDate
        {
            get { return _NextCountingDate.Value; }
            set { _NextCountingDate = value; }
        }
        public bool ShouldSerializeNextCountingDate()
        {
            return (_NextCountingDate.HasValue);
        }

        private int? _Interval;
        public int Interval
        {
            get { return _Interval.Value; }
            set { _Interval = value; }
        }
        public bool ShouldSerializeInterval()
        {
            return (_Interval.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Sunday;
        public SAPB1.BoYesNoEnum Sunday
        {
            get { return _Sunday.Value; }
            set { _Sunday = value; }
        }
        public bool ShouldSerializeSunday()
        {
            return (_Sunday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Monday;
        public SAPB1.BoYesNoEnum Monday
        {
            get { return _Monday.Value; }
            set { _Monday = value; }
        }
        public bool ShouldSerializeMonday()
        {
            return (_Monday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Tuesday;
        public SAPB1.BoYesNoEnum Tuesday
        {
            get { return _Tuesday.Value; }
            set { _Tuesday = value; }
        }
        public bool ShouldSerializeTuesday()
        {
            return (_Tuesday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Wednesday;
        public SAPB1.BoYesNoEnum Wednesday
        {
            get { return _Wednesday.Value; }
            set { _Wednesday = value; }
        }
        public bool ShouldSerializeWednesday()
        {
            return (_Wednesday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Thursday;
        public SAPB1.BoYesNoEnum Thursday
        {
            get { return _Thursday.Value; }
            set { _Thursday = value; }
        }
        public bool ShouldSerializeThursday()
        {
            return (_Thursday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Friday;
        public SAPB1.BoYesNoEnum Friday
        {
            get { return _Friday.Value; }
            set { _Friday = value; }
        }
        public bool ShouldSerializeFriday()
        {
            return (_Friday.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Saturday;
        public SAPB1.BoYesNoEnum Saturday
        {
            get { return _Saturday.Value; }
            set { _Saturday = value; }
        }
        public bool ShouldSerializeSaturday()
        {
            return (_Saturday.HasValue);
        }

        private SAPB1.RepeatOptionEnum? _RepeatOption;
        public SAPB1.RepeatOptionEnum RepeatOption
        {
            get { return _RepeatOption.Value; }
            set { _RepeatOption = value; }
        }
        public bool ShouldSerializeRepeatOption()
        {
            return (_RepeatOption.HasValue);
        }

        private SAPB1.RecurrenceSequenceEnum? _RecurrenceSequenceSpecifier;
        public SAPB1.RecurrenceSequenceEnum RecurrenceSequenceSpecifier
        {
            get { return _RecurrenceSequenceSpecifier.Value; }
            set { _RecurrenceSequenceSpecifier = value; }
        }
        public bool ShouldSerializeRecurrenceSequenceSpecifier()
        {
            return (_RecurrenceSequenceSpecifier.HasValue);
        }

        private int? _RecurrenceDayInMonth;
        public int RecurrenceDayInMonth
        {
            get { return _RecurrenceDayInMonth.Value; }
            set { _RecurrenceDayInMonth = value; }
        }
        public bool ShouldSerializeRecurrenceDayInMonth()
        {
            return (_RecurrenceDayInMonth.HasValue);
        }

        private int? _RecurrenceMonth;
        public int RecurrenceMonth
        {
            get { return _RecurrenceMonth.Value; }
            set { _RecurrenceMonth = value; }
        }
        public bool ShouldSerializeRecurrenceMonth()
        {
            return (_RecurrenceMonth.HasValue);
        }

        private SAPB1.RecurrenceDayOfWeekEnum? _RecurrenceDayOfWeek;
        public SAPB1.RecurrenceDayOfWeekEnum RecurrenceDayOfWeek
        {
            get { return _RecurrenceDayOfWeek.Value; }
            set { _RecurrenceDayOfWeek = value; }
        }
        public bool ShouldSerializeRecurrenceDayOfWeek()
        {
            return (_RecurrenceDayOfWeek.HasValue);
        }

        private SAPB1.EndTypeEnum? _endType;
        public SAPB1.EndTypeEnum endType
        {
            get { return _endType.Value; }
            set { _endType = value; }
        }
        public bool ShouldSerializeendType()
        {
            return (_endType.HasValue);
        }

        private int? _MaxOccurrence;
        public int MaxOccurrence
        {
            get { return _MaxOccurrence.Value; }
            set { _MaxOccurrence = value; }
        }
        public bool ShouldSerializeMaxOccurrence()
        {
            return (_MaxOccurrence.HasValue);
        }

        private DateTime? _SeriesEndDate;
        public DateTime SeriesEndDate
        {
            get { return _SeriesEndDate.Value; }
            set { _SeriesEndDate = value; }
        }
        public bool ShouldSerializeSeriesEndDate()
        {
            return (_SeriesEndDate.HasValue);
        }

    }

    public class InventoryCyclesParams
    {
        private int? _CycleCode;
        public int CycleCode
        {
            get { return _CycleCode.Value; }
            set { _CycleCode = value; }
        }
        public bool ShouldSerializeCycleCode()
        {
            return (_CycleCode.HasValue);
        }

    }

    public class WizardPaymentMethodParams
    {
        public string PaymentMethodCode { get; set; }
    }

    public class WizardPaymentMethod
    {
        public string PaymentMethodCode { get; set; }
        public string Description { get; set; }
        private SAPB1.BoPaymentTypeEnum? _Type;
        public SAPB1.BoPaymentTypeEnum Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

        private SAPB1.BoPaymentMeansEnum? _PaymentMeans;
        public SAPB1.BoPaymentMeansEnum PaymentMeans
        {
            get { return _PaymentMeans.Value; }
            set { _PaymentMeans = value; }
        }
        public bool ShouldSerializePaymentMeans()
        {
            return (_PaymentMeans.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CheckAddress;
        public SAPB1.BoYesNoEnum CheckAddress
        {
            get { return _CheckAddress.Value; }
            set { _CheckAddress = value; }
        }
        public bool ShouldSerializeCheckAddress()
        {
            return (_CheckAddress.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CheckBankDetails;
        public SAPB1.BoYesNoEnum CheckBankDetails
        {
            get { return _CheckBankDetails.Value; }
            set { _CheckBankDetails = value; }
        }
        public bool ShouldSerializeCheckBankDetails()
        {
            return (_CheckBankDetails.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CollectionAuthorizationCheck;
        public SAPB1.BoYesNoEnum CollectionAuthorizationCheck
        {
            get { return _CollectionAuthorizationCheck.Value; }
            set { _CollectionAuthorizationCheck = value; }
        }
        public bool ShouldSerializeCollectionAuthorizationCheck()
        {
            return (_CollectionAuthorizationCheck.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockForeignPayment;
        public SAPB1.BoYesNoEnum BlockForeignPayment
        {
            get { return _BlockForeignPayment.Value; }
            set { _BlockForeignPayment = value; }
        }
        public bool ShouldSerializeBlockForeignPayment()
        {
            return (_BlockForeignPayment.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockForeignBank;
        public SAPB1.BoYesNoEnum BlockForeignBank
        {
            get { return _BlockForeignBank.Value; }
            set { _BlockForeignBank = value; }
        }
        public bool ShouldSerializeBlockForeignBank()
        {
            return (_BlockForeignBank.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CurrencyRestriction;
        public SAPB1.BoYesNoEnum CurrencyRestriction
        {
            get { return _CurrencyRestriction.Value; }
            set { _CurrencyRestriction = value; }
        }
        public bool ShouldSerializeCurrencyRestriction()
        {
            return (_CurrencyRestriction.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PostOfficeBank;
        public SAPB1.BoYesNoEnum PostOfficeBank
        {
            get { return _PostOfficeBank.Value; }
            set { _PostOfficeBank = value; }
        }
        public bool ShouldSerializePostOfficeBank()
        {
            return (_PostOfficeBank.HasValue);
        }

        private decimal? _MinimumAmount;
        public decimal MinimumAmount
        {
            get { return _MinimumAmount.Value; }
            set { _MinimumAmount = value; }
        }
        public bool ShouldSerializeMinimumAmount()
        {
            return (_MinimumAmount.HasValue);
        }

        private decimal? _MaximumAmount;
        public decimal MaximumAmount
        {
            get { return _MaximumAmount.Value; }
            set { _MaximumAmount = value; }
        }
        public bool ShouldSerializeMaximumAmount()
        {
            return (_MaximumAmount.HasValue);
        }

        public string DefaultBank { get; set; }
        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        private DateTime? _CreationDate;
        public DateTime CreationDate
        {
            get { return _CreationDate.Value; }
            set { _CreationDate = value; }
        }
        public bool ShouldSerializeCreationDate()
        {
            return (_CreationDate.HasValue);
        }

        public string BankCountry { get; set; }
        public string DefaultAccount { get; set; }
        public string GLAccount { get; set; }
        public string Branch { get; set; }
        public string KeyCode { get; set; }
        public string TransactionType { get; set; }
        public string Format { get; set; }
        private SAPB1.BoYesNoEnum? _AgentCollection;
        public SAPB1.BoYesNoEnum AgentCollection
        {
            get { return _AgentCollection.Value; }
            set { _AgentCollection = value; }
        }
        public bool ShouldSerializeAgentCollection()
        {
            return (_AgentCollection.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SendforAcceptance;
        public SAPB1.BoYesNoEnum SendforAcceptance
        {
            get { return _SendforAcceptance.Value; }
            set { _SendforAcceptance = value; }
        }
        public bool ShouldSerializeSendforAcceptance()
        {
            return (_SendforAcceptance.HasValue);
        }

        private SAPB1.BoYesNoEnum? _GroupByDate;
        public SAPB1.BoYesNoEnum GroupByDate
        {
            get { return _GroupByDate.Value; }
            set { _GroupByDate = value; }
        }
        public bool ShouldSerializeGroupByDate()
        {
            return (_GroupByDate.HasValue);
        }

        public string DepositNorm { get; set; }
        private SAPB1.BoYesNoEnum? _DebitMemo;
        public SAPB1.BoYesNoEnum DebitMemo
        {
            get { return _DebitMemo.Value; }
            set { _DebitMemo = value; }
        }
        public bool ShouldSerializeDebitMemo()
        {
            return (_DebitMemo.HasValue);
        }

        private SAPB1.BoYesNoEnum? _GroupByPaymentReference;
        public SAPB1.BoYesNoEnum GroupByPaymentReference
        {
            get { return _GroupByPaymentReference.Value; }
            set { _GroupByPaymentReference = value; }
        }
        public bool ShouldSerializeGroupByPaymentReference()
        {
            return (_GroupByPaymentReference.HasValue);
        }

        private SAPB1.BoYesNoEnum? _GroupInvoicesbyPay;
        public SAPB1.BoYesNoEnum GroupInvoicesbyPay
        {
            get { return _GroupInvoicesbyPay.Value; }
            set { _GroupInvoicesbyPay = value; }
        }
        public bool ShouldSerializeGroupInvoicesbyPay()
        {
            return (_GroupInvoicesbyPay.HasValue);
        }

        private SAPB1.BoDueDateEnum? _DueDateSelection;
        public SAPB1.BoDueDateEnum DueDateSelection
        {
            get { return _DueDateSelection.Value; }
            set { _DueDateSelection = value; }
        }
        public bool ShouldSerializeDueDateSelection()
        {
            return (_DueDateSelection.HasValue);
        }

        private int? _PaymentTermsCode;
        public int PaymentTermsCode
        {
            get { return _PaymentTermsCode.Value; }
            set { _PaymentTermsCode = value; }
        }
        public bool ShouldSerializePaymentTermsCode()
        {
            return (_PaymentTermsCode.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PosttoGLInterimAccount;
        public SAPB1.BoYesNoEnum PosttoGLInterimAccount
        {
            get { return _PosttoGLInterimAccount.Value; }
            set { _PosttoGLInterimAccount = value; }
        }
        public bool ShouldSerializePosttoGLInterimAccount()
        {
            return (_PosttoGLInterimAccount.HasValue);
        }

        private int? _BankAccountKey;
        public int BankAccountKey
        {
            get { return _BankAccountKey.Value; }
            set { _BankAccountKey = value; }
        }
        public bool ShouldSerializeBankAccountKey()
        {
            return (_BankAccountKey.HasValue);
        }

        public string DocType { get; set; }
        public string Accepted { get; set; }
        public string PortfolioID { get; set; }
        public string CurCode { get; set; }
        public string Instruction1 { get; set; }
        public string Instruction2 { get; set; }
        public string PaymentPlace { get; set; }
        public string BarcodeDll { get; set; }
        private SAPB1.BoYesNoEnum? _Active;
        public SAPB1.BoYesNoEnum Active
        {
            get { return _Active.Value; }
            set { _Active = value; }
        }
        public bool ShouldSerializeActive()
        {
            return (_Active.HasValue);
        }

        private SAPB1.BoYesNoEnum? _GroupInvoicesByPayToBank;
        public SAPB1.BoYesNoEnum GroupInvoicesByPayToBank
        {
            get { return _GroupInvoicesByPayToBank.Value; }
            set { _GroupInvoicesByPayToBank = value; }
        }
        public bool ShouldSerializeGroupInvoicesByPayToBank()
        {
            return (_GroupInvoicesByPayToBank.HasValue);
        }

        private SAPB1.BoYesNoEnum? _GroupInvoicesByCurrency;
        public SAPB1.BoYesNoEnum GroupInvoicesByCurrency
        {
            get { return _GroupInvoicesByCurrency.Value; }
            set { _GroupInvoicesByCurrency = value; }
        }
        public bool ShouldSerializeGroupInvoicesByCurrency()
        {
            return (_GroupInvoicesByCurrency.HasValue);
        }

        private decimal? _BankChargeRate;
        public decimal BankChargeRate
        {
            get { return _BankChargeRate.Value; }
            set { _BankChargeRate = value; }
        }
        public bool ShouldSerializeBankChargeRate()
        {
            return (_BankChargeRate.HasValue);
        }

        public string ReportCode { get; set; }
        public string CancelInstruction { get; set; }
        public string OccurenceCode { get; set; }
        public string MovementCode { get; set; }
        public string DirectDebit { get; set; }
        public System.Collections.Generic.List<SAPB1.CurrencyRestriction> CurrencyRestrictions { get; set; }
    }

    public class CurrencyRestriction
    {
        public string PaymentMethodCode { get; set; }
        public string CurrencyCode { get; set; }
        public string CurrencyName { get; set; }
        private SAPB1.BoYesNoEnum? _Choose;
        public SAPB1.BoYesNoEnum Choose
        {
            get { return _Choose.Value; }
            set { _Choose = value; }
        }
        public bool ShouldSerializeChoose()
        {
            return (_Choose.HasValue);
        }

    }

    public class InventoryCounting
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private int? _DocumentNumber;
        public int DocumentNumber
        {
            get { return _DocumentNumber.Value; }
            set { _DocumentNumber = value; }
        }
        public bool ShouldSerializeDocumentNumber()
        {
            return (_DocumentNumber.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private DateTime? _CountDate;
        public DateTime CountDate
        {
            get { return _CountDate.Value; }
            set { _CountDate = value; }
        }
        public bool ShouldSerializeCountDate()
        {
            return (_CountDate.HasValue);
        }

        private TimeSpan? _CountTime;
        public TimeSpan CountTime
        {
            get { return _CountTime.Value; }
            set { _CountTime = value; }
        }
        public bool ShouldSerializeCountTime()
        {
            return (_CountTime.HasValue);
        }

        private SAPB1.CounterTypeEnum? _SingleCounterType;
        public SAPB1.CounterTypeEnum SingleCounterType
        {
            get { return _SingleCounterType.Value; }
            set { _SingleCounterType = value; }
        }
        public bool ShouldSerializeSingleCounterType()
        {
            return (_SingleCounterType.HasValue);
        }

        private int? _SingleCounterID;
        public int SingleCounterID
        {
            get { return _SingleCounterID.Value; }
            set { _SingleCounterID = value; }
        }
        public bool ShouldSerializeSingleCounterID()
        {
            return (_SingleCounterID.HasValue);
        }

        private SAPB1.CountingDocumentStatusEnum? _DocumentStatus;
        public SAPB1.CountingDocumentStatusEnum DocumentStatus
        {
            get { return _DocumentStatus.Value; }
            set { _DocumentStatus = value; }
        }
        public bool ShouldSerializeDocumentStatus()
        {
            return (_DocumentStatus.HasValue);
        }

        public string Remarks { get; set; }
        public string Reference2 { get; set; }
        private int? _BranchID;
        public int BranchID
        {
            get { return _BranchID.Value; }
            set { _BranchID = value; }
        }
        public bool ShouldSerializeBranchID()
        {
            return (_BranchID.HasValue);
        }

        public string DocObjectCodeEx { get; set; }
        private int? _FinancialPeriod;
        public int FinancialPeriod
        {
            get { return _FinancialPeriod.Value; }
            set { _FinancialPeriod = value; }
        }
        public bool ShouldSerializeFinancialPeriod()
        {
            return (_FinancialPeriod.HasValue);
        }

        public string PeriodIndicator { get; set; }
        private SAPB1.CountingTypeEnum? _CountingType;
        public SAPB1.CountingTypeEnum CountingType
        {
            get { return _CountingType.Value; }
            set { _CountingType = value; }
        }
        public bool ShouldSerializeCountingType()
        {
            return (_CountingType.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.TeamCounter> TeamCounters { get; set; }
        public System.Collections.Generic.List<SAPB1.IndividualCounter> IndividualCounters { get; set; }
        public System.Collections.Generic.List<SAPB1.InventoryCountingLine> InventoryCountingLines { get; set; }
    }

    public class TeamCounter
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private int? _CounterID;
        public int CounterID
        {
            get { return _CounterID.Value; }
            set { _CounterID = value; }
        }
        public bool ShouldSerializeCounterID()
        {
            return (_CounterID.HasValue);
        }

        private SAPB1.CounterTypeEnum? _CounterType;
        public SAPB1.CounterTypeEnum CounterType
        {
            get { return _CounterType.Value; }
            set { _CounterType = value; }
        }
        public bool ShouldSerializeCounterType()
        {
            return (_CounterType.HasValue);
        }

        public string CounterName { get; set; }
        private int? _CounterNumber;
        public int CounterNumber
        {
            get { return _CounterNumber.Value; }
            set { _CounterNumber = value; }
        }
        public bool ShouldSerializeCounterNumber()
        {
            return (_CounterNumber.HasValue);
        }

        private int? _CounterVisualOrder;
        public int CounterVisualOrder
        {
            get { return _CounterVisualOrder.Value; }
            set { _CounterVisualOrder = value; }
        }
        public bool ShouldSerializeCounterVisualOrder()
        {
            return (_CounterVisualOrder.HasValue);
        }

    }

    public class IndividualCounter
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private int? _CounterID;
        public int CounterID
        {
            get { return _CounterID.Value; }
            set { _CounterID = value; }
        }
        public bool ShouldSerializeCounterID()
        {
            return (_CounterID.HasValue);
        }

        private SAPB1.CounterTypeEnum? _CounterType;
        public SAPB1.CounterTypeEnum CounterType
        {
            get { return _CounterType.Value; }
            set { _CounterType = value; }
        }
        public bool ShouldSerializeCounterType()
        {
            return (_CounterType.HasValue);
        }

        public string CounterName { get; set; }
        private int? _CounterNumber;
        public int CounterNumber
        {
            get { return _CounterNumber.Value; }
            set { _CounterNumber = value; }
        }
        public bool ShouldSerializeCounterNumber()
        {
            return (_CounterNumber.HasValue);
        }

        private int? _CounterVisualOrder;
        public int CounterVisualOrder
        {
            get { return _CounterVisualOrder.Value; }
            set { _CounterVisualOrder = value; }
        }
        public bool ShouldSerializeCounterVisualOrder()
        {
            return (_CounterVisualOrder.HasValue);
        }

    }

    public class InventoryCountingLine
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        public string ItemCode { get; set; }
        public string ItemDescription { get; set; }
        private SAPB1.BoYesNoEnum? _Freeze;
        public SAPB1.BoYesNoEnum Freeze
        {
            get { return _Freeze.Value; }
            set { _Freeze = value; }
        }
        public bool ShouldSerializeFreeze()
        {
            return (_Freeze.HasValue);
        }

        public string WarehouseCode { get; set; }
        private int? _BinEntry;
        public int BinEntry
        {
            get { return _BinEntry.Value; }
            set { _BinEntry = value; }
        }
        public bool ShouldSerializeBinEntry()
        {
            return (_BinEntry.HasValue);
        }

        private decimal? _InWarehouseQuantity;
        public decimal InWarehouseQuantity
        {
            get { return _InWarehouseQuantity.Value; }
            set { _InWarehouseQuantity = value; }
        }
        public bool ShouldSerializeInWarehouseQuantity()
        {
            return (_InWarehouseQuantity.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Counted;
        public SAPB1.BoYesNoEnum Counted
        {
            get { return _Counted.Value; }
            set { _Counted = value; }
        }
        public bool ShouldSerializeCounted()
        {
            return (_Counted.HasValue);
        }

        public string UoMCode { get; set; }
        public string BarCode { get; set; }
        private decimal? _UoMCountedQuantity;
        public decimal UoMCountedQuantity
        {
            get { return _UoMCountedQuantity.Value; }
            set { _UoMCountedQuantity = value; }
        }
        public bool ShouldSerializeUoMCountedQuantity()
        {
            return (_UoMCountedQuantity.HasValue);
        }

        private decimal? _ItemsPerUnit;
        public decimal ItemsPerUnit
        {
            get { return _ItemsPerUnit.Value; }
            set { _ItemsPerUnit = value; }
        }
        public bool ShouldSerializeItemsPerUnit()
        {
            return (_ItemsPerUnit.HasValue);
        }

        private decimal? _CountedQuantity;
        public decimal CountedQuantity
        {
            get { return _CountedQuantity.Value; }
            set { _CountedQuantity = value; }
        }
        public bool ShouldSerializeCountedQuantity()
        {
            return (_CountedQuantity.HasValue);
        }

        private decimal? _Variance;
        public decimal Variance
        {
            get { return _Variance.Value; }
            set { _Variance = value; }
        }
        public bool ShouldSerializeVariance()
        {
            return (_Variance.HasValue);
        }

        private decimal? _VariancePercentage;
        public decimal VariancePercentage
        {
            get { return _VariancePercentage.Value; }
            set { _VariancePercentage = value; }
        }
        public bool ShouldSerializeVariancePercentage()
        {
            return (_VariancePercentage.HasValue);
        }

        private int? _VisualOrder;
        public int VisualOrder
        {
            get { return _VisualOrder.Value; }
            set { _VisualOrder = value; }
        }
        public bool ShouldSerializeVisualOrder()
        {
            return (_VisualOrder.HasValue);
        }

        private int? _TargetEntry;
        public int TargetEntry
        {
            get { return _TargetEntry.Value; }
            set { _TargetEntry = value; }
        }
        public bool ShouldSerializeTargetEntry()
        {
            return (_TargetEntry.HasValue);
        }

        private int? _TargetLine;
        public int TargetLine
        {
            get { return _TargetLine.Value; }
            set { _TargetLine = value; }
        }
        public bool ShouldSerializeTargetLine()
        {
            return (_TargetLine.HasValue);
        }

        private int? _TargetType;
        public int TargetType
        {
            get { return _TargetType.Value; }
            set { _TargetType = value; }
        }
        public bool ShouldSerializeTargetType()
        {
            return (_TargetType.HasValue);
        }

        public string TargetReference { get; set; }
        public string ProjectCode { get; set; }
        private int? _Manufacturer;
        public int Manufacturer
        {
            get { return _Manufacturer.Value; }
            set { _Manufacturer = value; }
        }
        public bool ShouldSerializeManufacturer()
        {
            return (_Manufacturer.HasValue);
        }

        public string SupplierCatalogNo { get; set; }
        public string PreferredVendor { get; set; }
        public string CostingCode { get; set; }
        public string CostingCode2 { get; set; }
        public string CostingCode3 { get; set; }
        public string CostingCode4 { get; set; }
        public string CostingCode5 { get; set; }
        public string Remarks { get; set; }
        private SAPB1.CountingLineStatusEnum? _LineStatus;
        public SAPB1.CountingLineStatusEnum LineStatus
        {
            get { return _LineStatus.Value; }
            set { _LineStatus = value; }
        }
        public bool ShouldSerializeLineStatus()
        {
            return (_LineStatus.HasValue);
        }

        private SAPB1.CounterTypeEnum? _CounterType;
        public SAPB1.CounterTypeEnum CounterType
        {
            get { return _CounterType.Value; }
            set { _CounterType = value; }
        }
        public bool ShouldSerializeCounterType()
        {
            return (_CounterType.HasValue);
        }

        private int? _CounterID;
        public int CounterID
        {
            get { return _CounterID.Value; }
            set { _CounterID = value; }
        }
        public bool ShouldSerializeCounterID()
        {
            return (_CounterID.HasValue);
        }

        private SAPB1.MultipleCounterRoleEnum? _MultipleCounterRole;
        public SAPB1.MultipleCounterRoleEnum MultipleCounterRole
        {
            get { return _MultipleCounterRole.Value; }
            set { _MultipleCounterRole = value; }
        }
        public bool ShouldSerializeMultipleCounterRole()
        {
            return (_MultipleCounterRole.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.InventoryCountingLineUoM> InventoryCountingLineUoMs { get; set; }
        public System.Collections.Generic.List<SAPB1.InventoryCountingSerialNumber> InventoryCountingSerialNumbers { get; set; }
        public System.Collections.Generic.List<SAPB1.InventoryCountingBatchNumber> InventoryCountingBatchNumbers { get; set; }
    }

    public class InventoryCountingLineUoM
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        private int? _ChildNumber;
        public int ChildNumber
        {
            get { return _ChildNumber.Value; }
            set { _ChildNumber = value; }
        }
        public bool ShouldSerializeChildNumber()
        {
            return (_ChildNumber.HasValue);
        }

        private decimal? _UoMCountedQuantity;
        public decimal UoMCountedQuantity
        {
            get { return _UoMCountedQuantity.Value; }
            set { _UoMCountedQuantity = value; }
        }
        public bool ShouldSerializeUoMCountedQuantity()
        {
            return (_UoMCountedQuantity.HasValue);
        }

        private decimal? _ItemsPerUnit;
        public decimal ItemsPerUnit
        {
            get { return _ItemsPerUnit.Value; }
            set { _ItemsPerUnit = value; }
        }
        public bool ShouldSerializeItemsPerUnit()
        {
            return (_ItemsPerUnit.HasValue);
        }

        private decimal? _CountedQuantity;
        public decimal CountedQuantity
        {
            get { return _CountedQuantity.Value; }
            set { _CountedQuantity = value; }
        }
        public bool ShouldSerializeCountedQuantity()
        {
            return (_CountedQuantity.HasValue);
        }

        public string UoMCode { get; set; }
        public string BarCode { get; set; }
        private SAPB1.CounterTypeEnum? _CounterType;
        public SAPB1.CounterTypeEnum CounterType
        {
            get { return _CounterType.Value; }
            set { _CounterType = value; }
        }
        public bool ShouldSerializeCounterType()
        {
            return (_CounterType.HasValue);
        }

        private int? _CounterID;
        public int CounterID
        {
            get { return _CounterID.Value; }
            set { _CounterID = value; }
        }
        public bool ShouldSerializeCounterID()
        {
            return (_CounterID.HasValue);
        }

        private SAPB1.MultipleCounterRoleEnum? _MultipleCounterRole;
        public SAPB1.MultipleCounterRoleEnum MultipleCounterRole
        {
            get { return _MultipleCounterRole.Value; }
            set { _MultipleCounterRole = value; }
        }
        public bool ShouldSerializeMultipleCounterRole()
        {
            return (_MultipleCounterRole.HasValue);
        }

    }

    public class InventoryCountingSerialNumber
    {
        public string ManufacturerSerialNumber { get; set; }
        public string InternalSerialNumber { get; set; }
        private DateTime? _ExpiryDate;
        public DateTime ExpiryDate
        {
            get { return _ExpiryDate.Value; }
            set { _ExpiryDate = value; }
        }
        public bool ShouldSerializeExpiryDate()
        {
            return (_ExpiryDate.HasValue);
        }

        private DateTime? _ManufactureDate;
        public DateTime ManufactureDate
        {
            get { return _ManufactureDate.Value; }
            set { _ManufactureDate = value; }
        }
        public bool ShouldSerializeManufactureDate()
        {
            return (_ManufactureDate.HasValue);
        }

        private DateTime? _ReceptionDate;
        public DateTime ReceptionDate
        {
            get { return _ReceptionDate.Value; }
            set { _ReceptionDate = value; }
        }
        public bool ShouldSerializeReceptionDate()
        {
            return (_ReceptionDate.HasValue);
        }

        private DateTime? _WarrantyStart;
        public DateTime WarrantyStart
        {
            get { return _WarrantyStart.Value; }
            set { _WarrantyStart = value; }
        }
        public bool ShouldSerializeWarrantyStart()
        {
            return (_WarrantyStart.HasValue);
        }

        private DateTime? _WarrantyEnd;
        public DateTime WarrantyEnd
        {
            get { return _WarrantyEnd.Value; }
            set { _WarrantyEnd = value; }
        }
        public bool ShouldSerializeWarrantyEnd()
        {
            return (_WarrantyEnd.HasValue);
        }

        public string Location { get; set; }
        public string Notes { get; set; }
        public string BatchID { get; set; }
        private int? _SystemSerialNumber;
        public int SystemSerialNumber
        {
            get { return _SystemSerialNumber.Value; }
            set { _SystemSerialNumber = value; }
        }
        public bool ShouldSerializeSystemSerialNumber()
        {
            return (_SystemSerialNumber.HasValue);
        }

        private int? _BaseLineNumber;
        public int BaseLineNumber
        {
            get { return _BaseLineNumber.Value; }
            set { _BaseLineNumber = value; }
        }
        public bool ShouldSerializeBaseLineNumber()
        {
            return (_BaseLineNumber.HasValue);
        }

        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private SAPB1.CounterTypeEnum? _CounterType;
        public SAPB1.CounterTypeEnum CounterType
        {
            get { return _CounterType.Value; }
            set { _CounterType = value; }
        }
        public bool ShouldSerializeCounterType()
        {
            return (_CounterType.HasValue);
        }

        private int? _CounterID;
        public int CounterID
        {
            get { return _CounterID.Value; }
            set { _CounterID = value; }
        }
        public bool ShouldSerializeCounterID()
        {
            return (_CounterID.HasValue);
        }

        private SAPB1.MultipleCounterRoleEnum? _MultipleCounterRole;
        public SAPB1.MultipleCounterRoleEnum MultipleCounterRole
        {
            get { return _MultipleCounterRole.Value; }
            set { _MultipleCounterRole = value; }
        }
        public bool ShouldSerializeMultipleCounterRole()
        {
            return (_MultipleCounterRole.HasValue);
        }

        private int? _TrackingNote;
        public int TrackingNote
        {
            get { return _TrackingNote.Value; }
            set { _TrackingNote = value; }
        }
        public bool ShouldSerializeTrackingNote()
        {
            return (_TrackingNote.HasValue);
        }

        private int? _TrackingNoteLine;
        public int TrackingNoteLine
        {
            get { return _TrackingNoteLine.Value; }
            set { _TrackingNoteLine = value; }
        }
        public bool ShouldSerializeTrackingNoteLine()
        {
            return (_TrackingNoteLine.HasValue);
        }

    }

    public class InventoryCountingBatchNumber
    {
        public string BatchNumber { get; set; }
        public string ManufacturerSerialNumber { get; set; }
        public string InternalSerialNumber { get; set; }
        private DateTime? _ExpiryDate;
        public DateTime ExpiryDate
        {
            get { return _ExpiryDate.Value; }
            set { _ExpiryDate = value; }
        }
        public bool ShouldSerializeExpiryDate()
        {
            return (_ExpiryDate.HasValue);
        }

        private DateTime? _ManufactureDate;
        public DateTime ManufactureDate
        {
            get { return _ManufactureDate.Value; }
            set { _ManufactureDate = value; }
        }
        public bool ShouldSerializeManufactureDate()
        {
            return (_ManufactureDate.HasValue);
        }

        private DateTime? _AddmisionDate;
        public DateTime AddmisionDate
        {
            get { return _AddmisionDate.Value; }
            set { _AddmisionDate = value; }
        }
        public bool ShouldSerializeAddmisionDate()
        {
            return (_AddmisionDate.HasValue);
        }

        public string Location { get; set; }
        public string Notes { get; set; }
        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private int? _BaseLineNumber;
        public int BaseLineNumber
        {
            get { return _BaseLineNumber.Value; }
            set { _BaseLineNumber = value; }
        }
        public bool ShouldSerializeBaseLineNumber()
        {
            return (_BaseLineNumber.HasValue);
        }

        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private SAPB1.CounterTypeEnum? _CounterType;
        public SAPB1.CounterTypeEnum CounterType
        {
            get { return _CounterType.Value; }
            set { _CounterType = value; }
        }
        public bool ShouldSerializeCounterType()
        {
            return (_CounterType.HasValue);
        }

        private int? _CounterID;
        public int CounterID
        {
            get { return _CounterID.Value; }
            set { _CounterID = value; }
        }
        public bool ShouldSerializeCounterID()
        {
            return (_CounterID.HasValue);
        }

        private SAPB1.MultipleCounterRoleEnum? _MultipleCounterRole;
        public SAPB1.MultipleCounterRoleEnum MultipleCounterRole
        {
            get { return _MultipleCounterRole.Value; }
            set { _MultipleCounterRole = value; }
        }
        public bool ShouldSerializeMultipleCounterRole()
        {
            return (_MultipleCounterRole.HasValue);
        }

        private int? _TrackingNote;
        public int TrackingNote
        {
            get { return _TrackingNote.Value; }
            set { _TrackingNote = value; }
        }
        public bool ShouldSerializeTrackingNote()
        {
            return (_TrackingNote.HasValue);
        }

        private int? _TrackingNoteLine;
        public int TrackingNoteLine
        {
            get { return _TrackingNoteLine.Value; }
            set { _TrackingNoteLine = value; }
        }
        public bool ShouldSerializeTrackingNoteLine()
        {
            return (_TrackingNoteLine.HasValue);
        }

    }

    public class InventoryCountingParams
    {
        private int? _DocumentEntry;
        public int DocumentEntry
        {
            get { return _DocumentEntry.Value; }
            set { _DocumentEntry = value; }
        }
        public bool ShouldSerializeDocumentEntry()
        {
            return (_DocumentEntry.HasValue);
        }

        private int? _DocumentNumber;
        public int DocumentNumber
        {
            get { return _DocumentNumber.Value; }
            set { _DocumentNumber = value; }
        }
        public bool ShouldSerializeDocumentNumber()
        {
            return (_DocumentNumber.HasValue);
        }

    }

    public class EnhancedDiscountGroup
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        private SAPB1.DiscountGroupTypeEnum? _Type;
        public SAPB1.DiscountGroupTypeEnum Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

        public string ObjectCode { get; set; }
        private SAPB1.DiscountGroupRelationsEnum? _DiscountRelations;
        public SAPB1.DiscountGroupRelationsEnum DiscountRelations
        {
            get { return _DiscountRelations.Value; }
            set { _DiscountRelations = value; }
        }
        public bool ShouldSerializeDiscountRelations()
        {
            return (_DiscountRelations.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Active;
        public SAPB1.BoYesNoEnum Active
        {
            get { return _Active.Value; }
            set { _Active = value; }
        }
        public bool ShouldSerializeActive()
        {
            return (_Active.HasValue);
        }

        private DateTime? _ValidFrom;
        public DateTime ValidFrom
        {
            get { return _ValidFrom.Value; }
            set { _ValidFrom = value; }
        }
        public bool ShouldSerializeValidFrom()
        {
            return (_ValidFrom.HasValue);
        }

        private DateTime? _ValidTo;
        public DateTime ValidTo
        {
            get { return _ValidTo.Value; }
            set { _ValidTo = value; }
        }
        public bool ShouldSerializeValidTo()
        {
            return (_ValidTo.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.DiscountGroupLine> DiscountGroupLineCollection { get; set; }
    }

    public class DiscountGroupLine
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        private SAPB1.DiscountGroupBaseObjectEnum? _ObjectType;
        public SAPB1.DiscountGroupBaseObjectEnum ObjectType
        {
            get { return _ObjectType.Value; }
            set { _ObjectType = value; }
        }
        public bool ShouldSerializeObjectType()
        {
            return (_ObjectType.HasValue);
        }

        public string ObjectCode { get; set; }
        private SAPB1.DiscountGroupDiscountTypeEnum? _DiscountType;
        public SAPB1.DiscountGroupDiscountTypeEnum DiscountType
        {
            get { return _DiscountType.Value; }
            set { _DiscountType = value; }
        }
        public bool ShouldSerializeDiscountType()
        {
            return (_DiscountType.HasValue);
        }

        private decimal? _Discount;
        public decimal Discount
        {
            get { return _Discount.Value; }
            set { _Discount = value; }
        }
        public bool ShouldSerializeDiscount()
        {
            return (_Discount.HasValue);
        }

        private decimal? _PaidQuantity;
        public decimal PaidQuantity
        {
            get { return _PaidQuantity.Value; }
            set { _PaidQuantity = value; }
        }
        public bool ShouldSerializePaidQuantity()
        {
            return (_PaidQuantity.HasValue);
        }

        private decimal? _FreeQuantity;
        public decimal FreeQuantity
        {
            get { return _FreeQuantity.Value; }
            set { _FreeQuantity = value; }
        }
        public bool ShouldSerializeFreeQuantity()
        {
            return (_FreeQuantity.HasValue);
        }

        private decimal? _MaximumFreeQuantity;
        public decimal MaximumFreeQuantity
        {
            get { return _MaximumFreeQuantity.Value; }
            set { _MaximumFreeQuantity = value; }
        }
        public bool ShouldSerializeMaximumFreeQuantity()
        {
            return (_MaximumFreeQuantity.HasValue);
        }

    }

    public class EnhancedDiscountGroupParams
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        private SAPB1.DiscountGroupTypeEnum? _Type;
        public SAPB1.DiscountGroupTypeEnum Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

        public string ObjectCode { get; set; }
    }

    public class BPPriority
    {
        private int? _Priority;
        public int Priority
        {
            get { return _Priority.Value; }
            set { _Priority = value; }
        }
        public bool ShouldSerializePriority()
        {
            return (_Priority.HasValue);
        }

        public string PriorityDescription { get; set; }
    }

    public class DunningLetter
    {
        public string FeeCurrency { get; set; }
        private int? _RowNumber;
        public int RowNumber
        {
            get { return _RowNumber.Value; }
            set { _RowNumber = value; }
        }
        public bool ShouldSerializeRowNumber()
        {
            return (_RowNumber.HasValue);
        }

        public string LetterFormat { get; set; }
        public string Effectiveafter { get; set; }
        public string MinimumBalanceCurrency { get; set; }
        private decimal? _Feeperletter;
        public decimal Feeperletter
        {
            get { return _Feeperletter.Value; }
            set { _Feeperletter = value; }
        }
        public bool ShouldSerializeFeeperletter()
        {
            return (_Feeperletter.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CalcInterest;
        public SAPB1.BoYesNoEnum CalcInterest
        {
            get { return _CalcInterest.Value; }
            set { _CalcInterest = value; }
        }
        public bool ShouldSerializeCalcInterest()
        {
            return (_CalcInterest.HasValue);
        }

        private decimal? _MinimumBalance;
        public decimal MinimumBalance
        {
            get { return _MinimumBalance.Value; }
            set { _MinimumBalance = value; }
        }
        public bool ShouldSerializeMinimumBalance()
        {
            return (_MinimumBalance.HasValue);
        }

    }

    public class UserFieldMD
    {
        public string Name { get; set; }
        private SAPB1.BoFieldTypes? _Type;
        public SAPB1.BoFieldTypes Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

        private int? _Size;
        public int Size
        {
            get { return _Size.Value; }
            set { _Size = value; }
        }
        public bool ShouldSerializeSize()
        {
            return (_Size.HasValue);
        }

        public string Description { get; set; }
        private SAPB1.BoFldSubTypes? _SubType;
        public SAPB1.BoFldSubTypes SubType
        {
            get { return _SubType.Value; }
            set { _SubType = value; }
        }
        public bool ShouldSerializeSubType()
        {
            return (_SubType.HasValue);
        }

        public string LinkedTable { get; set; }
        public string DefaultValue { get; set; }
        public string TableName { get; set; }
        private int? _FieldID;
        public int FieldID
        {
            get { return _FieldID.Value; }
            set { _FieldID = value; }
        }
        public bool ShouldSerializeFieldID()
        {
            return (_FieldID.HasValue);
        }

        private int? _EditSize;
        public int EditSize
        {
            get { return _EditSize.Value; }
            set { _EditSize = value; }
        }
        public bool ShouldSerializeEditSize()
        {
            return (_EditSize.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Mandatory;
        public SAPB1.BoYesNoEnum Mandatory
        {
            get { return _Mandatory.Value; }
            set { _Mandatory = value; }
        }
        public bool ShouldSerializeMandatory()
        {
            return (_Mandatory.HasValue);
        }

        public string LinkedUDO { get; set; }
        private SAPB1.BoObjectTypes? _LinkedSystemObject;
        public SAPB1.BoObjectTypes LinkedSystemObject
        {
            get { return _LinkedSystemObject.Value; }
            set { _LinkedSystemObject = value; }
        }
        public bool ShouldSerializeLinkedSystemObject()
        {
            return (_LinkedSystemObject.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ValidValueMD> ValidValuesMD { get; set; }
    }

    public class UserFieldMDKey
    {
        public string TableName { get; set; }
        private int? _FieldID;
        public int FieldID
        {
            get { return _FieldID.Value; }
            set { _FieldID = value; }
        }
        public bool ShouldSerializeFieldID()
        {
            return (_FieldID.HasValue);
        }

    }

    public class ValidValueMD
    {
        public string Value { get; set; }
        public string Description { get; set; }
    }

    public class UserFieldMDParams
    {
        public string TableName { get; set; }
        private int? _FieldID;
        public int FieldID
        {
            get { return _FieldID.Value; }
            set { _FieldID = value; }
        }
        public bool ShouldSerializeFieldID()
        {
            return (_FieldID.HasValue);
        }

    }

    public class UserTablesMD
    {
        public string TableName { get; set; }
        public string TableDescription { get; set; }
        private SAPB1.BoUTBTableType? _TableType;
        public SAPB1.BoUTBTableType TableType
        {
            get { return _TableType.Value; }
            set { _TableType = value; }
        }
        public bool ShouldSerializeTableType()
        {
            return (_TableType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Archivable;
        public SAPB1.BoYesNoEnum Archivable
        {
            get { return _Archivable.Value; }
            set { _Archivable = value; }
        }
        public bool ShouldSerializeArchivable()
        {
            return (_Archivable.HasValue);
        }

        public string ArchiveDateField { get; set; }
    }

    public class PickListParams
    {
        private int? _Absoluteentry;
        public int Absoluteentry
        {
            get { return _Absoluteentry.Value; }
            set { _Absoluteentry = value; }
        }
        public bool ShouldSerializeAbsoluteentry()
        {
            return (_Absoluteentry.HasValue);
        }

    }

    public class PickList
    {
        private int? _Absoluteentry;
        public int Absoluteentry
        {
            get { return _Absoluteentry.Value; }
            set { _Absoluteentry = value; }
        }
        public bool ShouldSerializeAbsoluteentry()
        {
            return (_Absoluteentry.HasValue);
        }

        public string Name { get; set; }
        private int? _OwnerCode;
        public int OwnerCode
        {
            get { return _OwnerCode.Value; }
            set { _OwnerCode = value; }
        }
        public bool ShouldSerializeOwnerCode()
        {
            return (_OwnerCode.HasValue);
        }

        public string OwnerName { get; set; }
        private DateTime? _PickDate;
        public DateTime PickDate
        {
            get { return _PickDate.Value; }
            set { _PickDate = value; }
        }
        public bool ShouldSerializePickDate()
        {
            return (_PickDate.HasValue);
        }

        public string Remarks { get; set; }
        private SAPB1.BoPickStatus? _Status;
        public SAPB1.BoPickStatus Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        public string ObjectType { get; set; }
        private SAPB1.BoYesNoEnum? _UseBaseUnits;
        public SAPB1.BoYesNoEnum UseBaseUnits
        {
            get { return _UseBaseUnits.Value; }
            set { _UseBaseUnits = value; }
        }
        public bool ShouldSerializeUseBaseUnits()
        {
            return (_UseBaseUnits.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.PickListsLine> PickListsLines { get; set; }
    }

    public class PickListsLine
    {
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        private int? _OrderEntry;
        public int OrderEntry
        {
            get { return _OrderEntry.Value; }
            set { _OrderEntry = value; }
        }
        public bool ShouldSerializeOrderEntry()
        {
            return (_OrderEntry.HasValue);
        }

        private int? _OrderRowID;
        public int OrderRowID
        {
            get { return _OrderRowID.Value; }
            set { _OrderRowID = value; }
        }
        public bool ShouldSerializeOrderRowID()
        {
            return (_OrderRowID.HasValue);
        }

        private decimal? _PickedQuantity;
        public decimal PickedQuantity
        {
            get { return _PickedQuantity.Value; }
            set { _PickedQuantity = value; }
        }
        public bool ShouldSerializePickedQuantity()
        {
            return (_PickedQuantity.HasValue);
        }

        private SAPB1.BoPickStatus? _PickStatus;
        public SAPB1.BoPickStatus PickStatus
        {
            get { return _PickStatus.Value; }
            set { _PickStatus = value; }
        }
        public bool ShouldSerializePickStatus()
        {
            return (_PickStatus.HasValue);
        }

        private decimal? _ReleasedQuantity;
        public decimal ReleasedQuantity
        {
            get { return _ReleasedQuantity.Value; }
            set { _ReleasedQuantity = value; }
        }
        public bool ShouldSerializeReleasedQuantity()
        {
            return (_ReleasedQuantity.HasValue);
        }

        private decimal? _PreviouslyReleasedQuantity;
        public decimal PreviouslyReleasedQuantity
        {
            get { return _PreviouslyReleasedQuantity.Value; }
            set { _PreviouslyReleasedQuantity = value; }
        }
        public bool ShouldSerializePreviouslyReleasedQuantity()
        {
            return (_PreviouslyReleasedQuantity.HasValue);
        }

        private int? _BaseObjectType;
        public int BaseObjectType
        {
            get { return _BaseObjectType.Value; }
            set { _BaseObjectType = value; }
        }
        public bool ShouldSerializeBaseObjectType()
        {
            return (_BaseObjectType.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.SerialNumber> SerialNumbers { get; set; }
        public System.Collections.Generic.List<SAPB1.BatchNumber> BatchNumbers { get; set; }
        public System.Collections.Generic.List<SAPB1.DocumentLinesBinAllocation> DocumentLinesBinAllocations { get; set; }
    }

    public class PaymentRunExport
    {
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

        private DateTime? _RunDate;
        public DateTime RunDate
        {
            get { return _RunDate.Value; }
            set { _RunDate = value; }
        }
        public bool ShouldSerializeRunDate()
        {
            return (_RunDate.HasValue);
        }

        public string VendorNum { get; set; }
        public string CustomerNum { get; set; }
        public string PaymentMethod { get; set; }
        private int? _DocNum;
        public int DocNum
        {
            get { return _DocNum.Value; }
            set { _DocNum = value; }
        }
        public bool ShouldSerializeDocNum()
        {
            return (_DocNum.HasValue);
        }

        private DateTime? _FiscalYear;
        public DateTime FiscalYear
        {
            get { return _FiscalYear.Value; }
            set { _FiscalYear = value; }
        }
        public bool ShouldSerializeFiscalYear()
        {
            return (_FiscalYear.HasValue);
        }

        public string Countery { get; set; }
        public string CompanyTaxNum { get; set; }
        public string PayeeName { get; set; }
        public string PayeePostalCode { get; set; }
        public string PayeeCity { get; set; }
        public string PayeeStreet { get; set; }
        public string PayeeCountry { get; set; }
        public string PayeeState { get; set; }
        public string PayeeBankName { get; set; }
        public string PayeeBankZip { get; set; }
        public string PayeeBankCity { get; set; }
        public string PayeeBankStreet { get; set; }
        public string PayeeBankCountry { get; set; }
        public string PayeeBankAccount { get; set; }
        public string PayeeBankCode { get; set; }
        public string PayeeBankCtrlKey { get; set; }
        public string PayeeBankSwiftNum { get; set; }
        public string PayeeBankIBAN { get; set; }
        private DateTime? _PostingDate;
        public DateTime PostingDate
        {
            get { return _PostingDate.Value; }
            set { _PostingDate = value; }
        }
        public bool ShouldSerializePostingDate()
        {
            return (_PostingDate.HasValue);
        }

        public string BankAccount { get; set; }
        public string BankCountry { get; set; }
        public string BankCode { get; set; }
        public string BankIBAN { get; set; }
        public string GLAccount { get; set; }
        public string Currency { get; set; }
        private decimal? _DocAmountLocal;
        public decimal DocAmountLocal
        {
            get { return _DocAmountLocal.Value; }
            set { _DocAmountLocal = value; }
        }
        public bool ShouldSerializeDocAmountLocal()
        {
            return (_DocAmountLocal.HasValue);
        }

        public string DocCurrnecy { get; set; }
        private decimal? _DocAmountForign;
        public decimal DocAmountForign
        {
            get { return _DocAmountForign.Value; }
            set { _DocAmountForign = value; }
        }
        public bool ShouldSerializeDocAmountForign()
        {
            return (_DocAmountForign.HasValue);
        }

        private decimal? _DocCashDiscount;
        public decimal DocCashDiscount
        {
            get { return _DocCashDiscount.Value; }
            set { _DocCashDiscount = value; }
        }
        public bool ShouldSerializeDocCashDiscount()
        {
            return (_DocCashDiscount.HasValue);
        }

        private decimal? _DocCashDiscountForign;
        public decimal DocCashDiscountForign
        {
            get { return _DocCashDiscountForign.Value; }
            set { _DocCashDiscountForign = value; }
        }
        public bool ShouldSerializeDocCashDiscountForign()
        {
            return (_DocCashDiscountForign.HasValue);
        }

        private int? _DocNumOffieldPaid;
        public int DocNumOffieldPaid
        {
            get { return _DocNumOffieldPaid.Value; }
            set { _DocNumOffieldPaid = value; }
        }
        public bool ShouldSerializeDocNumOffieldPaid()
        {
            return (_DocNumOffieldPaid.HasValue);
        }

        private decimal? _DocRate;
        public decimal DocRate
        {
            get { return _DocRate.Value; }
            set { _DocRate = value; }
        }
        public bool ShouldSerializeDocRate()
        {
            return (_DocRate.HasValue);
        }

        private int? _WizCode;
        public int WizCode
        {
            get { return _WizCode.Value; }
            set { _WizCode = value; }
        }
        public bool ShouldSerializeWizCode()
        {
            return (_WizCode.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CollectionAuthorization;
        public SAPB1.BoYesNoEnum CollectionAuthorization
        {
            get { return _CollectionAuthorization.Value; }
            set { _CollectionAuthorization = value; }
        }
        public bool ShouldSerializeCollectionAuthorization()
        {
            return (_CollectionAuthorization.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PayeeBankPostOffice;
        public SAPB1.BoYesNoEnum PayeeBankPostOffice
        {
            get { return _PayeeBankPostOffice.Value; }
            set { _PayeeBankPostOffice = value; }
        }
        public bool ShouldSerializePayeeBankPostOffice()
        {
            return (_PayeeBankPostOffice.HasValue);
        }

        private int? _PayeeBankNextCheckNumber;
        public int PayeeBankNextCheckNumber
        {
            get { return _PayeeBankNextCheckNumber.Value; }
            set { _PayeeBankNextCheckNumber = value; }
        }
        public bool ShouldSerializePayeeBankNextCheckNumber()
        {
            return (_PayeeBankNextCheckNumber.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PayeeBankHouseBank;
        public SAPB1.BoYesNoEnum PayeeBankHouseBank
        {
            get { return _PayeeBankHouseBank.Value; }
            set { _PayeeBankHouseBank = value; }
        }
        public bool ShouldSerializePayeeBankHouseBank()
        {
            return (_PayeeBankHouseBank.HasValue);
        }

        public string PayeeBankBlock { get; set; }
        public string PayeeBankCounty { get; set; }
        public string PayeeBankState { get; set; }
        private SAPB1.BoYesNoEnum? _PayeeBankBISR;
        public SAPB1.BoYesNoEnum PayeeBankBISR
        {
            get { return _PayeeBankBISR.Value; }
            set { _PayeeBankBISR = value; }
        }
        public bool ShouldSerializePayeeBankBISR()
        {
            return (_PayeeBankBISR.HasValue);
        }

        public string PayeeBankUserNum1 { get; set; }
        public string PayeeBankUserNum2 { get; set; }
        public string PayeeBankUserNum3 { get; set; }
        public string PayeeBankUserNum4 { get; set; }
        public string InstructionKey { get; set; }
        public string PaymentFormat { get; set; }
        public string CompanyName { get; set; }
        public string CompanyAddress { get; set; }
        private SAPB1.BoOpexStatus? _Status;
        public SAPB1.BoOpexStatus Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        public string CompIsrBillerID { get; set; }
        public string VendorIsrBillerID { get; set; }
        public string AdditionalIdNumber { get; set; }
        public string OrganizationNumber { get; set; }
        public string PayeeBankBranch { get; set; }
        public string PaymentBankBranch { get; set; }
        public string UserName { get; set; }
        public string UserEMail { get; set; }
        public string UserMobilePhoneNumber { get; set; }
        public string UserFaxNumber { get; set; }
        private int? _UserDepartment;
        public int UserDepartment
        {
            get { return _UserDepartment.Value; }
            set { _UserDepartment = value; }
        }
        public bool ShouldSerializeUserDepartment()
        {
            return (_UserDepartment.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DebitMemo;
        public SAPB1.BoYesNoEnum DebitMemo
        {
            get { return _DebitMemo.Value; }
            set { _DebitMemo = value; }
        }
        public bool ShouldSerializeDebitMemo()
        {
            return (_DebitMemo.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EUInternalTransfer;
        public SAPB1.BoYesNoEnum EUInternalTransfer
        {
            get { return _EUInternalTransfer.Value; }
            set { _EUInternalTransfer = value; }
        }
        public bool ShouldSerializeEUInternalTransfer()
        {
            return (_EUInternalTransfer.HasValue);
        }

        public string FilePath { get; set; }
        public string OrderingParty { get; set; }
        public string PaymentBankControlKey { get; set; }
        public string PayeeTaxNumber { get; set; }
        public string PaymentKeyCode { get; set; }
        public string PayeeReferenceDetails { get; set; }
        public string FormatName { get; set; }
        private SAPB1.BoYesNoEnum? _PaymentDonewithCheck;
        public SAPB1.BoYesNoEnum PaymentDonewithCheck
        {
            get { return _PaymentDonewithCheck.Value; }
            set { _PaymentDonewithCheck = value; }
        }
        public bool ShouldSerializePaymentDonewithCheck()
        {
            return (_PaymentDonewithCheck.HasValue);
        }

        public string CompanyBlock { get; set; }
        public string CompanyCity { get; set; }
        public string CompanyCounty { get; set; }
        public string CompanyState { get; set; }
        public string CompanyStreet { get; set; }
        public string CompanyZipCode { get; set; }
        public string PaymentBankCharges { get; set; }
        public string PaymentBankUserNo1 { get; set; }
        public string PaymentBankUserNo2 { get; set; }
        public string PaymentBankUserNo3 { get; set; }
        public string PaymentBankUserNo4 { get; set; }
        public string PaymentBankChargesAllocationCode { get; set; }
        private int? _PaymentOrderNum;
        public int PaymentOrderNum
        {
            get { return _PaymentOrderNum.Value; }
            set { _PaymentOrderNum = value; }
        }
        public bool ShouldSerializePaymentOrderNum()
        {
            return (_PaymentOrderNum.HasValue);
        }

        public string FreeText1 { get; set; }
        public string FreeText2 { get; set; }
        public string FreeText3 { get; set; }
        private SAPB1.PaymentRunExportRowTypeEnum? _RowType;
        public SAPB1.PaymentRunExportRowTypeEnum RowType
        {
            get { return _RowType.Value; }
            set { _RowType = value; }
        }
        public bool ShouldSerializeRowType()
        {
            return (_RowType.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.PaymentRunExport_Line> PaymentRunExport_Lines { get; set; }
    }

    public class PaymentRunExport_Line
    {
        private int? _RowNumber;
        public int RowNumber
        {
            get { return _RowNumber.Value; }
            set { _RowNumber = value; }
        }
        public bool ShouldSerializeRowNumber()
        {
            return (_RowNumber.HasValue);
        }

        private DateTime? _DateOfPaymentRun;
        public DateTime DateOfPaymentRun
        {
            get { return _DateOfPaymentRun.Value; }
            set { _DateOfPaymentRun = value; }
        }
        public bool ShouldSerializeDateOfPaymentRun()
        {
            return (_DateOfPaymentRun.HasValue);
        }

        private int? _PaymentWizardCode;
        public int PaymentWizardCode
        {
            get { return _PaymentWizardCode.Value; }
            set { _PaymentWizardCode = value; }
        }
        public bool ShouldSerializePaymentWizardCode()
        {
            return (_PaymentWizardCode.HasValue);
        }

        public string VendorNumber { get; set; }
        public string CustomerNumber { get; set; }
        public string PaymentMeans { get; set; }
        private int? _PaymentDocNum;
        public int PaymentDocNum
        {
            get { return _PaymentDocNum.Value; }
            set { _PaymentDocNum = value; }
        }
        public bool ShouldSerializePaymentDocNum()
        {
            return (_PaymentDocNum.HasValue);
        }

        private DateTime? _FiscalYear;
        public DateTime FiscalYear
        {
            get { return _FiscalYear.Value; }
            set { _FiscalYear = value; }
        }
        public bool ShouldSerializeFiscalYear()
        {
            return (_FiscalYear.HasValue);
        }

        public string VendorRefNum { get; set; }
        public string DocumentObjectType { get; set; }
        private DateTime? _DocumentPostingDate;
        public DateTime DocumentPostingDate
        {
            get { return _DocumentPostingDate.Value; }
            set { _DocumentPostingDate = value; }
        }
        public bool ShouldSerializeDocumentPostingDate()
        {
            return (_DocumentPostingDate.HasValue);
        }

        private DateTime? _DocumentTaxDate;
        public DateTime DocumentTaxDate
        {
            get { return _DocumentTaxDate.Value; }
            set { _DocumentTaxDate = value; }
        }
        public bool ShouldSerializeDocumentTaxDate()
        {
            return (_DocumentTaxDate.HasValue);
        }

        public string BPDebitPayableAccount { get; set; }
        public string DocumentCurrency { get; set; }
        private decimal? _DocumentRate;
        public decimal DocumentRate
        {
            get { return _DocumentRate.Value; }
            set { _DocumentRate = value; }
        }
        public bool ShouldSerializeDocumentRate()
        {
            return (_DocumentRate.HasValue);
        }

        private decimal? _DocumentTotal;
        public decimal DocumentTotal
        {
            get { return _DocumentTotal.Value; }
            set { _DocumentTotal = value; }
        }
        public bool ShouldSerializeDocumentTotal()
        {
            return (_DocumentTotal.HasValue);
        }

        private decimal? _DocumentTotalFC;
        public decimal DocumentTotalFC
        {
            get { return _DocumentTotalFC.Value; }
            set { _DocumentTotalFC = value; }
        }
        public bool ShouldSerializeDocumentTotalFC()
        {
            return (_DocumentTotalFC.HasValue);
        }

        private decimal? _DocumentTaxAmount;
        public decimal DocumentTaxAmount
        {
            get { return _DocumentTaxAmount.Value; }
            set { _DocumentTaxAmount = value; }
        }
        public bool ShouldSerializeDocumentTaxAmount()
        {
            return (_DocumentTaxAmount.HasValue);
        }

        private decimal? _DocumentTaxAmountFC;
        public decimal DocumentTaxAmountFC
        {
            get { return _DocumentTaxAmountFC.Value; }
            set { _DocumentTaxAmountFC = value; }
        }
        public bool ShouldSerializeDocumentTaxAmountFC()
        {
            return (_DocumentTaxAmountFC.HasValue);
        }

        public string DocumentRemarks { get; set; }
        private int? _DocumentPaymentTerms;
        public int DocumentPaymentTerms
        {
            get { return _DocumentPaymentTerms.Value; }
            set { _DocumentPaymentTerms = value; }
        }
        public bool ShouldSerializeDocumentPaymentTerms()
        {
            return (_DocumentPaymentTerms.HasValue);
        }

        public string PaymentDocReference { get; set; }
        public string DocumentLocalCurrency { get; set; }
        private int? _PaymentTermsPeriod;
        public int PaymentTermsPeriod
        {
            get { return _PaymentTermsPeriod.Value; }
            set { _PaymentTermsPeriod = value; }
        }
        public bool ShouldSerializePaymentTermsPeriod()
        {
            return (_PaymentTermsPeriod.HasValue);
        }

        public string DocumentObjectTypeEx { get; set; }
        private int? _DocumentNumber;
        public int DocumentNumber
        {
            get { return _DocumentNumber.Value; }
            set { _DocumentNumber = value; }
        }
        public bool ShouldSerializeDocumentNumber()
        {
            return (_DocumentNumber.HasValue);
        }

        private int? _PaymentNumber;
        public int PaymentNumber
        {
            get { return _PaymentNumber.Value; }
            set { _PaymentNumber = value; }
        }
        public bool ShouldSerializePaymentNumber()
        {
            return (_PaymentNumber.HasValue);
        }

        private int? _PaymentOrderNum;
        public int PaymentOrderNum
        {
            get { return _PaymentOrderNum.Value; }
            set { _PaymentOrderNum = value; }
        }
        public bool ShouldSerializePaymentOrderNum()
        {
            return (_PaymentOrderNum.HasValue);
        }

        public string FreeText1 { get; set; }
        public string FreeText2 { get; set; }
        public string FreeText3 { get; set; }
    }

    public class UserQuery
    {
        private int? _InternalKey;
        public int InternalKey
        {
            get { return _InternalKey.Value; }
            set { _InternalKey = value; }
        }
        public bool ShouldSerializeInternalKey()
        {
            return (_InternalKey.HasValue);
        }

        private int? _QueryCategory;
        public int QueryCategory
        {
            get { return _QueryCategory.Value; }
            set { _QueryCategory = value; }
        }
        public bool ShouldSerializeQueryCategory()
        {
            return (_QueryCategory.HasValue);
        }

        public string QueryDescription { get; set; }
        public string Query { get; set; }
        public string ProcedureAlias { get; set; }
        public string ProcedureName { get; set; }
        private SAPB1.UserQueryTypeEnum? _QueryType;
        public SAPB1.UserQueryTypeEnum QueryType
        {
            get { return _QueryType.Value; }
            set { _QueryType = value; }
        }
        public bool ShouldSerializeQueryType()
        {
            return (_QueryType.HasValue);
        }

    }

    public class UserQueryKey
    {
        private int? _InternalKey;
        public int InternalKey
        {
            get { return _InternalKey.Value; }
            set { _InternalKey = value; }
        }
        public bool ShouldSerializeInternalKey()
        {
            return (_InternalKey.HasValue);
        }

        private int? _QueryCategory;
        public int QueryCategory
        {
            get { return _QueryCategory.Value; }
            set { _QueryCategory = value; }
        }
        public bool ShouldSerializeQueryCategory()
        {
            return (_QueryCategory.HasValue);
        }

    }

    public class MaterialRevaluationParams
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

    }

    public class MaterialRevaluation
    {
        private int? _DocNum;
        public int DocNum
        {
            get { return _DocNum.Value; }
            set { _DocNum = value; }
        }
        public bool ShouldSerializeDocNum()
        {
            return (_DocNum.HasValue);
        }

        private DateTime? _DocDate;
        public DateTime DocDate
        {
            get { return _DocDate.Value; }
            set { _DocDate = value; }
        }
        public bool ShouldSerializeDocDate()
        {
            return (_DocDate.HasValue);
        }

        public string Reference1 { get; set; }
        public string Reference2 { get; set; }
        public string Comments { get; set; }
        public string JournalMemo { get; set; }
        private TimeSpan? _DocTime;
        public TimeSpan DocTime
        {
            get { return _DocTime.Value; }
            set { _DocTime = value; }
        }
        public bool ShouldSerializeDocTime()
        {
            return (_DocTime.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private DateTime? _TaxDate;
        public DateTime TaxDate
        {
            get { return _TaxDate.Value; }
            set { _TaxDate = value; }
        }
        public bool ShouldSerializeTaxDate()
        {
            return (_TaxDate.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private DateTime? _CreationDate;
        public DateTime CreationDate
        {
            get { return _CreationDate.Value; }
            set { _CreationDate = value; }
        }
        public bool ShouldSerializeCreationDate()
        {
            return (_CreationDate.HasValue);
        }

        private DateTime? _UpdateDate;
        public DateTime UpdateDate
        {
            get { return _UpdateDate.Value; }
            set { _UpdateDate = value; }
        }
        public bool ShouldSerializeUpdateDate()
        {
            return (_UpdateDate.HasValue);
        }

        private int? _TransNum;
        public int TransNum
        {
            get { return _TransNum.Value; }
            set { _TransNum = value; }
        }
        public bool ShouldSerializeTransNum()
        {
            return (_TransNum.HasValue);
        }

        public string RevalType { get; set; }
        public string RevaluationIncomeAccount { get; set; }
        public string RevaluationExpenseAccount { get; set; }
        public string DataSource { get; set; }
        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        private SAPB1.BoYesNoEnum? _InflationRevaluation;
        public SAPB1.BoYesNoEnum InflationRevaluation
        {
            get { return _InflationRevaluation.Value; }
            set { _InflationRevaluation = value; }
        }
        public bool ShouldSerializeInflationRevaluation()
        {
            return (_InflationRevaluation.HasValue);
        }

        public string CardCode { get; set; }
        public string CardName { get; set; }
        public System.Collections.Generic.List<SAPB1.MaterialRevaluationLine> MaterialRevaluationLines { get; set; }
    }

    public class MaterialRevaluationLine
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        public string ItemCode { get; set; }
        public string ItemDescription { get; set; }
        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private decimal? _Price;
        public decimal Price
        {
            get { return _Price.Value; }
            set { _Price = value; }
        }
        public bool ShouldSerializePrice()
        {
            return (_Price.HasValue);
        }

        public string WarehouseCode { get; set; }
        private decimal? _ActualPrice;
        public decimal ActualPrice
        {
            get { return _ActualPrice.Value; }
            set { _ActualPrice = value; }
        }
        public bool ShouldSerializeActualPrice()
        {
            return (_ActualPrice.HasValue);
        }

        private decimal? _OnHand;
        public decimal OnHand
        {
            get { return _OnHand.Value; }
            set { _OnHand = value; }
        }
        public bool ShouldSerializeOnHand()
        {
            return (_OnHand.HasValue);
        }

        private decimal? _DebitCredit;
        public decimal DebitCredit
        {
            get { return _DebitCredit.Value; }
            set { _DebitCredit = value; }
        }
        public bool ShouldSerializeDebitCredit()
        {
            return (_DebitCredit.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        public string RevaluationDecrementAccount { get; set; }
        public string RevaluationIncrementAccount { get; set; }
        private decimal? _RevalAmountToStock;
        public decimal RevalAmountToStock
        {
            get { return _RevalAmountToStock.Value; }
            set { _RevalAmountToStock = value; }
        }
        public bool ShouldSerializeRevalAmountToStock()
        {
            return (_RevalAmountToStock.HasValue);
        }

        public string Project { get; set; }
        public string DistributionRule { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
        public System.Collections.Generic.List<SAPB1.FIFOLayer> FIFOLayers { get; set; }
        public System.Collections.Generic.List<SAPB1.SNBLines> SNBLinesCollection { get; set; }
    }

    public class FIFOLayer
    {
        private int? _TransactionSequenceNum;
        public int TransactionSequenceNum
        {
            get { return _TransactionSequenceNum.Value; }
            set { _TransactionSequenceNum = value; }
        }
        public bool ShouldSerializeTransactionSequenceNum()
        {
            return (_TransactionSequenceNum.HasValue);
        }

        private int? _LayerID;
        public int LayerID
        {
            get { return _LayerID.Value; }
            set { _LayerID = value; }
        }
        public bool ShouldSerializeLayerID()
        {
            return (_LayerID.HasValue);
        }

        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private decimal? _Price;
        public decimal Price
        {
            get { return _Price.Value; }
            set { _Price = value; }
        }
        public bool ShouldSerializePrice()
        {
            return (_Price.HasValue);
        }

        private decimal? _LineTotal;
        public decimal LineTotal
        {
            get { return _LineTotal.Value; }
            set { _LineTotal = value; }
        }
        public bool ShouldSerializeLineTotal()
        {
            return (_LineTotal.HasValue);
        }

        private int? _BaseLine;
        public int BaseLine
        {
            get { return _BaseLine.Value; }
            set { _BaseLine = value; }
        }
        public bool ShouldSerializeBaseLine()
        {
            return (_BaseLine.HasValue);
        }

    }

    public class SNBLines
    {
        private int? _SnbAbsEntry;
        public int SnbAbsEntry
        {
            get { return _SnbAbsEntry.Value; }
            set { _SnbAbsEntry = value; }
        }
        public bool ShouldSerializeSnbAbsEntry()
        {
            return (_SnbAbsEntry.HasValue);
        }

        private decimal? _NewCost;
        public decimal NewCost
        {
            get { return _NewCost.Value; }
            set { _NewCost = value; }
        }
        public bool ShouldSerializeNewCost()
        {
            return (_NewCost.HasValue);
        }

        private decimal? _DebitCredit;
        public decimal DebitCredit
        {
            get { return _DebitCredit.Value; }
            set { _DebitCredit = value; }
        }
        public bool ShouldSerializeDebitCredit()
        {
            return (_DebitCredit.HasValue);
        }

        private int? _SystemNumber;
        public int SystemNumber
        {
            get { return _SystemNumber.Value; }
            set { _SystemNumber = value; }
        }
        public bool ShouldSerializeSystemNumber()
        {
            return (_SystemNumber.HasValue);
        }

        public string LotNumber { get; set; }
        public string ManufactureNumber { get; set; }
        private DateTime? _AdmissionDate;
        public DateTime AdmissionDate
        {
            get { return _AdmissionDate.Value; }
            set { _AdmissionDate = value; }
        }
        public bool ShouldSerializeAdmissionDate()
        {
            return (_AdmissionDate.HasValue);
        }

        private DateTime? _ExpirationDate;
        public DateTime ExpirationDate
        {
            get { return _ExpirationDate.Value; }
            set { _ExpirationDate = value; }
        }
        public bool ShouldSerializeExpirationDate()
        {
            return (_ExpirationDate.HasValue);
        }

        private int? _BaseLine;
        public int BaseLine
        {
            get { return _BaseLine.Value; }
            set { _BaseLine = value; }
        }
        public bool ShouldSerializeBaseLine()
        {
            return (_BaseLine.HasValue);
        }

    }

    public class ContractTemplate
    {
        public string TemplateName { get; set; }
        private SAPB1.BoYesNoEnum? _TemplateIsDeleted;
        public SAPB1.BoYesNoEnum TemplateIsDeleted
        {
            get { return _TemplateIsDeleted.Value; }
            set { _TemplateIsDeleted = value; }
        }
        public bool ShouldSerializeTemplateIsDeleted()
        {
            return (_TemplateIsDeleted.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TemplateIsRenewal;
        public SAPB1.BoYesNoEnum TemplateIsRenewal
        {
            get { return _TemplateIsRenewal.Value; }
            set { _TemplateIsRenewal = value; }
        }
        public bool ShouldSerializeTemplateIsRenewal()
        {
            return (_TemplateIsRenewal.HasValue);
        }

        private int? _RemindBeforeRenewal;
        public int RemindBeforeRenewal
        {
            get { return _RemindBeforeRenewal.Value; }
            set { _RemindBeforeRenewal = value; }
        }
        public bool ShouldSerializeRemindBeforeRenewal()
        {
            return (_RemindBeforeRenewal.HasValue);
        }

        private SAPB1.BoRemindUnits? _RemindUnit;
        public SAPB1.BoRemindUnits RemindUnit
        {
            get { return _RemindUnit.Value; }
            set { _RemindUnit = value; }
        }
        public bool ShouldSerializeRemindUnit()
        {
            return (_RemindUnit.HasValue);
        }

        private int? _DurationOfCoverage;
        public int DurationOfCoverage
        {
            get { return _DurationOfCoverage.Value; }
            set { _DurationOfCoverage = value; }
        }
        public bool ShouldSerializeDurationOfCoverage()
        {
            return (_DurationOfCoverage.HasValue);
        }

        private int? _ResponseValue;
        public int ResponseValue
        {
            get { return _ResponseValue.Value; }
            set { _ResponseValue = value; }
        }
        public bool ShouldSerializeResponseValue()
        {
            return (_ResponseValue.HasValue);
        }

        private SAPB1.BoResolutionUnits? _ResolutionUnit;
        public SAPB1.BoResolutionUnits ResolutionUnit
        {
            get { return _ResolutionUnit.Value; }
            set { _ResolutionUnit = value; }
        }
        public bool ShouldSerializeResolutionUnit()
        {
            return (_ResolutionUnit.HasValue);
        }

        public string Description { get; set; }
        private SAPB1.BoContractTypes? _ContractType;
        public SAPB1.BoContractTypes ContractType
        {
            get { return _ContractType.Value; }
            set { _ContractType = value; }
        }
        public bool ShouldSerializeContractType()
        {
            return (_ContractType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _MondayEnabled;
        public SAPB1.BoYesNoEnum MondayEnabled
        {
            get { return _MondayEnabled.Value; }
            set { _MondayEnabled = value; }
        }
        public bool ShouldSerializeMondayEnabled()
        {
            return (_MondayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TuesdayEnabled;
        public SAPB1.BoYesNoEnum TuesdayEnabled
        {
            get { return _TuesdayEnabled.Value; }
            set { _TuesdayEnabled = value; }
        }
        public bool ShouldSerializeTuesdayEnabled()
        {
            return (_TuesdayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WednesdayEnabled;
        public SAPB1.BoYesNoEnum WednesdayEnabled
        {
            get { return _WednesdayEnabled.Value; }
            set { _WednesdayEnabled = value; }
        }
        public bool ShouldSerializeWednesdayEnabled()
        {
            return (_WednesdayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ThursdayEnabled;
        public SAPB1.BoYesNoEnum ThursdayEnabled
        {
            get { return _ThursdayEnabled.Value; }
            set { _ThursdayEnabled = value; }
        }
        public bool ShouldSerializeThursdayEnabled()
        {
            return (_ThursdayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _FridayEnabled;
        public SAPB1.BoYesNoEnum FridayEnabled
        {
            get { return _FridayEnabled.Value; }
            set { _FridayEnabled = value; }
        }
        public bool ShouldSerializeFridayEnabled()
        {
            return (_FridayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SaturdayEnabled;
        public SAPB1.BoYesNoEnum SaturdayEnabled
        {
            get { return _SaturdayEnabled.Value; }
            set { _SaturdayEnabled = value; }
        }
        public bool ShouldSerializeSaturdayEnabled()
        {
            return (_SaturdayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SundayEnabled;
        public SAPB1.BoYesNoEnum SundayEnabled
        {
            get { return _SundayEnabled.Value; }
            set { _SundayEnabled = value; }
        }
        public bool ShouldSerializeSundayEnabled()
        {
            return (_SundayEnabled.HasValue);
        }

        private TimeSpan? _MondayStart;
        public TimeSpan MondayStart
        {
            get { return _MondayStart.Value; }
            set { _MondayStart = value; }
        }
        public bool ShouldSerializeMondayStart()
        {
            return (_MondayStart.HasValue);
        }

        private TimeSpan? _MondayEnd;
        public TimeSpan MondayEnd
        {
            get { return _MondayEnd.Value; }
            set { _MondayEnd = value; }
        }
        public bool ShouldSerializeMondayEnd()
        {
            return (_MondayEnd.HasValue);
        }

        private TimeSpan? _TuesdayStart;
        public TimeSpan TuesdayStart
        {
            get { return _TuesdayStart.Value; }
            set { _TuesdayStart = value; }
        }
        public bool ShouldSerializeTuesdayStart()
        {
            return (_TuesdayStart.HasValue);
        }

        private TimeSpan? _TuesdayEnd;
        public TimeSpan TuesdayEnd
        {
            get { return _TuesdayEnd.Value; }
            set { _TuesdayEnd = value; }
        }
        public bool ShouldSerializeTuesdayEnd()
        {
            return (_TuesdayEnd.HasValue);
        }

        private TimeSpan? _WednesdayStart;
        public TimeSpan WednesdayStart
        {
            get { return _WednesdayStart.Value; }
            set { _WednesdayStart = value; }
        }
        public bool ShouldSerializeWednesdayStart()
        {
            return (_WednesdayStart.HasValue);
        }

        private TimeSpan? _WednesdayEnd;
        public TimeSpan WednesdayEnd
        {
            get { return _WednesdayEnd.Value; }
            set { _WednesdayEnd = value; }
        }
        public bool ShouldSerializeWednesdayEnd()
        {
            return (_WednesdayEnd.HasValue);
        }

        private TimeSpan? _ThursdayStart;
        public TimeSpan ThursdayStart
        {
            get { return _ThursdayStart.Value; }
            set { _ThursdayStart = value; }
        }
        public bool ShouldSerializeThursdayStart()
        {
            return (_ThursdayStart.HasValue);
        }

        private TimeSpan? _ThursdayEnd;
        public TimeSpan ThursdayEnd
        {
            get { return _ThursdayEnd.Value; }
            set { _ThursdayEnd = value; }
        }
        public bool ShouldSerializeThursdayEnd()
        {
            return (_ThursdayEnd.HasValue);
        }

        private TimeSpan? _FridayStart;
        public TimeSpan FridayStart
        {
            get { return _FridayStart.Value; }
            set { _FridayStart = value; }
        }
        public bool ShouldSerializeFridayStart()
        {
            return (_FridayStart.HasValue);
        }

        private TimeSpan? _FridayEnd;
        public TimeSpan FridayEnd
        {
            get { return _FridayEnd.Value; }
            set { _FridayEnd = value; }
        }
        public bool ShouldSerializeFridayEnd()
        {
            return (_FridayEnd.HasValue);
        }

        private TimeSpan? _SaturdayStart;
        public TimeSpan SaturdayStart
        {
            get { return _SaturdayStart.Value; }
            set { _SaturdayStart = value; }
        }
        public bool ShouldSerializeSaturdayStart()
        {
            return (_SaturdayStart.HasValue);
        }

        private TimeSpan? _SaturdayEnd;
        public TimeSpan SaturdayEnd
        {
            get { return _SaturdayEnd.Value; }
            set { _SaturdayEnd = value; }
        }
        public bool ShouldSerializeSaturdayEnd()
        {
            return (_SaturdayEnd.HasValue);
        }

        private TimeSpan? _SundayStart;
        public TimeSpan SundayStart
        {
            get { return _SundayStart.Value; }
            set { _SundayStart = value; }
        }
        public bool ShouldSerializeSundayStart()
        {
            return (_SundayStart.HasValue);
        }

        private TimeSpan? _SundayEnd;
        public TimeSpan SundayEnd
        {
            get { return _SundayEnd.Value; }
            set { _SundayEnd = value; }
        }
        public bool ShouldSerializeSundayEnd()
        {
            return (_SundayEnd.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IncludeParts;
        public SAPB1.BoYesNoEnum IncludeParts
        {
            get { return _IncludeParts.Value; }
            set { _IncludeParts = value; }
        }
        public bool ShouldSerializeIncludeParts()
        {
            return (_IncludeParts.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IncludeLabor;
        public SAPB1.BoYesNoEnum IncludeLabor
        {
            get { return _IncludeLabor.Value; }
            set { _IncludeLabor = value; }
        }
        public bool ShouldSerializeIncludeLabor()
        {
            return (_IncludeLabor.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IncludeTravel;
        public SAPB1.BoYesNoEnum IncludeTravel
        {
            get { return _IncludeTravel.Value; }
            set { _IncludeTravel = value; }
        }
        public bool ShouldSerializeIncludeTravel()
        {
            return (_IncludeTravel.HasValue);
        }

        public string Remarks { get; set; }
        private SAPB1.BoYesNoEnum? _IncludeHolidays;
        public SAPB1.BoYesNoEnum IncludeHolidays
        {
            get { return _IncludeHolidays.Value; }
            set { _IncludeHolidays = value; }
        }
        public bool ShouldSerializeIncludeHolidays()
        {
            return (_IncludeHolidays.HasValue);
        }

        private SAPB1.BoResponseUnit? _ResponseUnit;
        public SAPB1.BoResponseUnit ResponseUnit
        {
            get { return _ResponseUnit.Value; }
            set { _ResponseUnit = value; }
        }
        public bool ShouldSerializeResponseUnit()
        {
            return (_ResponseUnit.HasValue);
        }

        private int? _ResolutionTime;
        public int ResolutionTime
        {
            get { return _ResolutionTime.Value; }
            set { _ResolutionTime = value; }
        }
        public bool ShouldSerializeResolutionTime()
        {
            return (_ResolutionTime.HasValue);
        }

        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

    }

    public class EmployeeInfoParams
    {
        private int? _EmployeeID;
        public int EmployeeID
        {
            get { return _EmployeeID.Value; }
            set { _EmployeeID = value; }
        }
        public bool ShouldSerializeEmployeeID()
        {
            return (_EmployeeID.HasValue);
        }

    }

    public class EmployeeInfo
    {
        private int? _EmployeeID;
        public int EmployeeID
        {
            get { return _EmployeeID.Value; }
            set { _EmployeeID = value; }
        }
        public bool ShouldSerializeEmployeeID()
        {
            return (_EmployeeID.HasValue);
        }

        public string LastName { get; set; }
        public string FirstName { get; set; }
        public string MiddleName { get; set; }
        private SAPB1.BoGenderTypes? _Gender;
        public SAPB1.BoGenderTypes Gender
        {
            get { return _Gender.Value; }
            set { _Gender = value; }
        }
        public bool ShouldSerializeGender()
        {
            return (_Gender.HasValue);
        }

        public string JobTitle { get; set; }
        private int? _EmployeeType;
        public int EmployeeType
        {
            get { return _EmployeeType.Value; }
            set { _EmployeeType = value; }
        }
        public bool ShouldSerializeEmployeeType()
        {
            return (_EmployeeType.HasValue);
        }

        private int? _Department;
        public int Department
        {
            get { return _Department.Value; }
            set { _Department = value; }
        }
        public bool ShouldSerializeDepartment()
        {
            return (_Department.HasValue);
        }

        private int? _Branch;
        public int Branch
        {
            get { return _Branch.Value; }
            set { _Branch = value; }
        }
        public bool ShouldSerializeBranch()
        {
            return (_Branch.HasValue);
        }

        public string WorkStreet { get; set; }
        public string WorkBlock { get; set; }
        public string WorkZipCode { get; set; }
        public string WorkCity { get; set; }
        public string WorkCounty { get; set; }
        public string WorkCountryCode { get; set; }
        public string WorkStateCode { get; set; }
        private int? _Manager;
        public int Manager
        {
            get { return _Manager.Value; }
            set { _Manager = value; }
        }
        public bool ShouldSerializeManager()
        {
            return (_Manager.HasValue);
        }

        private int? _ApplicationUserID;
        public int ApplicationUserID
        {
            get { return _ApplicationUserID.Value; }
            set { _ApplicationUserID = value; }
        }
        public bool ShouldSerializeApplicationUserID()
        {
            return (_ApplicationUserID.HasValue);
        }

        private int? _SalesPersonCode;
        public int SalesPersonCode
        {
            get { return _SalesPersonCode.Value; }
            set { _SalesPersonCode = value; }
        }
        public bool ShouldSerializeSalesPersonCode()
        {
            return (_SalesPersonCode.HasValue);
        }

        public string OfficePhone { get; set; }
        public string OfficeExtension { get; set; }
        public string MobilePhone { get; set; }
        public string Pager { get; set; }
        public string HomePhone { get; set; }
        public string Fax { get; set; }
        public string eMail { get; set; }
        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private int? _StatusCode;
        public int StatusCode
        {
            get { return _StatusCode.Value; }
            set { _StatusCode = value; }
        }
        public bool ShouldSerializeStatusCode()
        {
            return (_StatusCode.HasValue);
        }

        private decimal? _Salary;
        public decimal Salary
        {
            get { return _Salary.Value; }
            set { _Salary = value; }
        }
        public bool ShouldSerializeSalary()
        {
            return (_Salary.HasValue);
        }

        private SAPB1.BoSalaryCostUnits? _SalaryUnit;
        public SAPB1.BoSalaryCostUnits SalaryUnit
        {
            get { return _SalaryUnit.Value; }
            set { _SalaryUnit = value; }
        }
        public bool ShouldSerializeSalaryUnit()
        {
            return (_SalaryUnit.HasValue);
        }

        private decimal? _EmployeeCosts;
        public decimal EmployeeCosts
        {
            get { return _EmployeeCosts.Value; }
            set { _EmployeeCosts = value; }
        }
        public bool ShouldSerializeEmployeeCosts()
        {
            return (_EmployeeCosts.HasValue);
        }

        private SAPB1.BoSalaryCostUnits? _EmployeeCostUnit;
        public SAPB1.BoSalaryCostUnits EmployeeCostUnit
        {
            get { return _EmployeeCostUnit.Value; }
            set { _EmployeeCostUnit = value; }
        }
        public bool ShouldSerializeEmployeeCostUnit()
        {
            return (_EmployeeCostUnit.HasValue);
        }

        private DateTime? _TerminationDate;
        public DateTime TerminationDate
        {
            get { return _TerminationDate.Value; }
            set { _TerminationDate = value; }
        }
        public bool ShouldSerializeTerminationDate()
        {
            return (_TerminationDate.HasValue);
        }

        private int? _TreminationReason;
        public int TreminationReason
        {
            get { return _TreminationReason.Value; }
            set { _TreminationReason = value; }
        }
        public bool ShouldSerializeTreminationReason()
        {
            return (_TreminationReason.HasValue);
        }

        public string BankCode { get; set; }
        public string BankBranch { get; set; }
        public string BankBranchNum { get; set; }
        public string BankAccount { get; set; }
        public string HomeStreet { get; set; }
        public string HomeBlock { get; set; }
        public string HomeZipCode { get; set; }
        public string HomeCity { get; set; }
        public string HomeCounty { get; set; }
        public string HomeCountry { get; set; }
        public string HomeState { get; set; }
        private DateTime? _DateOfBirth;
        public DateTime DateOfBirth
        {
            get { return _DateOfBirth.Value; }
            set { _DateOfBirth = value; }
        }
        public bool ShouldSerializeDateOfBirth()
        {
            return (_DateOfBirth.HasValue);
        }

        public string CountryOfBirth { get; set; }
        private SAPB1.BoMeritalStatuses? _MartialStatus;
        public SAPB1.BoMeritalStatuses MartialStatus
        {
            get { return _MartialStatus.Value; }
            set { _MartialStatus = value; }
        }
        public bool ShouldSerializeMartialStatus()
        {
            return (_MartialStatus.HasValue);
        }

        private int? _NumOfChildren;
        public int NumOfChildren
        {
            get { return _NumOfChildren.Value; }
            set { _NumOfChildren = value; }
        }
        public bool ShouldSerializeNumOfChildren()
        {
            return (_NumOfChildren.HasValue);
        }

        public string IdNumber { get; set; }
        public string CitizenshipCountryCode { get; set; }
        public string PassportNumber { get; set; }
        private DateTime? _PassportExpirationDate;
        public DateTime PassportExpirationDate
        {
            get { return _PassportExpirationDate.Value; }
            set { _PassportExpirationDate = value; }
        }
        public bool ShouldSerializePassportExpirationDate()
        {
            return (_PassportExpirationDate.HasValue);
        }

        public string Picture { get; set; }
        public string Remarks { get; set; }
        public string SalaryCurrency { get; set; }
        public string EmployeeCostsCurrency { get; set; }
        public string WorkBuildingFloorRoom { get; set; }
        public string HomeBuildingFloorRoom { get; set; }
        private int? _Position;
        public int Position
        {
            get { return _Position.Value; }
            set { _Position = value; }
        }
        public bool ShouldSerializePosition()
        {
            return (_Position.HasValue);
        }

        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

        public string CostCenterCode { get; set; }
        public string CompanyNumber { get; set; }
        private int? _VacationPreviousYear;
        public int VacationPreviousYear
        {
            get { return _VacationPreviousYear.Value; }
            set { _VacationPreviousYear = value; }
        }
        public bool ShouldSerializeVacationPreviousYear()
        {
            return (_VacationPreviousYear.HasValue);
        }

        private int? _VacationCurrentYear;
        public int VacationCurrentYear
        {
            get { return _VacationCurrentYear.Value; }
            set { _VacationCurrentYear = value; }
        }
        public bool ShouldSerializeVacationCurrentYear()
        {
            return (_VacationCurrentYear.HasValue);
        }

        public string MunicipalityKey { get; set; }
        public string TaxClass { get; set; }
        public string IncomeTaxLiability { get; set; }
        public string Religion { get; set; }
        public string PartnerReligion { get; set; }
        private decimal? _ExemptionAmount;
        public decimal ExemptionAmount
        {
            get { return _ExemptionAmount.Value; }
            set { _ExemptionAmount = value; }
        }
        public bool ShouldSerializeExemptionAmount()
        {
            return (_ExemptionAmount.HasValue);
        }

        private SAPB1.EmployeeExemptionUnitEnum? _ExemptionUnit;
        public SAPB1.EmployeeExemptionUnitEnum ExemptionUnit
        {
            get { return _ExemptionUnit.Value; }
            set { _ExemptionUnit = value; }
        }
        public bool ShouldSerializeExemptionUnit()
        {
            return (_ExemptionUnit.HasValue);
        }

        public string ExemptionCurrency { get; set; }
        private decimal? _AdditionalAmount;
        public decimal AdditionalAmount
        {
            get { return _AdditionalAmount.Value; }
            set { _AdditionalAmount = value; }
        }
        public bool ShouldSerializeAdditionalAmount()
        {
            return (_AdditionalAmount.HasValue);
        }

        private SAPB1.EmployeeExemptionUnitEnum? _AdditionalUnit;
        public SAPB1.EmployeeExemptionUnitEnum AdditionalUnit
        {
            get { return _AdditionalUnit.Value; }
            set { _AdditionalUnit = value; }
        }
        public bool ShouldSerializeAdditionalUnit()
        {
            return (_AdditionalUnit.HasValue);
        }

        public string AdditionalCurrency { get; set; }
        public string TaxOfficeName { get; set; }
        public string TaxOfficeNumber { get; set; }
        public string HealthInsuranceName { get; set; }
        public string HealthInsuranceCode { get; set; }
        public string HealthInsuranceType { get; set; }
        public string SocialInsuranceNumber { get; set; }
        public string ProfessionStatus { get; set; }
        public string EducationStatus { get; set; }
        public string PersonGroup { get; set; }
        public string JobTitleCode { get; set; }
        public string BankCodeForDATEV { get; set; }
        private SAPB1.BoYesNoEnum? _DeviatingBankAccountOwner;
        public SAPB1.BoYesNoEnum DeviatingBankAccountOwner
        {
            get { return _DeviatingBankAccountOwner.Value; }
            set { _DeviatingBankAccountOwner = value; }
        }
        public bool ShouldSerializeDeviatingBankAccountOwner()
        {
            return (_DeviatingBankAccountOwner.HasValue);
        }

        public string SpouseFirstName { get; set; }
        public string SpouseSurname { get; set; }
        public string ExternalEmployeeNumber { get; set; }
        public string BirthPlace { get; set; }
        private SAPB1.EmployeePaymentMethodEnum? _PaymentMethod;
        public SAPB1.EmployeePaymentMethodEnum PaymentMethod
        {
            get { return _PaymentMethod.Value; }
            set { _PaymentMethod = value; }
        }
        public bool ShouldSerializePaymentMethod()
        {
            return (_PaymentMethod.HasValue);
        }

        private int? _STDCode;
        public int STDCode
        {
            get { return _STDCode.Value; }
            set { _STDCode = value; }
        }
        public bool ShouldSerializeSTDCode()
        {
            return (_STDCode.HasValue);
        }

        public string CPF { get; set; }
        public string CRCNumber { get; set; }
        private SAPB1.BoYesNoEnum? _AccountantResponsible;
        public SAPB1.BoYesNoEnum AccountantResponsible
        {
            get { return _AccountantResponsible.Value; }
            set { _AccountantResponsible = value; }
        }
        public bool ShouldSerializeAccountantResponsible()
        {
            return (_AccountantResponsible.HasValue);
        }

        private SAPB1.BoYesNoEnum? _LegalRepresentative;
        public SAPB1.BoYesNoEnum LegalRepresentative
        {
            get { return _LegalRepresentative.Value; }
            set { _LegalRepresentative = value; }
        }
        public bool ShouldSerializeLegalRepresentative()
        {
            return (_LegalRepresentative.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DIRFResponsible;
        public SAPB1.BoYesNoEnum DIRFResponsible
        {
            get { return _DIRFResponsible.Value; }
            set { _DIRFResponsible = value; }
        }
        public bool ShouldSerializeDIRFResponsible()
        {
            return (_DIRFResponsible.HasValue);
        }

        public string CRCState { get; set; }
        private SAPB1.BoYesNoEnum? _Active;
        public SAPB1.BoYesNoEnum Active
        {
            get { return _Active.Value; }
            set { _Active = value; }
        }
        public bool ShouldSerializeActive()
        {
            return (_Active.HasValue);
        }

        public string IDType { get; set; }
        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

        private DateTime? _PassportIssueDate;
        public DateTime PassportIssueDate
        {
            get { return _PassportIssueDate.Value; }
            set { _PassportIssueDate = value; }
        }
        public bool ShouldSerializePassportIssueDate()
        {
            return (_PassportIssueDate.HasValue);
        }

        public string PassportIssuer { get; set; }
        private SAPB1.SPEDContabilQualificationCodeEnum? _QualificationCode;
        public SAPB1.SPEDContabilQualificationCodeEnum QualificationCode
        {
            get { return _QualificationCode.Value; }
            set { _QualificationCode = value; }
        }
        public bool ShouldSerializeQualificationCode()
        {
            return (_QualificationCode.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PRWebAccess;
        public SAPB1.BoYesNoEnum PRWebAccess
        {
            get { return _PRWebAccess.Value; }
            set { _PRWebAccess = value; }
        }
        public bool ShouldSerializePRWebAccess()
        {
            return (_PRWebAccess.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PreviousPRWebAccess;
        public SAPB1.BoYesNoEnum PreviousPRWebAccess
        {
            get { return _PreviousPRWebAccess.Value; }
            set { _PreviousPRWebAccess = value; }
        }
        public bool ShouldSerializePreviousPRWebAccess()
        {
            return (_PreviousPRWebAccess.HasValue);
        }

        public string WorkStreetNumber { get; set; }
        public string HomeStreetNumber { get; set; }
        public System.Collections.Generic.List<SAPB1.EmployeeAbsenceInfo> EmployeeAbsenceInfoLines { get; set; }
        public System.Collections.Generic.List<SAPB1.EmployeeEducationInfo> EmployeeEducationInfoLines { get; set; }
        public System.Collections.Generic.List<SAPB1.EmployeeReviewsInfo> EmployeeReviewsInfoLines { get; set; }
        public System.Collections.Generic.List<SAPB1.EmployeePreviousEmpoymentInfo> EmployeePreviousEmpoymentInfoLines { get; set; }
        public System.Collections.Generic.List<SAPB1.EmployeeRolesInfo> EmployeeRolesInfoLines { get; set; }
        public System.Collections.Generic.List<SAPB1.EmployeeSavingsPaymentInfo> EmployeeSavingsPaymentInfoLines { get; set; }
        public System.Collections.Generic.List<SAPB1.EmployeeBranchAssignmentItem> EmployeeBranchAssignment { get; set; }
    }

    public class EmployeeAbsenceInfo
    {
        private int? _EmployeeID;
        public int EmployeeID
        {
            get { return _EmployeeID.Value; }
            set { _EmployeeID = value; }
        }
        public bool ShouldSerializeEmployeeID()
        {
            return (_EmployeeID.HasValue);
        }

        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private DateTime? _FromDate;
        public DateTime FromDate
        {
            get { return _FromDate.Value; }
            set { _FromDate = value; }
        }
        public bool ShouldSerializeFromDate()
        {
            return (_FromDate.HasValue);
        }

        private DateTime? _ToDate;
        public DateTime ToDate
        {
            get { return _ToDate.Value; }
            set { _ToDate = value; }
        }
        public bool ShouldSerializeToDate()
        {
            return (_ToDate.HasValue);
        }

        public string Reason { get; set; }
        public string ApprovedBy { get; set; }
        private int? _ConfirmerNumber;
        public int ConfirmerNumber
        {
            get { return _ConfirmerNumber.Value; }
            set { _ConfirmerNumber = value; }
        }
        public bool ShouldSerializeConfirmerNumber()
        {
            return (_ConfirmerNumber.HasValue);
        }

    }

    public class EmployeeEducationInfo
    {
        private int? _EmployeeNo;
        public int EmployeeNo
        {
            get { return _EmployeeNo.Value; }
            set { _EmployeeNo = value; }
        }
        public bool ShouldSerializeEmployeeNo()
        {
            return (_EmployeeNo.HasValue);
        }

        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private DateTime? _FromDate;
        public DateTime FromDate
        {
            get { return _FromDate.Value; }
            set { _FromDate = value; }
        }
        public bool ShouldSerializeFromDate()
        {
            return (_FromDate.HasValue);
        }

        private DateTime? _ToDate;
        public DateTime ToDate
        {
            get { return _ToDate.Value; }
            set { _ToDate = value; }
        }
        public bool ShouldSerializeToDate()
        {
            return (_ToDate.HasValue);
        }

        private int? _EducationType;
        public int EducationType
        {
            get { return _EducationType.Value; }
            set { _EducationType = value; }
        }
        public bool ShouldSerializeEducationType()
        {
            return (_EducationType.HasValue);
        }

        public string Institute { get; set; }
        public string Major { get; set; }
        public string Diploma { get; set; }
    }

    public class EmployeeReviewsInfo
    {
        private int? _EmployeeNo;
        public int EmployeeNo
        {
            get { return _EmployeeNo.Value; }
            set { _EmployeeNo = value; }
        }
        public bool ShouldSerializeEmployeeNo()
        {
            return (_EmployeeNo.HasValue);
        }

        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private DateTime? _Date;
        public DateTime Date
        {
            get { return _Date.Value; }
            set { _Date = value; }
        }
        public bool ShouldSerializeDate()
        {
            return (_Date.HasValue);
        }

        public string ReviewDescription { get; set; }
        private int? _Manager;
        public int Manager
        {
            get { return _Manager.Value; }
            set { _Manager = value; }
        }
        public bool ShouldSerializeManager()
        {
            return (_Manager.HasValue);
        }

        public string Grade { get; set; }
        public string Remarks { get; set; }
    }

    public class EmployeePreviousEmpoymentInfo
    {
        private int? _EmployeeNo;
        public int EmployeeNo
        {
            get { return _EmployeeNo.Value; }
            set { _EmployeeNo = value; }
        }
        public bool ShouldSerializeEmployeeNo()
        {
            return (_EmployeeNo.HasValue);
        }

        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private DateTime? _FromDtae;
        public DateTime FromDtae
        {
            get { return _FromDtae.Value; }
            set { _FromDtae = value; }
        }
        public bool ShouldSerializeFromDtae()
        {
            return (_FromDtae.HasValue);
        }

        private DateTime? _ToDate;
        public DateTime ToDate
        {
            get { return _ToDate.Value; }
            set { _ToDate = value; }
        }
        public bool ShouldSerializeToDate()
        {
            return (_ToDate.HasValue);
        }

        public string Employer { get; set; }
        public string Position { get; set; }
        public string Remarks { get; set; }
    }

    public class EmployeeRolesInfo
    {
        private int? _EmployeeID;
        public int EmployeeID
        {
            get { return _EmployeeID.Value; }
            set { _EmployeeID = value; }
        }
        public bool ShouldSerializeEmployeeID()
        {
            return (_EmployeeID.HasValue);
        }

        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _RoleID;
        public int RoleID
        {
            get { return _RoleID.Value; }
            set { _RoleID = value; }
        }
        public bool ShouldSerializeRoleID()
        {
            return (_RoleID.HasValue);
        }

    }

    public class EmployeeSavingsPaymentInfo
    {
        private int? _EmployeeID;
        public int EmployeeID
        {
            get { return _EmployeeID.Value; }
            set { _EmployeeID = value; }
        }
        public bool ShouldSerializeEmployeeID()
        {
            return (_EmployeeID.HasValue);
        }

        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        public string ContractName { get; set; }
        public string PaymentNotes { get; set; }
        private decimal? _AN;
        public decimal AN
        {
            get { return _AN.Value; }
            set { _AN = value; }
        }
        public bool ShouldSerializeAN()
        {
            return (_AN.HasValue);
        }

        public string ANcurrency { get; set; }
        private decimal? _AG;
        public decimal AG
        {
            get { return _AG.Value; }
            set { _AG = value; }
        }
        public bool ShouldSerializeAG()
        {
            return (_AG.HasValue);
        }

        public string AGcurrency { get; set; }
        public string BankName { get; set; }
        public string BankCode { get; set; }
        public string BankAccount { get; set; }
        private SAPB1.ContractSequenceEnum? _Sequence;
        public SAPB1.ContractSequenceEnum Sequence
        {
            get { return _Sequence.Value; }
            set { _Sequence = value; }
        }
        public bool ShouldSerializeSequence()
        {
            return (_Sequence.HasValue);
        }

    }

    public class EmployeeBranchAssignmentItem
    {
        private int? _EmployeeID;
        public int EmployeeID
        {
            get { return _EmployeeID.Value; }
            set { _EmployeeID = value; }
        }
        public bool ShouldSerializeEmployeeID()
        {
            return (_EmployeeID.HasValue);
        }

        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

    }

    public class CustomerEquipmentCard
    {
        private int? _EquipmentCardNum;
        public int EquipmentCardNum
        {
            get { return _EquipmentCardNum.Value; }
            set { _EquipmentCardNum = value; }
        }
        public bool ShouldSerializeEquipmentCardNum()
        {
            return (_EquipmentCardNum.HasValue);
        }

        public string CustomerCode { get; set; }
        public string CustomerName { get; set; }
        private int? _ContactEmployeeCode;
        public int ContactEmployeeCode
        {
            get { return _ContactEmployeeCode.Value; }
            set { _ContactEmployeeCode = value; }
        }
        public bool ShouldSerializeContactEmployeeCode()
        {
            return (_ContactEmployeeCode.HasValue);
        }

        public string DirectCustomerCode { get; set; }
        public string DirectCustomerName { get; set; }
        public string ManufacturerSerialNum { get; set; }
        public string InternalSerialNum { get; set; }
        public string ItemCode { get; set; }
        public string ItemDescription { get; set; }
        private int? _InvoiceCode;
        public int InvoiceCode
        {
            get { return _InvoiceCode.Value; }
            set { _InvoiceCode = value; }
        }
        public bool ShouldSerializeInvoiceCode()
        {
            return (_InvoiceCode.HasValue);
        }

        private int? _InvoiceNumber;
        public int InvoiceNumber
        {
            get { return _InvoiceNumber.Value; }
            set { _InvoiceNumber = value; }
        }
        public bool ShouldSerializeInvoiceNumber()
        {
            return (_InvoiceNumber.HasValue);
        }

        private DateTime? _DeliveryDate;
        public DateTime DeliveryDate
        {
            get { return _DeliveryDate.Value; }
            set { _DeliveryDate = value; }
        }
        public bool ShouldSerializeDeliveryDate()
        {
            return (_DeliveryDate.HasValue);
        }

        public string ContactPhone { get; set; }
        public string Street { get; set; }
        public string Block { get; set; }
        public string ZipCode { get; set; }
        public string City { get; set; }
        public string County { get; set; }
        public string CountryCode { get; set; }
        public string StateCode { get; set; }
        public string InstallLocation { get; set; }
        private int? _DeliveryCode;
        public int DeliveryCode
        {
            get { return _DeliveryCode.Value; }
            set { _DeliveryCode = value; }
        }
        public bool ShouldSerializeDeliveryCode()
        {
            return (_DeliveryCode.HasValue);
        }

        private int? _DeliveryNumber;
        public int DeliveryNumber
        {
            get { return _DeliveryNumber.Value; }
            set { _DeliveryNumber = value; }
        }
        public bool ShouldSerializeDeliveryNumber()
        {
            return (_DeliveryNumber.HasValue);
        }

        private SAPB1.BoSerialNumberStatus? _StatusOfSerialNumber;
        public SAPB1.BoSerialNumberStatus StatusOfSerialNumber
        {
            get { return _StatusOfSerialNumber.Value; }
            set { _StatusOfSerialNumber = value; }
        }
        public bool ShouldSerializeStatusOfSerialNumber()
        {
            return (_StatusOfSerialNumber.HasValue);
        }

        private int? _ReplaceSN;
        public int ReplaceSN
        {
            get { return _ReplaceSN.Value; }
            set { _ReplaceSN = value; }
        }
        public bool ShouldSerializeReplaceSN()
        {
            return (_ReplaceSN.HasValue);
        }

        private int? _DefaultTechnician;
        public int DefaultTechnician
        {
            get { return _DefaultTechnician.Value; }
            set { _DefaultTechnician = value; }
        }
        public bool ShouldSerializeDefaultTechnician()
        {
            return (_DefaultTechnician.HasValue);
        }

        private int? _ReplacedBySN;
        public int ReplacedBySN
        {
            get { return _ReplacedBySN.Value; }
            set { _ReplacedBySN = value; }
        }
        public bool ShouldSerializeReplacedBySN()
        {
            return (_ReplacedBySN.HasValue);
        }

        private int? _Defaultterritory;
        public int Defaultterritory
        {
            get { return _Defaultterritory.Value; }
            set { _Defaultterritory = value; }
        }
        public bool ShouldSerializeDefaultterritory()
        {
            return (_Defaultterritory.HasValue);
        }

        public string BuildingFloorRoom { get; set; }
        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

    }

    public class WithholdingTaxCodeParams
    {
        public string WTCode { get; set; }
    }

    public class WithholdingTaxCode
    {
        public string WTCode { get; set; }
        public string WTName { get; set; }
        private SAPB1.WithholdingTaxCodeCategoryEnum? _Category;
        public SAPB1.WithholdingTaxCodeCategoryEnum Category
        {
            get { return _Category.Value; }
            set { _Category = value; }
        }
        public bool ShouldSerializeCategory()
        {
            return (_Category.HasValue);
        }

        private SAPB1.WithholdingTaxCodeBaseTypeEnum? _BaseType;
        public SAPB1.WithholdingTaxCodeBaseTypeEnum BaseType
        {
            get { return _BaseType.Value; }
            set { _BaseType = value; }
        }
        public bool ShouldSerializeBaseType()
        {
            return (_BaseType.HasValue);
        }

        private decimal? _BaseAmount;
        public decimal BaseAmount
        {
            get { return _BaseAmount.Value; }
            set { _BaseAmount = value; }
        }
        public bool ShouldSerializeBaseAmount()
        {
            return (_BaseAmount.HasValue);
        }

        public string OfficialCode { get; set; }
        public string Account { get; set; }
        private SAPB1.WithholdingTypeEnum? _WithholdingType;
        public SAPB1.WithholdingTypeEnum WithholdingType
        {
            get { return _WithholdingType.Value; }
            set { _WithholdingType = value; }
        }
        public bool ShouldSerializeWithholdingType()
        {
            return (_WithholdingType.HasValue);
        }

        private SAPB1.RoundingTypeEnum? _RoundingType;
        public SAPB1.RoundingTypeEnum RoundingType
        {
            get { return _RoundingType.Value; }
            set { _RoundingType = value; }
        }
        public bool ShouldSerializeRoundingType()
        {
            return (_RoundingType.HasValue);
        }

        private int? _Section;
        public int Section
        {
            get { return _Section.Value; }
            set { _Section = value; }
        }
        public bool ShouldSerializeSection()
        {
            return (_Section.HasValue);
        }

        private decimal? _Threshold;
        public decimal Threshold
        {
            get { return _Threshold.Value; }
            set { _Threshold = value; }
        }
        public bool ShouldSerializeThreshold()
        {
            return (_Threshold.HasValue);
        }

        private decimal? _Surcharge;
        public decimal Surcharge
        {
            get { return _Surcharge.Value; }
            set { _Surcharge = value; }
        }
        public bool ShouldSerializeSurcharge()
        {
            return (_Surcharge.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Concessional;
        public SAPB1.BoYesNoEnum Concessional
        {
            get { return _Concessional.Value; }
            set { _Concessional = value; }
        }
        public bool ShouldSerializeConcessional()
        {
            return (_Concessional.HasValue);
        }

        private int? _Assessee;
        public int Assessee
        {
            get { return _Assessee.Value; }
            set { _Assessee = value; }
        }
        public bool ShouldSerializeAssessee()
        {
            return (_Assessee.HasValue);
        }

        public string APTDSAccount { get; set; }
        public string APSurchargeAccount { get; set; }
        public string APCessAccount { get; set; }
        public string APHSCAccount { get; set; }
        public string ARTDSAccount { get; set; }
        public string ARSurchargeAccount { get; set; }
        public string ARCessAccount { get; set; }
        public string ARHSCAccount { get; set; }
        private int? _Location;
        public int Location
        {
            get { return _Location.Value; }
            set { _Location = value; }
        }
        public bool ShouldSerializeLocation()
        {
            return (_Location.HasValue);
        }

        private SAPB1.ReturnTypeEnum? _ReturnType;
        public SAPB1.ReturnTypeEnum ReturnType
        {
            get { return _ReturnType.Value; }
            set { _ReturnType = value; }
        }
        public bool ShouldSerializeReturnType()
        {
            return (_ReturnType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Inactive;
        public SAPB1.BoYesNoEnum Inactive
        {
            get { return _Inactive.Value; }
            set { _Inactive = value; }
        }
        public bool ShouldSerializeInactive()
        {
            return (_Inactive.HasValue);
        }

        private int? _CSTCodeIncomingID;
        public int CSTCodeIncomingID
        {
            get { return _CSTCodeIncomingID.Value; }
            set { _CSTCodeIncomingID = value; }
        }
        public bool ShouldSerializeCSTCodeIncomingID()
        {
            return (_CSTCodeIncomingID.HasValue);
        }

        private int? _CSTCodeOutgoingID;
        public int CSTCodeOutgoingID
        {
            get { return _CSTCodeOutgoingID.Value; }
            set { _CSTCodeOutgoingID = value; }
        }
        public bool ShouldSerializeCSTCodeOutgoingID()
        {
            return (_CSTCodeOutgoingID.HasValue);
        }

        public string NatureOfCalculationBaseCode { get; set; }
        private int? _TypeID;
        public int TypeID
        {
            get { return _TypeID.Value; }
            set { _TypeID = value; }
        }
        public bool ShouldSerializeTypeID()
        {
            return (_TypeID.HasValue);
        }

        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

        private DateTime? _EffectiveFrom;
        public DateTime EffectiveFrom
        {
            get { return _EffectiveFrom.Value; }
            set { _EffectiveFrom = value; }
        }
        public bool ShouldSerializeEffectiveFrom()
        {
            return (_EffectiveFrom.HasValue);
        }

        private decimal? _MinimumTaxableAmount;
        public decimal MinimumTaxableAmount
        {
            get { return _MinimumTaxableAmount.Value; }
            set { _MinimumTaxableAmount = value; }
        }
        public bool ShouldSerializeMinimumTaxableAmount()
        {
            return (_MinimumTaxableAmount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsProgressiveTax;
        public SAPB1.BoYesNoEnum IsProgressiveTax
        {
            get { return _IsProgressiveTax.Value; }
            set { _IsProgressiveTax = value; }
        }
        public bool ShouldSerializeIsProgressiveTax()
        {
            return (_IsProgressiveTax.HasValue);
        }

        public string Currency { get; set; }
        public System.Collections.Generic.List<SAPB1.WithholdingTaxCodes_Line> WithholdingTaxCodes_Lines { get; set; }
    }

    public class WithholdingTaxCodes_Line
    {
        private DateTime? _Effectivefrom;
        public DateTime Effectivefrom
        {
            get { return _Effectivefrom.Value; }
            set { _Effectivefrom = value; }
        }
        public bool ShouldSerializeEffectivefrom()
        {
            return (_Effectivefrom.HasValue);
        }

        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

        private decimal? _TDSRate;
        public decimal TDSRate
        {
            get { return _TDSRate.Value; }
            set { _TDSRate = value; }
        }
        public bool ShouldSerializeTDSRate()
        {
            return (_TDSRate.HasValue);
        }

        private decimal? _SurchargeRate;
        public decimal SurchargeRate
        {
            get { return _SurchargeRate.Value; }
            set { _SurchargeRate = value; }
        }
        public bool ShouldSerializeSurchargeRate()
        {
            return (_SurchargeRate.HasValue);
        }

        private decimal? _CessRate;
        public decimal CessRate
        {
            get { return _CessRate.Value; }
            set { _CessRate = value; }
        }
        public bool ShouldSerializeCessRate()
        {
            return (_CessRate.HasValue);
        }

        private decimal? _HSCRate;
        public decimal HSCRate
        {
            get { return _HSCRate.Value; }
            set { _HSCRate = value; }
        }
        public bool ShouldSerializeHSCRate()
        {
            return (_HSCRate.HasValue);
        }

        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ProgressiveTax_Line> ProgressiveTax_Lines { get; set; }
        public System.Collections.Generic.List<SAPB1.WithholdingTaxCodes_ValueRange_Line> WithholdingTaxCodes_ValueRange_Lines { get; set; }
    }

    public class ProgressiveTax_Line
    {
        private decimal? _TaxRate;
        public decimal TaxRate
        {
            get { return _TaxRate.Value; }
            set { _TaxRate = value; }
        }
        public bool ShouldSerializeTaxRate()
        {
            return (_TaxRate.HasValue);
        }

        private decimal? _MinAmount;
        public decimal MinAmount
        {
            get { return _MinAmount.Value; }
            set { _MinAmount = value; }
        }
        public bool ShouldSerializeMinAmount()
        {
            return (_MinAmount.HasValue);
        }

        private decimal? _MaxAmount;
        public decimal MaxAmount
        {
            get { return _MaxAmount.Value; }
            set { _MaxAmount = value; }
        }
        public bool ShouldSerializeMaxAmount()
        {
            return (_MaxAmount.HasValue);
        }

    }

    public class WithholdingTaxCodes_ValueRange_Line
    {
        private decimal? _ValueFrom;
        public decimal ValueFrom
        {
            get { return _ValueFrom.Value; }
            set { _ValueFrom = value; }
        }
        public bool ShouldSerializeValueFrom()
        {
            return (_ValueFrom.HasValue);
        }

        private decimal? _WTaxToBeDeductible;
        public decimal WTaxToBeDeductible
        {
            get { return _WTaxToBeDeductible.Value; }
            set { _WTaxToBeDeductible = value; }
        }
        public bool ShouldSerializeWTaxToBeDeductible()
        {
            return (_WTaxToBeDeductible.HasValue);
        }

        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

    }

    public class BillOfExchangeTransactionParams
    {
        private int? _BOETransactionkey;
        public int BOETransactionkey
        {
            get { return _BOETransactionkey.Value; }
            set { _BOETransactionkey = value; }
        }
        public bool ShouldSerializeBOETransactionkey()
        {
            return (_BOETransactionkey.HasValue);
        }

    }

    public class BillOfExchangeTransaction
    {
        private SAPB1.BoBOTFromStatus? _StatusFrom;
        public SAPB1.BoBOTFromStatus StatusFrom
        {
            get { return _StatusFrom.Value; }
            set { _StatusFrom = value; }
        }
        public bool ShouldSerializeStatusFrom()
        {
            return (_StatusFrom.HasValue);
        }

        private SAPB1.BoBOTToStatus? _StatusTo;
        public SAPB1.BoBOTToStatus StatusTo
        {
            get { return _StatusTo.Value; }
            set { _StatusTo = value; }
        }
        public bool ShouldSerializeStatusTo()
        {
            return (_StatusTo.HasValue);
        }

        private DateTime? _TransactionDate;
        public DateTime TransactionDate
        {
            get { return _TransactionDate.Value; }
            set { _TransactionDate = value; }
        }
        public bool ShouldSerializeTransactionDate()
        {
            return (_TransactionDate.HasValue);
        }

        private TimeSpan? _TransactionTime;
        public TimeSpan TransactionTime
        {
            get { return _TransactionTime.Value; }
            set { _TransactionTime = value; }
        }
        public bool ShouldSerializeTransactionTime()
        {
            return (_TransactionTime.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsBoeReconciled;
        public SAPB1.BoYesNoEnum IsBoeReconciled
        {
            get { return _IsBoeReconciled.Value; }
            set { _IsBoeReconciled = value; }
        }
        public bool ShouldSerializeIsBoeReconciled()
        {
            return (_IsBoeReconciled.HasValue);
        }

        private int? _TransactionNumber;
        public int TransactionNumber
        {
            get { return _TransactionNumber.Value; }
            set { _TransactionNumber = value; }
        }
        public bool ShouldSerializeTransactionNumber()
        {
            return (_TransactionNumber.HasValue);
        }

        private DateTime? _PostingDate;
        public DateTime PostingDate
        {
            get { return _PostingDate.Value; }
            set { _PostingDate = value; }
        }
        public bool ShouldSerializePostingDate()
        {
            return (_PostingDate.HasValue);
        }

        private DateTime? _TaxDate;
        public DateTime TaxDate
        {
            get { return _TaxDate.Value; }
            set { _TaxDate = value; }
        }
        public bool ShouldSerializeTaxDate()
        {
            return (_TaxDate.HasValue);
        }

        private int? _BOETransactionkey;
        public int BOETransactionkey
        {
            get { return _BOETransactionkey.Value; }
            set { _BOETransactionkey = value; }
        }
        public bool ShouldSerializeBOETransactionkey()
        {
            return (_BOETransactionkey.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.BillOfExchangeTransactionLine> BillOfExchangeTransactionLines { get; set; }
        public System.Collections.Generic.List<SAPB1.BillOfExchangeTransDeposit> BillOfExchangeTransDeposits { get; set; }
        public System.Collections.Generic.List<SAPB1.BillOfExchangeTransBankPage> BillOfExchangeTransBankPages { get; set; }
    }

    public class BillOfExchangeTransactionLine
    {
        private int? _BillOfExchangeNo;
        public int BillOfExchangeNo
        {
            get { return _BillOfExchangeNo.Value; }
            set { _BillOfExchangeNo = value; }
        }
        public bool ShouldSerializeBillOfExchangeNo()
        {
            return (_BillOfExchangeNo.HasValue);
        }

        private SAPB1.BoBOETypes? _BillOfExchangeType;
        public SAPB1.BoBOETypes BillOfExchangeType
        {
            get { return _BillOfExchangeType.Value; }
            set { _BillOfExchangeType = value; }
        }
        public bool ShouldSerializeBillOfExchangeType()
        {
            return (_BillOfExchangeType.HasValue);
        }

        private DateTime? _BillOfExchangeDueDate;
        public DateTime BillOfExchangeDueDate
        {
            get { return _BillOfExchangeDueDate.Value; }
            set { _BillOfExchangeDueDate = value; }
        }
        public bool ShouldSerializeBillOfExchangeDueDate()
        {
            return (_BillOfExchangeDueDate.HasValue);
        }

    }

    public class BillOfExchangeTransDeposit
    {
        public string DepositNorm { get; set; }
        private SAPB1.BoDepositPostingTypes? _PostingType;
        public SAPB1.BoDepositPostingTypes PostingType
        {
            get { return _PostingType.Value; }
            set { _PostingType = value; }
        }
        public bool ShouldSerializePostingType()
        {
            return (_PostingType.HasValue);
        }

        public string BankCountry { get; set; }
        public string BankAccount { get; set; }
        public string BankDepositAccount { get; set; }
        public string BankBranch { get; set; }
    }

    public class BillOfExchangeTransBankPage
    {
        public string AccountCode { get; set; }
        private int? _Sequence;
        public int Sequence
        {
            get { return _Sequence.Value; }
            set { _Sequence = value; }
        }
        public bool ShouldSerializeSequence()
        {
            return (_Sequence.HasValue);
        }

    }

    public class KnowledgeBaseSolution
    {
        public string ItemCode { get; set; }
        private int? _Status;
        public int Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private int? _Owner;
        public int Owner
        {
            get { return _Owner.Value; }
            set { _Owner = value; }
        }
        public bool ShouldSerializeOwner()
        {
            return (_Owner.HasValue);
        }

        private int? _CreatedBy;
        public int CreatedBy
        {
            get { return _CreatedBy.Value; }
            set { _CreatedBy = value; }
        }
        public bool ShouldSerializeCreatedBy()
        {
            return (_CreatedBy.HasValue);
        }

        private DateTime? _CreationDate;
        public DateTime CreationDate
        {
            get { return _CreationDate.Value; }
            set { _CreationDate = value; }
        }
        public bool ShouldSerializeCreationDate()
        {
            return (_CreationDate.HasValue);
        }

        private int? _LastUpdatedBy;
        public int LastUpdatedBy
        {
            get { return _LastUpdatedBy.Value; }
            set { _LastUpdatedBy = value; }
        }
        public bool ShouldSerializeLastUpdatedBy()
        {
            return (_LastUpdatedBy.HasValue);
        }

        private DateTime? _LastUpdateDate;
        public DateTime LastUpdateDate
        {
            get { return _LastUpdateDate.Value; }
            set { _LastUpdateDate = value; }
        }
        public bool ShouldSerializeLastUpdateDate()
        {
            return (_LastUpdateDate.HasValue);
        }

        public string Solution { get; set; }
        public string Symptom { get; set; }
        public string Cause { get; set; }
        public string Description { get; set; }
        private int? _SolutionCode;
        public int SolutionCode
        {
            get { return _SolutionCode.Value; }
            set { _SolutionCode = value; }
        }
        public bool ShouldSerializeSolutionCode()
        {
            return (_SolutionCode.HasValue);
        }

        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

    }

    public class ServiceContractParams
    {
        private int? _ContractID;
        public int ContractID
        {
            get { return _ContractID.Value; }
            set { _ContractID = value; }
        }
        public bool ShouldSerializeContractID()
        {
            return (_ContractID.HasValue);
        }

    }

    public class ServiceContract
    {
        private int? _ContractID;
        public int ContractID
        {
            get { return _ContractID.Value; }
            set { _ContractID = value; }
        }
        public bool ShouldSerializeContractID()
        {
            return (_ContractID.HasValue);
        }

        public string CustomerCode { get; set; }
        public string CustomerName { get; set; }
        private int? _ContactCode;
        public int ContactCode
        {
            get { return _ContactCode.Value; }
            set { _ContactCode = value; }
        }
        public bool ShouldSerializeContactCode()
        {
            return (_ContactCode.HasValue);
        }

        private int? _Owner;
        public int Owner
        {
            get { return _Owner.Value; }
            set { _Owner = value; }
        }
        public bool ShouldSerializeOwner()
        {
            return (_Owner.HasValue);
        }

        private SAPB1.BoSvcContractStatus? _Status;
        public SAPB1.BoSvcContractStatus Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        public string ContractTemplate { get; set; }
        private SAPB1.BoContractTypes? _ContractType;
        public SAPB1.BoContractTypes ContractType
        {
            get { return _ContractType.Value; }
            set { _ContractType = value; }
        }
        public bool ShouldSerializeContractType()
        {
            return (_ContractType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Renewal;
        public SAPB1.BoYesNoEnum Renewal
        {
            get { return _Renewal.Value; }
            set { _Renewal = value; }
        }
        public bool ShouldSerializeRenewal()
        {
            return (_Renewal.HasValue);
        }

        private int? _ReminderTime;
        public int ReminderTime
        {
            get { return _ReminderTime.Value; }
            set { _ReminderTime = value; }
        }
        public bool ShouldSerializeReminderTime()
        {
            return (_ReminderTime.HasValue);
        }

        private SAPB1.BoRemindUnits? _RemindUnit;
        public SAPB1.BoRemindUnits RemindUnit
        {
            get { return _RemindUnit.Value; }
            set { _RemindUnit = value; }
        }
        public bool ShouldSerializeRemindUnit()
        {
            return (_RemindUnit.HasValue);
        }

        private int? _DurationOfCoverage;
        public int DurationOfCoverage
        {
            get { return _DurationOfCoverage.Value; }
            set { _DurationOfCoverage = value; }
        }
        public bool ShouldSerializeDurationOfCoverage()
        {
            return (_DurationOfCoverage.HasValue);
        }

        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private DateTime? _EndDate;
        public DateTime EndDate
        {
            get { return _EndDate.Value; }
            set { _EndDate = value; }
        }
        public bool ShouldSerializeEndDate()
        {
            return (_EndDate.HasValue);
        }

        private int? _ResolutionTime;
        public int ResolutionTime
        {
            get { return _ResolutionTime.Value; }
            set { _ResolutionTime = value; }
        }
        public bool ShouldSerializeResolutionTime()
        {
            return (_ResolutionTime.HasValue);
        }

        private SAPB1.BoResolutionUnits? _ResolutionUnit;
        public SAPB1.BoResolutionUnits ResolutionUnit
        {
            get { return _ResolutionUnit.Value; }
            set { _ResolutionUnit = value; }
        }
        public bool ShouldSerializeResolutionUnit()
        {
            return (_ResolutionUnit.HasValue);
        }

        public string Description { get; set; }
        private SAPB1.BoYesNoEnum? _MondayEnabled;
        public SAPB1.BoYesNoEnum MondayEnabled
        {
            get { return _MondayEnabled.Value; }
            set { _MondayEnabled = value; }
        }
        public bool ShouldSerializeMondayEnabled()
        {
            return (_MondayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TuesdayEnabled;
        public SAPB1.BoYesNoEnum TuesdayEnabled
        {
            get { return _TuesdayEnabled.Value; }
            set { _TuesdayEnabled = value; }
        }
        public bool ShouldSerializeTuesdayEnabled()
        {
            return (_TuesdayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WednesdayEnabled;
        public SAPB1.BoYesNoEnum WednesdayEnabled
        {
            get { return _WednesdayEnabled.Value; }
            set { _WednesdayEnabled = value; }
        }
        public bool ShouldSerializeWednesdayEnabled()
        {
            return (_WednesdayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ThursdayEnabled;
        public SAPB1.BoYesNoEnum ThursdayEnabled
        {
            get { return _ThursdayEnabled.Value; }
            set { _ThursdayEnabled = value; }
        }
        public bool ShouldSerializeThursdayEnabled()
        {
            return (_ThursdayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _FridayEnabled;
        public SAPB1.BoYesNoEnum FridayEnabled
        {
            get { return _FridayEnabled.Value; }
            set { _FridayEnabled = value; }
        }
        public bool ShouldSerializeFridayEnabled()
        {
            return (_FridayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SaturdayEnabled;
        public SAPB1.BoYesNoEnum SaturdayEnabled
        {
            get { return _SaturdayEnabled.Value; }
            set { _SaturdayEnabled = value; }
        }
        public bool ShouldSerializeSaturdayEnabled()
        {
            return (_SaturdayEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SundayEnabled;
        public SAPB1.BoYesNoEnum SundayEnabled
        {
            get { return _SundayEnabled.Value; }
            set { _SundayEnabled = value; }
        }
        public bool ShouldSerializeSundayEnabled()
        {
            return (_SundayEnabled.HasValue);
        }

        private TimeSpan? _MondayStart;
        public TimeSpan MondayStart
        {
            get { return _MondayStart.Value; }
            set { _MondayStart = value; }
        }
        public bool ShouldSerializeMondayStart()
        {
            return (_MondayStart.HasValue);
        }

        private TimeSpan? _MondayEnd;
        public TimeSpan MondayEnd
        {
            get { return _MondayEnd.Value; }
            set { _MondayEnd = value; }
        }
        public bool ShouldSerializeMondayEnd()
        {
            return (_MondayEnd.HasValue);
        }

        private TimeSpan? _TuesdayStart;
        public TimeSpan TuesdayStart
        {
            get { return _TuesdayStart.Value; }
            set { _TuesdayStart = value; }
        }
        public bool ShouldSerializeTuesdayStart()
        {
            return (_TuesdayStart.HasValue);
        }

        private TimeSpan? _TuesdayEnd;
        public TimeSpan TuesdayEnd
        {
            get { return _TuesdayEnd.Value; }
            set { _TuesdayEnd = value; }
        }
        public bool ShouldSerializeTuesdayEnd()
        {
            return (_TuesdayEnd.HasValue);
        }

        private TimeSpan? _WednesdayStart;
        public TimeSpan WednesdayStart
        {
            get { return _WednesdayStart.Value; }
            set { _WednesdayStart = value; }
        }
        public bool ShouldSerializeWednesdayStart()
        {
            return (_WednesdayStart.HasValue);
        }

        private TimeSpan? _WednesdayEnd;
        public TimeSpan WednesdayEnd
        {
            get { return _WednesdayEnd.Value; }
            set { _WednesdayEnd = value; }
        }
        public bool ShouldSerializeWednesdayEnd()
        {
            return (_WednesdayEnd.HasValue);
        }

        private TimeSpan? _ThursdayStart;
        public TimeSpan ThursdayStart
        {
            get { return _ThursdayStart.Value; }
            set { _ThursdayStart = value; }
        }
        public bool ShouldSerializeThursdayStart()
        {
            return (_ThursdayStart.HasValue);
        }

        private TimeSpan? _ThursdayEnd;
        public TimeSpan ThursdayEnd
        {
            get { return _ThursdayEnd.Value; }
            set { _ThursdayEnd = value; }
        }
        public bool ShouldSerializeThursdayEnd()
        {
            return (_ThursdayEnd.HasValue);
        }

        private TimeSpan? _FridayStart;
        public TimeSpan FridayStart
        {
            get { return _FridayStart.Value; }
            set { _FridayStart = value; }
        }
        public bool ShouldSerializeFridayStart()
        {
            return (_FridayStart.HasValue);
        }

        private TimeSpan? _FridayEnd;
        public TimeSpan FridayEnd
        {
            get { return _FridayEnd.Value; }
            set { _FridayEnd = value; }
        }
        public bool ShouldSerializeFridayEnd()
        {
            return (_FridayEnd.HasValue);
        }

        private TimeSpan? _SaturdayStart;
        public TimeSpan SaturdayStart
        {
            get { return _SaturdayStart.Value; }
            set { _SaturdayStart = value; }
        }
        public bool ShouldSerializeSaturdayStart()
        {
            return (_SaturdayStart.HasValue);
        }

        private TimeSpan? _SaturdayEnd;
        public TimeSpan SaturdayEnd
        {
            get { return _SaturdayEnd.Value; }
            set { _SaturdayEnd = value; }
        }
        public bool ShouldSerializeSaturdayEnd()
        {
            return (_SaturdayEnd.HasValue);
        }

        private TimeSpan? _SundayStart;
        public TimeSpan SundayStart
        {
            get { return _SundayStart.Value; }
            set { _SundayStart = value; }
        }
        public bool ShouldSerializeSundayStart()
        {
            return (_SundayStart.HasValue);
        }

        private TimeSpan? _SundayEnd;
        public TimeSpan SundayEnd
        {
            get { return _SundayEnd.Value; }
            set { _SundayEnd = value; }
        }
        public bool ShouldSerializeSundayEnd()
        {
            return (_SundayEnd.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IncludeParts;
        public SAPB1.BoYesNoEnum IncludeParts
        {
            get { return _IncludeParts.Value; }
            set { _IncludeParts = value; }
        }
        public bool ShouldSerializeIncludeParts()
        {
            return (_IncludeParts.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IncludeLabor;
        public SAPB1.BoYesNoEnum IncludeLabor
        {
            get { return _IncludeLabor.Value; }
            set { _IncludeLabor = value; }
        }
        public bool ShouldSerializeIncludeLabor()
        {
            return (_IncludeLabor.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IncludeTravel;
        public SAPB1.BoYesNoEnum IncludeTravel
        {
            get { return _IncludeTravel.Value; }
            set { _IncludeTravel = value; }
        }
        public bool ShouldSerializeIncludeTravel()
        {
            return (_IncludeTravel.HasValue);
        }

        public string TemplateRemarks { get; set; }
        public string Remarks { get; set; }
        private SAPB1.BoYesNoEnum? _IncludeHolidays;
        public SAPB1.BoYesNoEnum IncludeHolidays
        {
            get { return _IncludeHolidays.Value; }
            set { _IncludeHolidays = value; }
        }
        public bool ShouldSerializeIncludeHolidays()
        {
            return (_IncludeHolidays.HasValue);
        }

        private SAPB1.BoServiceTypes? _ServiceType;
        public SAPB1.BoServiceTypes ServiceType
        {
            get { return _ServiceType.Value; }
            set { _ServiceType = value; }
        }
        public bool ShouldSerializeServiceType()
        {
            return (_ServiceType.HasValue);
        }

        private SAPB1.BoResponseUnit? _ResponseUnit;
        public SAPB1.BoResponseUnit ResponseUnit
        {
            get { return _ResponseUnit.Value; }
            set { _ResponseUnit = value; }
        }
        public bool ShouldSerializeResponseUnit()
        {
            return (_ResponseUnit.HasValue);
        }

        private int? _ResponseTime;
        public int ResponseTime
        {
            get { return _ResponseTime.Value; }
            set { _ResponseTime = value; }
        }
        public bool ShouldSerializeResponseTime()
        {
            return (_ResponseTime.HasValue);
        }

        private DateTime? _TerminationDate;
        public DateTime TerminationDate
        {
            get { return _TerminationDate.Value; }
            set { _TerminationDate = value; }
        }
        public bool ShouldSerializeTerminationDate()
        {
            return (_TerminationDate.HasValue);
        }

        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

        private SAPB1.ServiceTypeEnum? _ServiceBPType;
        public SAPB1.ServiceTypeEnum ServiceBPType
        {
            get { return _ServiceBPType.Value; }
            set { _ServiceBPType = value; }
        }
        public bool ShouldSerializeServiceBPType()
        {
            return (_ServiceBPType.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ServiceContract_Line> ServiceContract_Lines { get; set; }
    }

    public class ServiceContract_Line
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        public string ManufacturerSerialNum { get; set; }
        public string InternalSerialNum { get; set; }
        public string ItemCode { get; set; }
        public string ItemName { get; set; }
        private int? _ItemGroup;
        public int ItemGroup
        {
            get { return _ItemGroup.Value; }
            set { _ItemGroup = value; }
        }
        public bool ShouldSerializeItemGroup()
        {
            return (_ItemGroup.HasValue);
        }

        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private DateTime? _EndDate;
        public DateTime EndDate
        {
            get { return _EndDate.Value; }
            set { _EndDate = value; }
        }
        public bool ShouldSerializeEndDate()
        {
            return (_EndDate.HasValue);
        }

        public string ItemGroupName { get; set; }
        private DateTime? _TerminationDate;
        public DateTime TerminationDate
        {
            get { return _TerminationDate.Value; }
            set { _TerminationDate = value; }
        }
        public bool ShouldSerializeTerminationDate()
        {
            return (_TerminationDate.HasValue);
        }

    }

    public class ServiceCallParams
    {
        private int? _ServiceCallID;
        public int ServiceCallID
        {
            get { return _ServiceCallID.Value; }
            set { _ServiceCallID = value; }
        }
        public bool ShouldSerializeServiceCallID()
        {
            return (_ServiceCallID.HasValue);
        }

    }

    public class ServiceCall
    {
        private int? _ServiceCallID;
        public int ServiceCallID
        {
            get { return _ServiceCallID.Value; }
            set { _ServiceCallID = value; }
        }
        public bool ShouldSerializeServiceCallID()
        {
            return (_ServiceCallID.HasValue);
        }

        public string Subject { get; set; }
        public string CustomerCode { get; set; }
        public string CustomerName { get; set; }
        private int? _ContactCode;
        public int ContactCode
        {
            get { return _ContactCode.Value; }
            set { _ContactCode = value; }
        }
        public bool ShouldSerializeContactCode()
        {
            return (_ContactCode.HasValue);
        }

        public string ManufacturerSerialNum { get; set; }
        public string InternalSerialNum { get; set; }
        private int? _ContractID;
        public int ContractID
        {
            get { return _ContractID.Value; }
            set { _ContractID = value; }
        }
        public bool ShouldSerializeContractID()
        {
            return (_ContractID.HasValue);
        }

        private DateTime? _ContractEndDate;
        public DateTime ContractEndDate
        {
            get { return _ContractEndDate.Value; }
            set { _ContractEndDate = value; }
        }
        public bool ShouldSerializeContractEndDate()
        {
            return (_ContractEndDate.HasValue);
        }

        private DateTime? _ResolutionDate;
        public DateTime ResolutionDate
        {
            get { return _ResolutionDate.Value; }
            set { _ResolutionDate = value; }
        }
        public bool ShouldSerializeResolutionDate()
        {
            return (_ResolutionDate.HasValue);
        }

        private TimeSpan? _ResolutionTime;
        public TimeSpan ResolutionTime
        {
            get { return _ResolutionTime.Value; }
            set { _ResolutionTime = value; }
        }
        public bool ShouldSerializeResolutionTime()
        {
            return (_ResolutionTime.HasValue);
        }

        private int? _Origin;
        public int Origin
        {
            get { return _Origin.Value; }
            set { _Origin = value; }
        }
        public bool ShouldSerializeOrigin()
        {
            return (_Origin.HasValue);
        }

        public string ItemCode { get; set; }
        public string ItemDescription { get; set; }
        private int? _ItemGroupCode;
        public int ItemGroupCode
        {
            get { return _ItemGroupCode.Value; }
            set { _ItemGroupCode = value; }
        }
        public bool ShouldSerializeItemGroupCode()
        {
            return (_ItemGroupCode.HasValue);
        }

        private int? _Status;
        public int Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private SAPB1.BoSvcCallPriorities? _Priority;
        public SAPB1.BoSvcCallPriorities Priority
        {
            get { return _Priority.Value; }
            set { _Priority = value; }
        }
        public bool ShouldSerializePriority()
        {
            return (_Priority.HasValue);
        }

        private int? _CallType;
        public int CallType
        {
            get { return _CallType.Value; }
            set { _CallType = value; }
        }
        public bool ShouldSerializeCallType()
        {
            return (_CallType.HasValue);
        }

        private int? _ProblemType;
        public int ProblemType
        {
            get { return _ProblemType.Value; }
            set { _ProblemType = value; }
        }
        public bool ShouldSerializeProblemType()
        {
            return (_ProblemType.HasValue);
        }

        private int? _AssigneeCode;
        public int AssigneeCode
        {
            get { return _AssigneeCode.Value; }
            set { _AssigneeCode = value; }
        }
        public bool ShouldSerializeAssigneeCode()
        {
            return (_AssigneeCode.HasValue);
        }

        public string Description { get; set; }
        private int? _TechnicianCode;
        public int TechnicianCode
        {
            get { return _TechnicianCode.Value; }
            set { _TechnicianCode = value; }
        }
        public bool ShouldSerializeTechnicianCode()
        {
            return (_TechnicianCode.HasValue);
        }

        public string Resolution { get; set; }
        private DateTime? _CreationDate;
        public DateTime CreationDate
        {
            get { return _CreationDate.Value; }
            set { _CreationDate = value; }
        }
        public bool ShouldSerializeCreationDate()
        {
            return (_CreationDate.HasValue);
        }

        private TimeSpan? _CreationTime;
        public TimeSpan CreationTime
        {
            get { return _CreationTime.Value; }
            set { _CreationTime = value; }
        }
        public bool ShouldSerializeCreationTime()
        {
            return (_CreationTime.HasValue);
        }

        private int? _Responder;
        public int Responder
        {
            get { return _Responder.Value; }
            set { _Responder = value; }
        }
        public bool ShouldSerializeResponder()
        {
            return (_Responder.HasValue);
        }

        private TimeSpan? _UpdatedTime;
        public TimeSpan UpdatedTime
        {
            get { return _UpdatedTime.Value; }
            set { _UpdatedTime = value; }
        }
        public bool ShouldSerializeUpdatedTime()
        {
            return (_UpdatedTime.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BelongsToAQueue;
        public SAPB1.BoYesNoEnum BelongsToAQueue
        {
            get { return _BelongsToAQueue.Value; }
            set { _BelongsToAQueue = value; }
        }
        public bool ShouldSerializeBelongsToAQueue()
        {
            return (_BelongsToAQueue.HasValue);
        }

        private TimeSpan? _ResponseByTime;
        public TimeSpan ResponseByTime
        {
            get { return _ResponseByTime.Value; }
            set { _ResponseByTime = value; }
        }
        public bool ShouldSerializeResponseByTime()
        {
            return (_ResponseByTime.HasValue);
        }

        private DateTime? _ResponseByDate;
        public DateTime ResponseByDate
        {
            get { return _ResponseByDate.Value; }
            set { _ResponseByDate = value; }
        }
        public bool ShouldSerializeResponseByDate()
        {
            return (_ResponseByDate.HasValue);
        }

        private DateTime? _ResolutionOnDate;
        public DateTime ResolutionOnDate
        {
            get { return _ResolutionOnDate.Value; }
            set { _ResolutionOnDate = value; }
        }
        public bool ShouldSerializeResolutionOnDate()
        {
            return (_ResolutionOnDate.HasValue);
        }

        private TimeSpan? _ResponseOnTime;
        public TimeSpan ResponseOnTime
        {
            get { return _ResponseOnTime.Value; }
            set { _ResponseOnTime = value; }
        }
        public bool ShouldSerializeResponseOnTime()
        {
            return (_ResponseOnTime.HasValue);
        }

        private DateTime? _ResponseOnDate;
        public DateTime ResponseOnDate
        {
            get { return _ResponseOnDate.Value; }
            set { _ResponseOnDate = value; }
        }
        public bool ShouldSerializeResponseOnDate()
        {
            return (_ResponseOnDate.HasValue);
        }

        private TimeSpan? _ClosingTime;
        public TimeSpan ClosingTime
        {
            get { return _ClosingTime.Value; }
            set { _ClosingTime = value; }
        }
        public bool ShouldSerializeClosingTime()
        {
            return (_ClosingTime.HasValue);
        }

        private DateTime? _AssignedDate;
        public DateTime AssignedDate
        {
            get { return _AssignedDate.Value; }
            set { _AssignedDate = value; }
        }
        public bool ShouldSerializeAssignedDate()
        {
            return (_AssignedDate.HasValue);
        }

        public string Queue { get; set; }
        private int? _ResponseAssignee;
        public int ResponseAssignee
        {
            get { return _ResponseAssignee.Value; }
            set { _ResponseAssignee = value; }
        }
        public bool ShouldSerializeResponseAssignee()
        {
            return (_ResponseAssignee.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EntitledforService;
        public SAPB1.BoYesNoEnum EntitledforService
        {
            get { return _EntitledforService.Value; }
            set { _EntitledforService = value; }
        }
        public bool ShouldSerializeEntitledforService()
        {
            return (_EntitledforService.HasValue);
        }

        private TimeSpan? _ResolutionOnTime;
        public TimeSpan ResolutionOnTime
        {
            get { return _ResolutionOnTime.Value; }
            set { _ResolutionOnTime = value; }
        }
        public bool ShouldSerializeResolutionOnTime()
        {
            return (_ResolutionOnTime.HasValue);
        }

        private TimeSpan? _AssignedTime;
        public TimeSpan AssignedTime
        {
            get { return _AssignedTime.Value; }
            set { _AssignedTime = value; }
        }
        public bool ShouldSerializeAssignedTime()
        {
            return (_AssignedTime.HasValue);
        }

        private DateTime? _ClosingDate;
        public DateTime ClosingDate
        {
            get { return _ClosingDate.Value; }
            set { _ClosingDate = value; }
        }
        public bool ShouldSerializeClosingDate()
        {
            return (_ClosingDate.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private int? _DocNum;
        public int DocNum
        {
            get { return _DocNum.Value; }
            set { _DocNum = value; }
        }
        public bool ShouldSerializeDocNum()
        {
            return (_DocNum.HasValue);
        }

        private SAPB1.BoYesNoEnum? _HandWritten;
        public SAPB1.BoYesNoEnum HandWritten
        {
            get { return _HandWritten.Value; }
            set { _HandWritten = value; }
        }
        public bool ShouldSerializeHandWritten()
        {
            return (_HandWritten.HasValue);
        }

        public string PeriodIndicator { get; set; }
        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private TimeSpan? _StartTime;
        public TimeSpan StartTime
        {
            get { return _StartTime.Value; }
            set { _StartTime = value; }
        }
        public bool ShouldSerializeStartTime()
        {
            return (_StartTime.HasValue);
        }

        private DateTime? _EndDueDate;
        public DateTime EndDueDate
        {
            get { return _EndDueDate.Value; }
            set { _EndDueDate = value; }
        }
        public bool ShouldSerializeEndDueDate()
        {
            return (_EndDueDate.HasValue);
        }

        private TimeSpan? _EndTime;
        public TimeSpan EndTime
        {
            get { return _EndTime.Value; }
            set { _EndTime = value; }
        }
        public bool ShouldSerializeEndTime()
        {
            return (_EndTime.HasValue);
        }

        private decimal? _Duration;
        public decimal Duration
        {
            get { return _Duration.Value; }
            set { _Duration = value; }
        }
        public bool ShouldSerializeDuration()
        {
            return (_Duration.HasValue);
        }

        private SAPB1.BoDurations? _DurationType;
        public SAPB1.BoDurations DurationType
        {
            get { return _DurationType.Value; }
            set { _DurationType = value; }
        }
        public bool ShouldSerializeDurationType()
        {
            return (_DurationType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Reminder;
        public SAPB1.BoYesNoEnum Reminder
        {
            get { return _Reminder.Value; }
            set { _Reminder = value; }
        }
        public bool ShouldSerializeReminder()
        {
            return (_Reminder.HasValue);
        }

        private decimal? _ReminderPeriod;
        public decimal ReminderPeriod
        {
            get { return _ReminderPeriod.Value; }
            set { _ReminderPeriod = value; }
        }
        public bool ShouldSerializeReminderPeriod()
        {
            return (_ReminderPeriod.HasValue);
        }

        private SAPB1.BoDurations? _ReminderType;
        public SAPB1.BoDurations ReminderType
        {
            get { return _ReminderType.Value; }
            set { _ReminderType = value; }
        }
        public bool ShouldSerializeReminderType()
        {
            return (_ReminderType.HasValue);
        }

        private int? _Location;
        public int Location
        {
            get { return _Location.Value; }
            set { _Location = value; }
        }
        public bool ShouldSerializeLocation()
        {
            return (_Location.HasValue);
        }

        public string AddressName { get; set; }
        private SAPB1.BoAddressType? _AddressType;
        public SAPB1.BoAddressType AddressType
        {
            get { return _AddressType.Value; }
            set { _AddressType = value; }
        }
        public bool ShouldSerializeAddressType()
        {
            return (_AddressType.HasValue);
        }

        public string Street { get; set; }
        public string City { get; set; }
        public string Room { get; set; }
        public string State { get; set; }
        public string Country { get; set; }
        private SAPB1.BoYesNoEnum? _DisplayInCalendar;
        public SAPB1.BoYesNoEnum DisplayInCalendar
        {
            get { return _DisplayInCalendar.Value; }
            set { _DisplayInCalendar = value; }
        }
        public bool ShouldSerializeDisplayInCalendar()
        {
            return (_DisplayInCalendar.HasValue);
        }

        public string CustomerRefNo { get; set; }
        private int? _ProblemSubType;
        public int ProblemSubType
        {
            get { return _ProblemSubType.Value; }
            set { _ProblemSubType = value; }
        }
        public bool ShouldSerializeProblemSubType()
        {
            return (_ProblemSubType.HasValue);
        }

        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

        private SAPB1.ServiceTypeEnum? _ServiceBPType;
        public SAPB1.ServiceTypeEnum ServiceBPType
        {
            get { return _ServiceBPType.Value; }
            set { _ServiceBPType = value; }
        }
        public bool ShouldSerializeServiceBPType()
        {
            return (_ServiceBPType.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ServiceCallActivity> ServiceCallActivities { get; set; }
        public System.Collections.Generic.List<SAPB1.ServiceCallInventoryExpense> ServiceCallInventoryExpenses { get; set; }
        public System.Collections.Generic.List<SAPB1.ServiceCallSolution> ServiceCallSolutions { get; set; }
        public System.Collections.Generic.List<SAPB1.ServiceCallScheduling> ServiceCallSchedulings { get; set; }
    }

    public class ServiceCallActivity
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _ActivityCode;
        public int ActivityCode
        {
            get { return _ActivityCode.Value; }
            set { _ActivityCode = value; }
        }
        public bool ShouldSerializeActivityCode()
        {
            return (_ActivityCode.HasValue);
        }

    }

    public class ServiceCallInventoryExpense
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private SAPB1.BoSvcExpPartTypes? _PartType;
        public SAPB1.BoSvcExpPartTypes PartType
        {
            get { return _PartType.Value; }
            set { _PartType = value; }
        }
        public bool ShouldSerializePartType()
        {
            return (_PartType.HasValue);
        }

        private SAPB1.BoSvcEpxDocTypes? _DocumentType;
        public SAPB1.BoSvcEpxDocTypes DocumentType
        {
            get { return _DocumentType.Value; }
            set { _DocumentType = value; }
        }
        public bool ShouldSerializeDocumentType()
        {
            return (_DocumentType.HasValue);
        }

        private DateTime? _DocumentPostingDate;
        public DateTime DocumentPostingDate
        {
            get { return _DocumentPostingDate.Value; }
            set { _DocumentPostingDate = value; }
        }
        public bool ShouldSerializeDocumentPostingDate()
        {
            return (_DocumentPostingDate.HasValue);
        }

        private int? _DocumentNumber;
        public int DocumentNumber
        {
            get { return _DocumentNumber.Value; }
            set { _DocumentNumber = value; }
        }
        public bool ShouldSerializeDocumentNumber()
        {
            return (_DocumentNumber.HasValue);
        }

        private SAPB1.BoStckTrnDir? _StockTransferDirection;
        public SAPB1.BoStckTrnDir StockTransferDirection
        {
            get { return _StockTransferDirection.Value; }
            set { _StockTransferDirection = value; }
        }
        public bool ShouldSerializeStockTransferDirection()
        {
            return (_StockTransferDirection.HasValue);
        }

        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

    }

    public class ServiceCallSolution
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _SolutionID;
        public int SolutionID
        {
            get { return _SolutionID.Value; }
            set { _SolutionID = value; }
        }
        public bool ShouldSerializeSolutionID()
        {
            return (_SolutionID.HasValue);
        }

    }

    public class ServiceCallScheduling
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _Technician;
        public int Technician
        {
            get { return _Technician.Value; }
            set { _Technician = value; }
        }
        public bool ShouldSerializeTechnician()
        {
            return (_Technician.HasValue);
        }

        private int? _HandledBy;
        public int HandledBy
        {
            get { return _HandledBy.Value; }
            set { _HandledBy = value; }
        }
        public bool ShouldSerializeHandledBy()
        {
            return (_HandledBy.HasValue);
        }

        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private TimeSpan? _StartTime;
        public TimeSpan StartTime
        {
            get { return _StartTime.Value; }
            set { _StartTime = value; }
        }
        public bool ShouldSerializeStartTime()
        {
            return (_StartTime.HasValue);
        }

        private DateTime? _EndDate;
        public DateTime EndDate
        {
            get { return _EndDate.Value; }
            set { _EndDate = value; }
        }
        public bool ShouldSerializeEndDate()
        {
            return (_EndDate.HasValue);
        }

        private TimeSpan? _EndTime;
        public TimeSpan EndTime
        {
            get { return _EndTime.Value; }
            set { _EndTime = value; }
        }
        public bool ShouldSerializeEndTime()
        {
            return (_EndTime.HasValue);
        }

        private decimal? _Duration;
        public decimal Duration
        {
            get { return _Duration.Value; }
            set { _Duration = value; }
        }
        public bool ShouldSerializeDuration()
        {
            return (_Duration.HasValue);
        }

        private decimal? _ActualDuration;
        public decimal ActualDuration
        {
            get { return _ActualDuration.Value; }
            set { _ActualDuration = value; }
        }
        public bool ShouldSerializeActualDuration()
        {
            return (_ActualDuration.HasValue);
        }

        private SAPB1.BoDurations? _DurationType;
        public SAPB1.BoDurations DurationType
        {
            get { return _DurationType.Value; }
            set { _DurationType = value; }
        }
        public bool ShouldSerializeDurationType()
        {
            return (_DurationType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Reminder;
        public SAPB1.BoYesNoEnum Reminder
        {
            get { return _Reminder.Value; }
            set { _Reminder = value; }
        }
        public bool ShouldSerializeReminder()
        {
            return (_Reminder.HasValue);
        }

        private decimal? _ReminderPeriod;
        public decimal ReminderPeriod
        {
            get { return _ReminderPeriod.Value; }
            set { _ReminderPeriod = value; }
        }
        public bool ShouldSerializeReminderPeriod()
        {
            return (_ReminderPeriod.HasValue);
        }

        private SAPB1.BoDurations? _ReminderType;
        public SAPB1.BoDurations ReminderType
        {
            get { return _ReminderType.Value; }
            set { _ReminderType = value; }
        }
        public bool ShouldSerializeReminderType()
        {
            return (_ReminderType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReminderSent;
        public SAPB1.BoYesNoEnum ReminderSent
        {
            get { return _ReminderSent.Value; }
            set { _ReminderSent = value; }
        }
        public bool ShouldSerializeReminderSent()
        {
            return (_ReminderSent.HasValue);
        }

        private DateTime? _ReminderDate;
        public DateTime ReminderDate
        {
            get { return _ReminderDate.Value; }
            set { _ReminderDate = value; }
        }
        public bool ShouldSerializeReminderDate()
        {
            return (_ReminderDate.HasValue);
        }

        private TimeSpan? _ReminderTime;
        public TimeSpan ReminderTime
        {
            get { return _ReminderTime.Value; }
            set { _ReminderTime = value; }
        }
        public bool ShouldSerializeReminderTime()
        {
            return (_ReminderTime.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DisplayInCalendar;
        public SAPB1.BoYesNoEnum DisplayInCalendar
        {
            get { return _DisplayInCalendar.Value; }
            set { _DisplayInCalendar = value; }
        }
        public bool ShouldSerializeDisplayInCalendar()
        {
            return (_DisplayInCalendar.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsUnscheduled;
        public SAPB1.BoYesNoEnum IsUnscheduled
        {
            get { return _IsUnscheduled.Value; }
            set { _IsUnscheduled = value; }
        }
        public bool ShouldSerializeIsUnscheduled()
        {
            return (_IsUnscheduled.HasValue);
        }

        private int? _Location;
        public int Location
        {
            get { return _Location.Value; }
            set { _Location = value; }
        }
        public bool ShouldSerializeLocation()
        {
            return (_Location.HasValue);
        }

        public string AddressName { get; set; }
        public string AddressText { get; set; }
        public string Street { get; set; }
        public string City { get; set; }
        public string Room { get; set; }
        public string State { get; set; }
        public string Country { get; set; }
        public string Address2 { get; set; }
        public string Address3 { get; set; }
        public string AddressType { get; set; }
        public string StreetNo { get; set; }
        public string ZipCode { get; set; }
        public string Block { get; set; }
        public string County { get; set; }
        public string TaxOffice { get; set; }
        public string GlobalLocNum { get; set; }
        private SAPB1.BoYesNoEnum? _IsClosed;
        public SAPB1.BoYesNoEnum IsClosed
        {
            get { return _IsClosed.Value; }
            set { _IsClosed = value; }
        }
        public bool ShouldSerializeIsClosed()
        {
            return (_IsClosed.HasValue);
        }

        public string Remark { get; set; }
        private SAPB1.BoAddressType? _AddressTypeBS;
        public SAPB1.BoAddressType AddressTypeBS
        {
            get { return _AddressTypeBS.Value; }
            set { _AddressTypeBS = value; }
        }
        public bool ShouldSerializeAddressTypeBS()
        {
            return (_AddressTypeBS.HasValue);
        }

    }

    public class UserKeysMD
    {
        public string TableName { get; set; }
        private int? _KeyIndex;
        public int KeyIndex
        {
            get { return _KeyIndex.Value; }
            set { _KeyIndex = value; }
        }
        public bool ShouldSerializeKeyIndex()
        {
            return (_KeyIndex.HasValue);
        }

        public string KeyName { get; set; }
        private SAPB1.BoYesNoEnum? _Unique;
        public SAPB1.BoYesNoEnum Unique
        {
            get { return _Unique.Value; }
            set { _Unique = value; }
        }
        public bool ShouldSerializeUnique()
        {
            return (_Unique.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.UserKeysMD_Element> UserKeysMD_Elements { get; set; }
    }

    public class UserKeysMDKey
    {
        public string TableName { get; set; }
        private int? _KeyIndex;
        public int KeyIndex
        {
            get { return _KeyIndex.Value; }
            set { _KeyIndex = value; }
        }
        public bool ShouldSerializeKeyIndex()
        {
            return (_KeyIndex.HasValue);
        }

    }

    public class UserKeysMD_Element
    {
        private int? _SubKeyIndex;
        public int SubKeyIndex
        {
            get { return _SubKeyIndex.Value; }
            set { _SubKeyIndex = value; }
        }
        public bool ShouldSerializeSubKeyIndex()
        {
            return (_SubKeyIndex.HasValue);
        }

        public string ColumnAlias { get; set; }
    }

    public class Queue
    {
        public string QueueID { get; set; }
        public string Description { get; set; }
        private SAPB1.BoYesNoEnum? _Inactive;
        public SAPB1.BoYesNoEnum Inactive
        {
            get { return _Inactive.Value; }
            set { _Inactive = value; }
        }
        public bool ShouldSerializeInactive()
        {
            return (_Inactive.HasValue);
        }

        private int? _QueueManager;
        public int QueueManager
        {
            get { return _QueueManager.Value; }
            set { _QueueManager = value; }
        }
        public bool ShouldSerializeQueueManager()
        {
            return (_QueueManager.HasValue);
        }

        public string QueueEmail { get; set; }
        public System.Collections.Generic.List<SAPB1.QueueMember> QueueMembers { get; set; }
    }

    public class QueueMember
    {
        public string QueueID { get; set; }
        private int? _MemberUserID;
        public int MemberUserID
        {
            get { return _MemberUserID.Value; }
            set { _MemberUserID = value; }
        }
        public bool ShouldSerializeMemberUserID()
        {
            return (_MemberUserID.HasValue);
        }

    }

    public class SalesForecastParams
    {
        private int? _Numerator;
        public int Numerator
        {
            get { return _Numerator.Value; }
            set { _Numerator = value; }
        }
        public bool ShouldSerializeNumerator()
        {
            return (_Numerator.HasValue);
        }

    }

    public class SalesForecast
    {
        private DateTime? _ForecastStartDate;
        public DateTime ForecastStartDate
        {
            get { return _ForecastStartDate.Value; }
            set { _ForecastStartDate = value; }
        }
        public bool ShouldSerializeForecastStartDate()
        {
            return (_ForecastStartDate.HasValue);
        }

        private DateTime? _ForecastEndDate;
        public DateTime ForecastEndDate
        {
            get { return _ForecastEndDate.Value; }
            set { _ForecastEndDate = value; }
        }
        public bool ShouldSerializeForecastEndDate()
        {
            return (_ForecastEndDate.HasValue);
        }

        public string ForecastCode { get; set; }
        public string ForecastName { get; set; }
        private int? _Numerator;
        public int Numerator
        {
            get { return _Numerator.Value; }
            set { _Numerator = value; }
        }
        public bool ShouldSerializeNumerator()
        {
            return (_Numerator.HasValue);
        }

        private SAPB1.BoForecastViewType? _View;
        public SAPB1.BoForecastViewType View
        {
            get { return _View.Value; }
            set { _View = value; }
        }
        public bool ShouldSerializeView()
        {
            return (_View.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.SalesForecastLine> SalesForecastLines { get; set; }
    }

    public class SalesForecastLine
    {
        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private DateTime? _ForecastedDay;
        public DateTime ForecastedDay
        {
            get { return _ForecastedDay.Value; }
            set { _ForecastedDay = value; }
        }
        public bool ShouldSerializeForecastedDay()
        {
            return (_ForecastedDay.HasValue);
        }

        public string ItemNo { get; set; }
        public string Warehouse { get; set; }
    }

    public class BusinessPartnerParams
    {
        public string CardCode { get; set; }
    }

    public class BusinessPartner
    {
        public string CardCode { get; set; }
        public string CardName { get; set; }
        private SAPB1.BoCardTypes? _CardType;
        public SAPB1.BoCardTypes CardType
        {
            get { return _CardType.Value; }
            set { _CardType = value; }
        }
        public bool ShouldSerializeCardType()
        {
            return (_CardType.HasValue);
        }

        private int? _GroupCode;
        public int GroupCode
        {
            get { return _GroupCode.Value; }
            set { _GroupCode = value; }
        }
        public bool ShouldSerializeGroupCode()
        {
            return (_GroupCode.HasValue);
        }

        public string Address { get; set; }
        public string ZipCode { get; set; }
        public string MailAddress { get; set; }
        public string MailZipCode { get; set; }
        public string Phone1 { get; set; }
        public string Phone2 { get; set; }
        public string Fax { get; set; }
        public string ContactPerson { get; set; }
        public string Notes { get; set; }
        private int? _PayTermsGrpCode;
        public int PayTermsGrpCode
        {
            get { return _PayTermsGrpCode.Value; }
            set { _PayTermsGrpCode = value; }
        }
        public bool ShouldSerializePayTermsGrpCode()
        {
            return (_PayTermsGrpCode.HasValue);
        }

        private decimal? _CreditLimit;
        public decimal CreditLimit
        {
            get { return _CreditLimit.Value; }
            set { _CreditLimit = value; }
        }
        public bool ShouldSerializeCreditLimit()
        {
            return (_CreditLimit.HasValue);
        }

        private decimal? _MaxCommitment;
        public decimal MaxCommitment
        {
            get { return _MaxCommitment.Value; }
            set { _MaxCommitment = value; }
        }
        public bool ShouldSerializeMaxCommitment()
        {
            return (_MaxCommitment.HasValue);
        }

        private decimal? _DiscountPercent;
        public decimal DiscountPercent
        {
            get { return _DiscountPercent.Value; }
            set { _DiscountPercent = value; }
        }
        public bool ShouldSerializeDiscountPercent()
        {
            return (_DiscountPercent.HasValue);
        }

        private SAPB1.BoVatStatus? _VatLiable;
        public SAPB1.BoVatStatus VatLiable
        {
            get { return _VatLiable.Value; }
            set { _VatLiable = value; }
        }
        public bool ShouldSerializeVatLiable()
        {
            return (_VatLiable.HasValue);
        }

        public string FederalTaxID { get; set; }
        private SAPB1.BoYesNoEnum? _DeductibleAtSource;
        public SAPB1.BoYesNoEnum DeductibleAtSource
        {
            get { return _DeductibleAtSource.Value; }
            set { _DeductibleAtSource = value; }
        }
        public bool ShouldSerializeDeductibleAtSource()
        {
            return (_DeductibleAtSource.HasValue);
        }

        private decimal? _DeductionPercent;
        public decimal DeductionPercent
        {
            get { return _DeductionPercent.Value; }
            set { _DeductionPercent = value; }
        }
        public bool ShouldSerializeDeductionPercent()
        {
            return (_DeductionPercent.HasValue);
        }

        private DateTime? _DeductionValidUntil;
        public DateTime DeductionValidUntil
        {
            get { return _DeductionValidUntil.Value; }
            set { _DeductionValidUntil = value; }
        }
        public bool ShouldSerializeDeductionValidUntil()
        {
            return (_DeductionValidUntil.HasValue);
        }

        private int? _PriceListNum;
        public int PriceListNum
        {
            get { return _PriceListNum.Value; }
            set { _PriceListNum = value; }
        }
        public bool ShouldSerializePriceListNum()
        {
            return (_PriceListNum.HasValue);
        }

        private decimal? _IntrestRatePercent;
        public decimal IntrestRatePercent
        {
            get { return _IntrestRatePercent.Value; }
            set { _IntrestRatePercent = value; }
        }
        public bool ShouldSerializeIntrestRatePercent()
        {
            return (_IntrestRatePercent.HasValue);
        }

        private decimal? _CommissionPercent;
        public decimal CommissionPercent
        {
            get { return _CommissionPercent.Value; }
            set { _CommissionPercent = value; }
        }
        public bool ShouldSerializeCommissionPercent()
        {
            return (_CommissionPercent.HasValue);
        }

        private int? _CommissionGroupCode;
        public int CommissionGroupCode
        {
            get { return _CommissionGroupCode.Value; }
            set { _CommissionGroupCode = value; }
        }
        public bool ShouldSerializeCommissionGroupCode()
        {
            return (_CommissionGroupCode.HasValue);
        }

        public string FreeText { get; set; }
        private int? _SalesPersonCode;
        public int SalesPersonCode
        {
            get { return _SalesPersonCode.Value; }
            set { _SalesPersonCode = value; }
        }
        public bool ShouldSerializeSalesPersonCode()
        {
            return (_SalesPersonCode.HasValue);
        }

        public string Currency { get; set; }
        public string RateDiffAccount { get; set; }
        public string Cellular { get; set; }
        private int? _AvarageLate;
        public int AvarageLate
        {
            get { return _AvarageLate.Value; }
            set { _AvarageLate = value; }
        }
        public bool ShouldSerializeAvarageLate()
        {
            return (_AvarageLate.HasValue);
        }

        public string City { get; set; }
        public string County { get; set; }
        public string Country { get; set; }
        public string MailCity { get; set; }
        public string MailCounty { get; set; }
        public string MailCountry { get; set; }
        public string EmailAddress { get; set; }
        public string Picture { get; set; }
        public string DefaultAccount { get; set; }
        public string DefaultBranch { get; set; }
        public string DefaultBankCode { get; set; }
        public string AdditionalID { get; set; }
        public string Pager { get; set; }
        public string FatherCard { get; set; }
        public string CardForeignName { get; set; }
        private SAPB1.BoFatherCardTypes? _FatherType;
        public SAPB1.BoFatherCardTypes FatherType
        {
            get { return _FatherType.Value; }
            set { _FatherType = value; }
        }
        public bool ShouldSerializeFatherType()
        {
            return (_FatherType.HasValue);
        }

        public string DeductionOffice { get; set; }
        public string ExportCode { get; set; }
        private decimal? _MinIntrest;
        public decimal MinIntrest
        {
            get { return _MinIntrest.Value; }
            set { _MinIntrest = value; }
        }
        public bool ShouldSerializeMinIntrest()
        {
            return (_MinIntrest.HasValue);
        }

        private decimal? _CurrentAccountBalance;
        public decimal CurrentAccountBalance
        {
            get { return _CurrentAccountBalance.Value; }
            set { _CurrentAccountBalance = value; }
        }
        public bool ShouldSerializeCurrentAccountBalance()
        {
            return (_CurrentAccountBalance.HasValue);
        }

        private decimal? _OpenDeliveryNotesBalance;
        public decimal OpenDeliveryNotesBalance
        {
            get { return _OpenDeliveryNotesBalance.Value; }
            set { _OpenDeliveryNotesBalance = value; }
        }
        public bool ShouldSerializeOpenDeliveryNotesBalance()
        {
            return (_OpenDeliveryNotesBalance.HasValue);
        }

        private decimal? _OpenOrdersBalance;
        public decimal OpenOrdersBalance
        {
            get { return _OpenOrdersBalance.Value; }
            set { _OpenOrdersBalance = value; }
        }
        public bool ShouldSerializeOpenOrdersBalance()
        {
            return (_OpenOrdersBalance.HasValue);
        }

        public string VatGroup { get; set; }
        private int? _ShippingType;
        public int ShippingType
        {
            get { return _ShippingType.Value; }
            set { _ShippingType = value; }
        }
        public bool ShouldSerializeShippingType()
        {
            return (_ShippingType.HasValue);
        }

        public string Password { get; set; }
        public string Indicator { get; set; }
        public string IBAN { get; set; }
        private int? _CreditCardCode;
        public int CreditCardCode
        {
            get { return _CreditCardCode.Value; }
            set { _CreditCardCode = value; }
        }
        public bool ShouldSerializeCreditCardCode()
        {
            return (_CreditCardCode.HasValue);
        }

        public string CreditCardNum { get; set; }
        private DateTime? _CreditCardExpiration;
        public DateTime CreditCardExpiration
        {
            get { return _CreditCardExpiration.Value; }
            set { _CreditCardExpiration = value; }
        }
        public bool ShouldSerializeCreditCardExpiration()
        {
            return (_CreditCardExpiration.HasValue);
        }

        public string DebitorAccount { get; set; }
        private int? _OpenOpportunities;
        public int OpenOpportunities
        {
            get { return _OpenOpportunities.Value; }
            set { _OpenOpportunities = value; }
        }
        public bool ShouldSerializeOpenOpportunities()
        {
            return (_OpenOpportunities.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Valid;
        public SAPB1.BoYesNoEnum Valid
        {
            get { return _Valid.Value; }
            set { _Valid = value; }
        }
        public bool ShouldSerializeValid()
        {
            return (_Valid.HasValue);
        }

        private DateTime? _ValidFrom;
        public DateTime ValidFrom
        {
            get { return _ValidFrom.Value; }
            set { _ValidFrom = value; }
        }
        public bool ShouldSerializeValidFrom()
        {
            return (_ValidFrom.HasValue);
        }

        private DateTime? _ValidTo;
        public DateTime ValidTo
        {
            get { return _ValidTo.Value; }
            set { _ValidTo = value; }
        }
        public bool ShouldSerializeValidTo()
        {
            return (_ValidTo.HasValue);
        }

        public string ValidRemarks { get; set; }
        private SAPB1.BoYesNoEnum? _Frozen;
        public SAPB1.BoYesNoEnum Frozen
        {
            get { return _Frozen.Value; }
            set { _Frozen = value; }
        }
        public bool ShouldSerializeFrozen()
        {
            return (_Frozen.HasValue);
        }

        private DateTime? _FrozenFrom;
        public DateTime FrozenFrom
        {
            get { return _FrozenFrom.Value; }
            set { _FrozenFrom = value; }
        }
        public bool ShouldSerializeFrozenFrom()
        {
            return (_FrozenFrom.HasValue);
        }

        private DateTime? _FrozenTo;
        public DateTime FrozenTo
        {
            get { return _FrozenTo.Value; }
            set { _FrozenTo = value; }
        }
        public bool ShouldSerializeFrozenTo()
        {
            return (_FrozenTo.HasValue);
        }

        public string FrozenRemarks { get; set; }
        public string Block { get; set; }
        public string BillToState { get; set; }
        public string ExemptNum { get; set; }
        private int? _Priority;
        public int Priority
        {
            get { return _Priority.Value; }
            set { _Priority = value; }
        }
        public bool ShouldSerializePriority()
        {
            return (_Priority.HasValue);
        }

        private int? _FormCode1099;
        public int FormCode1099
        {
            get { return _FormCode1099.Value; }
            set { _FormCode1099 = value; }
        }
        public bool ShouldSerializeFormCode1099()
        {
            return (_FormCode1099.HasValue);
        }

        public string Box1099 { get; set; }
        public string PeymentMethodCode { get; set; }
        private SAPB1.BoYesNoEnum? _BackOrder;
        public SAPB1.BoYesNoEnum BackOrder
        {
            get { return _BackOrder.Value; }
            set { _BackOrder = value; }
        }
        public bool ShouldSerializeBackOrder()
        {
            return (_BackOrder.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PartialDelivery;
        public SAPB1.BoYesNoEnum PartialDelivery
        {
            get { return _PartialDelivery.Value; }
            set { _PartialDelivery = value; }
        }
        public bool ShouldSerializePartialDelivery()
        {
            return (_PartialDelivery.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockDunning;
        public SAPB1.BoYesNoEnum BlockDunning
        {
            get { return _BlockDunning.Value; }
            set { _BlockDunning = value; }
        }
        public bool ShouldSerializeBlockDunning()
        {
            return (_BlockDunning.HasValue);
        }

        public string BankCountry { get; set; }
        public string HouseBank { get; set; }
        public string HouseBankCountry { get; set; }
        public string HouseBankAccount { get; set; }
        public string ShipToDefault { get; set; }
        private int? _DunningLevel;
        public int DunningLevel
        {
            get { return _DunningLevel.Value; }
            set { _DunningLevel = value; }
        }
        public bool ShouldSerializeDunningLevel()
        {
            return (_DunningLevel.HasValue);
        }

        private DateTime? _DunningDate;
        public DateTime DunningDate
        {
            get { return _DunningDate.Value; }
            set { _DunningDate = value; }
        }
        public bool ShouldSerializeDunningDate()
        {
            return (_DunningDate.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CollectionAuthorization;
        public SAPB1.BoYesNoEnum CollectionAuthorization
        {
            get { return _CollectionAuthorization.Value; }
            set { _CollectionAuthorization = value; }
        }
        public bool ShouldSerializeCollectionAuthorization()
        {
            return (_CollectionAuthorization.HasValue);
        }

        public string DME { get; set; }
        public string InstructionKey { get; set; }
        private SAPB1.BoYesNoEnum? _SinglePayment;
        public SAPB1.BoYesNoEnum SinglePayment
        {
            get { return _SinglePayment.Value; }
            set { _SinglePayment = value; }
        }
        public bool ShouldSerializeSinglePayment()
        {
            return (_SinglePayment.HasValue);
        }

        public string ISRBillerID { get; set; }
        private SAPB1.BoYesNoEnum? _PaymentBlock;
        public SAPB1.BoYesNoEnum PaymentBlock
        {
            get { return _PaymentBlock.Value; }
            set { _PaymentBlock = value; }
        }
        public bool ShouldSerializePaymentBlock()
        {
            return (_PaymentBlock.HasValue);
        }

        public string ReferenceDetails { get; set; }
        public string HouseBankBranch { get; set; }
        public string OwnerIDNumber { get; set; }
        private int? _PaymentBlockDescription;
        public int PaymentBlockDescription
        {
            get { return _PaymentBlockDescription.Value; }
            set { _PaymentBlockDescription = value; }
        }
        public bool ShouldSerializePaymentBlockDescription()
        {
            return (_PaymentBlockDescription.HasValue);
        }

        public string TaxExemptionLetterNum { get; set; }
        private decimal? _MaxAmountOfExemption;
        public decimal MaxAmountOfExemption
        {
            get { return _MaxAmountOfExemption.Value; }
            set { _MaxAmountOfExemption = value; }
        }
        public bool ShouldSerializeMaxAmountOfExemption()
        {
            return (_MaxAmountOfExemption.HasValue);
        }

        private DateTime? _ExemptionValidityDateFrom;
        public DateTime ExemptionValidityDateFrom
        {
            get { return _ExemptionValidityDateFrom.Value; }
            set { _ExemptionValidityDateFrom = value; }
        }
        public bool ShouldSerializeExemptionValidityDateFrom()
        {
            return (_ExemptionValidityDateFrom.HasValue);
        }

        private DateTime? _ExemptionValidityDateTo;
        public DateTime ExemptionValidityDateTo
        {
            get { return _ExemptionValidityDateTo.Value; }
            set { _ExemptionValidityDateTo = value; }
        }
        public bool ShouldSerializeExemptionValidityDateTo()
        {
            return (_ExemptionValidityDateTo.HasValue);
        }

        public string LinkedBusinessPartner { get; set; }
        private int? _LastMultiReconciliationNum;
        public int LastMultiReconciliationNum
        {
            get { return _LastMultiReconciliationNum.Value; }
            set { _LastMultiReconciliationNum = value; }
        }
        public bool ShouldSerializeLastMultiReconciliationNum()
        {
            return (_LastMultiReconciliationNum.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DeferredTax;
        public SAPB1.BoYesNoEnum DeferredTax
        {
            get { return _DeferredTax.Value; }
            set { _DeferredTax = value; }
        }
        public bool ShouldSerializeDeferredTax()
        {
            return (_DeferredTax.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Equalization;
        public SAPB1.BoYesNoEnum Equalization
        {
            get { return _Equalization.Value; }
            set { _Equalization = value; }
        }
        public bool ShouldSerializeEqualization()
        {
            return (_Equalization.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SubjectToWithholdingTax;
        public SAPB1.BoYesNoEnum SubjectToWithholdingTax
        {
            get { return _SubjectToWithholdingTax.Value; }
            set { _SubjectToWithholdingTax = value; }
        }
        public bool ShouldSerializeSubjectToWithholdingTax()
        {
            return (_SubjectToWithholdingTax.HasValue);
        }

        public string CertificateNumber { get; set; }
        private DateTime? _ExpirationDate;
        public DateTime ExpirationDate
        {
            get { return _ExpirationDate.Value; }
            set { _ExpirationDate = value; }
        }
        public bool ShouldSerializeExpirationDate()
        {
            return (_ExpirationDate.HasValue);
        }

        public string NationalInsuranceNum { get; set; }
        private SAPB1.BoYesNoEnum? _AccrualCriteria;
        public SAPB1.BoYesNoEnum AccrualCriteria
        {
            get { return _AccrualCriteria.Value; }
            set { _AccrualCriteria = value; }
        }
        public bool ShouldSerializeAccrualCriteria()
        {
            return (_AccrualCriteria.HasValue);
        }

        public string WTCode { get; set; }
        public string BillToBuildingFloorRoom { get; set; }
        public string DownPaymentClearAct { get; set; }
        public string ChannelBP { get; set; }
        private int? _DefaultTechnician;
        public int DefaultTechnician
        {
            get { return _DefaultTechnician.Value; }
            set { _DefaultTechnician = value; }
        }
        public bool ShouldSerializeDefaultTechnician()
        {
            return (_DefaultTechnician.HasValue);
        }

        public string BilltoDefault { get; set; }
        public string CustomerBillofExchangDisc { get; set; }
        private int? _Territory;
        public int Territory
        {
            get { return _Territory.Value; }
            set { _Territory = value; }
        }
        public bool ShouldSerializeTerritory()
        {
            return (_Territory.HasValue);
        }

        public string ShipToBuildingFloorRoom { get; set; }
        public string CustomerBillofExchangPres { get; set; }
        public string ProjectCode { get; set; }
        public string VatGroupLatinAmerica { get; set; }
        public string DunningTerm { get; set; }
        public string Website { get; set; }
        public string OtherReceivablePayable { get; set; }
        public string BillofExchangeonCollection { get; set; }
        private SAPB1.BoCardCompanyTypes? _CompanyPrivate;
        public SAPB1.BoCardCompanyTypes CompanyPrivate
        {
            get { return _CompanyPrivate.Value; }
            set { _CompanyPrivate = value; }
        }
        public bool ShouldSerializeCompanyPrivate()
        {
            return (_CompanyPrivate.HasValue);
        }

        private int? _LanguageCode;
        public int LanguageCode
        {
            get { return _LanguageCode.Value; }
            set { _LanguageCode = value; }
        }
        public bool ShouldSerializeLanguageCode()
        {
            return (_LanguageCode.HasValue);
        }

        public string UnpaidBillofExchange { get; set; }
        private int? _WithholdingTaxDeductionGroup;
        public int WithholdingTaxDeductionGroup
        {
            get { return _WithholdingTaxDeductionGroup.Value; }
            set { _WithholdingTaxDeductionGroup = value; }
        }
        public bool ShouldSerializeWithholdingTaxDeductionGroup()
        {
            return (_WithholdingTaxDeductionGroup.HasValue);
        }

        private int? _ClosingDateProcedureNumber;
        public int ClosingDateProcedureNumber
        {
            get { return _ClosingDateProcedureNumber.Value; }
            set { _ClosingDateProcedureNumber = value; }
        }
        public bool ShouldSerializeClosingDateProcedureNumber()
        {
            return (_ClosingDateProcedureNumber.HasValue);
        }

        public string Profession { get; set; }
        public string BankChargesAllocationCode { get; set; }
        private SAPB1.BoTaxRoundingRuleTypes? _TaxRoundingRule;
        public SAPB1.BoTaxRoundingRuleTypes TaxRoundingRule
        {
            get { return _TaxRoundingRule.Value; }
            set { _TaxRoundingRule = value; }
        }
        public bool ShouldSerializeTaxRoundingRule()
        {
            return (_TaxRoundingRule.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties1;
        public SAPB1.BoYesNoEnum Properties1
        {
            get { return _Properties1.Value; }
            set { _Properties1 = value; }
        }
        public bool ShouldSerializeProperties1()
        {
            return (_Properties1.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties2;
        public SAPB1.BoYesNoEnum Properties2
        {
            get { return _Properties2.Value; }
            set { _Properties2 = value; }
        }
        public bool ShouldSerializeProperties2()
        {
            return (_Properties2.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties3;
        public SAPB1.BoYesNoEnum Properties3
        {
            get { return _Properties3.Value; }
            set { _Properties3 = value; }
        }
        public bool ShouldSerializeProperties3()
        {
            return (_Properties3.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties4;
        public SAPB1.BoYesNoEnum Properties4
        {
            get { return _Properties4.Value; }
            set { _Properties4 = value; }
        }
        public bool ShouldSerializeProperties4()
        {
            return (_Properties4.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties5;
        public SAPB1.BoYesNoEnum Properties5
        {
            get { return _Properties5.Value; }
            set { _Properties5 = value; }
        }
        public bool ShouldSerializeProperties5()
        {
            return (_Properties5.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties6;
        public SAPB1.BoYesNoEnum Properties6
        {
            get { return _Properties6.Value; }
            set { _Properties6 = value; }
        }
        public bool ShouldSerializeProperties6()
        {
            return (_Properties6.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties7;
        public SAPB1.BoYesNoEnum Properties7
        {
            get { return _Properties7.Value; }
            set { _Properties7 = value; }
        }
        public bool ShouldSerializeProperties7()
        {
            return (_Properties7.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties8;
        public SAPB1.BoYesNoEnum Properties8
        {
            get { return _Properties8.Value; }
            set { _Properties8 = value; }
        }
        public bool ShouldSerializeProperties8()
        {
            return (_Properties8.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties9;
        public SAPB1.BoYesNoEnum Properties9
        {
            get { return _Properties9.Value; }
            set { _Properties9 = value; }
        }
        public bool ShouldSerializeProperties9()
        {
            return (_Properties9.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties10;
        public SAPB1.BoYesNoEnum Properties10
        {
            get { return _Properties10.Value; }
            set { _Properties10 = value; }
        }
        public bool ShouldSerializeProperties10()
        {
            return (_Properties10.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties11;
        public SAPB1.BoYesNoEnum Properties11
        {
            get { return _Properties11.Value; }
            set { _Properties11 = value; }
        }
        public bool ShouldSerializeProperties11()
        {
            return (_Properties11.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties12;
        public SAPB1.BoYesNoEnum Properties12
        {
            get { return _Properties12.Value; }
            set { _Properties12 = value; }
        }
        public bool ShouldSerializeProperties12()
        {
            return (_Properties12.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties13;
        public SAPB1.BoYesNoEnum Properties13
        {
            get { return _Properties13.Value; }
            set { _Properties13 = value; }
        }
        public bool ShouldSerializeProperties13()
        {
            return (_Properties13.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties14;
        public SAPB1.BoYesNoEnum Properties14
        {
            get { return _Properties14.Value; }
            set { _Properties14 = value; }
        }
        public bool ShouldSerializeProperties14()
        {
            return (_Properties14.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties15;
        public SAPB1.BoYesNoEnum Properties15
        {
            get { return _Properties15.Value; }
            set { _Properties15 = value; }
        }
        public bool ShouldSerializeProperties15()
        {
            return (_Properties15.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties16;
        public SAPB1.BoYesNoEnum Properties16
        {
            get { return _Properties16.Value; }
            set { _Properties16 = value; }
        }
        public bool ShouldSerializeProperties16()
        {
            return (_Properties16.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties17;
        public SAPB1.BoYesNoEnum Properties17
        {
            get { return _Properties17.Value; }
            set { _Properties17 = value; }
        }
        public bool ShouldSerializeProperties17()
        {
            return (_Properties17.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties18;
        public SAPB1.BoYesNoEnum Properties18
        {
            get { return _Properties18.Value; }
            set { _Properties18 = value; }
        }
        public bool ShouldSerializeProperties18()
        {
            return (_Properties18.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties19;
        public SAPB1.BoYesNoEnum Properties19
        {
            get { return _Properties19.Value; }
            set { _Properties19 = value; }
        }
        public bool ShouldSerializeProperties19()
        {
            return (_Properties19.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties20;
        public SAPB1.BoYesNoEnum Properties20
        {
            get { return _Properties20.Value; }
            set { _Properties20 = value; }
        }
        public bool ShouldSerializeProperties20()
        {
            return (_Properties20.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties21;
        public SAPB1.BoYesNoEnum Properties21
        {
            get { return _Properties21.Value; }
            set { _Properties21 = value; }
        }
        public bool ShouldSerializeProperties21()
        {
            return (_Properties21.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties22;
        public SAPB1.BoYesNoEnum Properties22
        {
            get { return _Properties22.Value; }
            set { _Properties22 = value; }
        }
        public bool ShouldSerializeProperties22()
        {
            return (_Properties22.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties23;
        public SAPB1.BoYesNoEnum Properties23
        {
            get { return _Properties23.Value; }
            set { _Properties23 = value; }
        }
        public bool ShouldSerializeProperties23()
        {
            return (_Properties23.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties24;
        public SAPB1.BoYesNoEnum Properties24
        {
            get { return _Properties24.Value; }
            set { _Properties24 = value; }
        }
        public bool ShouldSerializeProperties24()
        {
            return (_Properties24.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties25;
        public SAPB1.BoYesNoEnum Properties25
        {
            get { return _Properties25.Value; }
            set { _Properties25 = value; }
        }
        public bool ShouldSerializeProperties25()
        {
            return (_Properties25.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties26;
        public SAPB1.BoYesNoEnum Properties26
        {
            get { return _Properties26.Value; }
            set { _Properties26 = value; }
        }
        public bool ShouldSerializeProperties26()
        {
            return (_Properties26.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties27;
        public SAPB1.BoYesNoEnum Properties27
        {
            get { return _Properties27.Value; }
            set { _Properties27 = value; }
        }
        public bool ShouldSerializeProperties27()
        {
            return (_Properties27.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties28;
        public SAPB1.BoYesNoEnum Properties28
        {
            get { return _Properties28.Value; }
            set { _Properties28 = value; }
        }
        public bool ShouldSerializeProperties28()
        {
            return (_Properties28.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties29;
        public SAPB1.BoYesNoEnum Properties29
        {
            get { return _Properties29.Value; }
            set { _Properties29 = value; }
        }
        public bool ShouldSerializeProperties29()
        {
            return (_Properties29.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties30;
        public SAPB1.BoYesNoEnum Properties30
        {
            get { return _Properties30.Value; }
            set { _Properties30 = value; }
        }
        public bool ShouldSerializeProperties30()
        {
            return (_Properties30.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties31;
        public SAPB1.BoYesNoEnum Properties31
        {
            get { return _Properties31.Value; }
            set { _Properties31 = value; }
        }
        public bool ShouldSerializeProperties31()
        {
            return (_Properties31.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties32;
        public SAPB1.BoYesNoEnum Properties32
        {
            get { return _Properties32.Value; }
            set { _Properties32 = value; }
        }
        public bool ShouldSerializeProperties32()
        {
            return (_Properties32.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties33;
        public SAPB1.BoYesNoEnum Properties33
        {
            get { return _Properties33.Value; }
            set { _Properties33 = value; }
        }
        public bool ShouldSerializeProperties33()
        {
            return (_Properties33.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties34;
        public SAPB1.BoYesNoEnum Properties34
        {
            get { return _Properties34.Value; }
            set { _Properties34 = value; }
        }
        public bool ShouldSerializeProperties34()
        {
            return (_Properties34.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties35;
        public SAPB1.BoYesNoEnum Properties35
        {
            get { return _Properties35.Value; }
            set { _Properties35 = value; }
        }
        public bool ShouldSerializeProperties35()
        {
            return (_Properties35.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties36;
        public SAPB1.BoYesNoEnum Properties36
        {
            get { return _Properties36.Value; }
            set { _Properties36 = value; }
        }
        public bool ShouldSerializeProperties36()
        {
            return (_Properties36.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties37;
        public SAPB1.BoYesNoEnum Properties37
        {
            get { return _Properties37.Value; }
            set { _Properties37 = value; }
        }
        public bool ShouldSerializeProperties37()
        {
            return (_Properties37.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties38;
        public SAPB1.BoYesNoEnum Properties38
        {
            get { return _Properties38.Value; }
            set { _Properties38 = value; }
        }
        public bool ShouldSerializeProperties38()
        {
            return (_Properties38.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties39;
        public SAPB1.BoYesNoEnum Properties39
        {
            get { return _Properties39.Value; }
            set { _Properties39 = value; }
        }
        public bool ShouldSerializeProperties39()
        {
            return (_Properties39.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties40;
        public SAPB1.BoYesNoEnum Properties40
        {
            get { return _Properties40.Value; }
            set { _Properties40 = value; }
        }
        public bool ShouldSerializeProperties40()
        {
            return (_Properties40.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties41;
        public SAPB1.BoYesNoEnum Properties41
        {
            get { return _Properties41.Value; }
            set { _Properties41 = value; }
        }
        public bool ShouldSerializeProperties41()
        {
            return (_Properties41.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties42;
        public SAPB1.BoYesNoEnum Properties42
        {
            get { return _Properties42.Value; }
            set { _Properties42 = value; }
        }
        public bool ShouldSerializeProperties42()
        {
            return (_Properties42.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties43;
        public SAPB1.BoYesNoEnum Properties43
        {
            get { return _Properties43.Value; }
            set { _Properties43 = value; }
        }
        public bool ShouldSerializeProperties43()
        {
            return (_Properties43.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties44;
        public SAPB1.BoYesNoEnum Properties44
        {
            get { return _Properties44.Value; }
            set { _Properties44 = value; }
        }
        public bool ShouldSerializeProperties44()
        {
            return (_Properties44.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties45;
        public SAPB1.BoYesNoEnum Properties45
        {
            get { return _Properties45.Value; }
            set { _Properties45 = value; }
        }
        public bool ShouldSerializeProperties45()
        {
            return (_Properties45.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties46;
        public SAPB1.BoYesNoEnum Properties46
        {
            get { return _Properties46.Value; }
            set { _Properties46 = value; }
        }
        public bool ShouldSerializeProperties46()
        {
            return (_Properties46.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties47;
        public SAPB1.BoYesNoEnum Properties47
        {
            get { return _Properties47.Value; }
            set { _Properties47 = value; }
        }
        public bool ShouldSerializeProperties47()
        {
            return (_Properties47.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties48;
        public SAPB1.BoYesNoEnum Properties48
        {
            get { return _Properties48.Value; }
            set { _Properties48 = value; }
        }
        public bool ShouldSerializeProperties48()
        {
            return (_Properties48.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties49;
        public SAPB1.BoYesNoEnum Properties49
        {
            get { return _Properties49.Value; }
            set { _Properties49 = value; }
        }
        public bool ShouldSerializeProperties49()
        {
            return (_Properties49.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties50;
        public SAPB1.BoYesNoEnum Properties50
        {
            get { return _Properties50.Value; }
            set { _Properties50 = value; }
        }
        public bool ShouldSerializeProperties50()
        {
            return (_Properties50.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties51;
        public SAPB1.BoYesNoEnum Properties51
        {
            get { return _Properties51.Value; }
            set { _Properties51 = value; }
        }
        public bool ShouldSerializeProperties51()
        {
            return (_Properties51.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties52;
        public SAPB1.BoYesNoEnum Properties52
        {
            get { return _Properties52.Value; }
            set { _Properties52 = value; }
        }
        public bool ShouldSerializeProperties52()
        {
            return (_Properties52.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties53;
        public SAPB1.BoYesNoEnum Properties53
        {
            get { return _Properties53.Value; }
            set { _Properties53 = value; }
        }
        public bool ShouldSerializeProperties53()
        {
            return (_Properties53.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties54;
        public SAPB1.BoYesNoEnum Properties54
        {
            get { return _Properties54.Value; }
            set { _Properties54 = value; }
        }
        public bool ShouldSerializeProperties54()
        {
            return (_Properties54.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties55;
        public SAPB1.BoYesNoEnum Properties55
        {
            get { return _Properties55.Value; }
            set { _Properties55 = value; }
        }
        public bool ShouldSerializeProperties55()
        {
            return (_Properties55.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties56;
        public SAPB1.BoYesNoEnum Properties56
        {
            get { return _Properties56.Value; }
            set { _Properties56 = value; }
        }
        public bool ShouldSerializeProperties56()
        {
            return (_Properties56.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties57;
        public SAPB1.BoYesNoEnum Properties57
        {
            get { return _Properties57.Value; }
            set { _Properties57 = value; }
        }
        public bool ShouldSerializeProperties57()
        {
            return (_Properties57.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties58;
        public SAPB1.BoYesNoEnum Properties58
        {
            get { return _Properties58.Value; }
            set { _Properties58 = value; }
        }
        public bool ShouldSerializeProperties58()
        {
            return (_Properties58.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties59;
        public SAPB1.BoYesNoEnum Properties59
        {
            get { return _Properties59.Value; }
            set { _Properties59 = value; }
        }
        public bool ShouldSerializeProperties59()
        {
            return (_Properties59.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties60;
        public SAPB1.BoYesNoEnum Properties60
        {
            get { return _Properties60.Value; }
            set { _Properties60 = value; }
        }
        public bool ShouldSerializeProperties60()
        {
            return (_Properties60.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties61;
        public SAPB1.BoYesNoEnum Properties61
        {
            get { return _Properties61.Value; }
            set { _Properties61 = value; }
        }
        public bool ShouldSerializeProperties61()
        {
            return (_Properties61.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties62;
        public SAPB1.BoYesNoEnum Properties62
        {
            get { return _Properties62.Value; }
            set { _Properties62 = value; }
        }
        public bool ShouldSerializeProperties62()
        {
            return (_Properties62.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties63;
        public SAPB1.BoYesNoEnum Properties63
        {
            get { return _Properties63.Value; }
            set { _Properties63 = value; }
        }
        public bool ShouldSerializeProperties63()
        {
            return (_Properties63.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties64;
        public SAPB1.BoYesNoEnum Properties64
        {
            get { return _Properties64.Value; }
            set { _Properties64 = value; }
        }
        public bool ShouldSerializeProperties64()
        {
            return (_Properties64.HasValue);
        }

        public string CompanyRegistrationNumber { get; set; }
        public string VerificationNumber { get; set; }
        private SAPB1.DiscountGroupBaseObjectEnum? _DiscountBaseObject;
        public SAPB1.DiscountGroupBaseObjectEnum DiscountBaseObject
        {
            get { return _DiscountBaseObject.Value; }
            set { _DiscountBaseObject = value; }
        }
        public bool ShouldSerializeDiscountBaseObject()
        {
            return (_DiscountBaseObject.HasValue);
        }

        private SAPB1.DiscountGroupRelationsEnum? _DiscountRelations;
        public SAPB1.DiscountGroupRelationsEnum DiscountRelations
        {
            get { return _DiscountRelations.Value; }
            set { _DiscountRelations = value; }
        }
        public bool ShouldSerializeDiscountRelations()
        {
            return (_DiscountRelations.HasValue);
        }

        private SAPB1.AssesseeTypeEnum? _TypeReport;
        public SAPB1.AssesseeTypeEnum TypeReport
        {
            get { return _TypeReport.Value; }
            set { _TypeReport = value; }
        }
        public bool ShouldSerializeTypeReport()
        {
            return (_TypeReport.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ThresholdOverlook;
        public SAPB1.BoYesNoEnum ThresholdOverlook
        {
            get { return _ThresholdOverlook.Value; }
            set { _ThresholdOverlook = value; }
        }
        public bool ShouldSerializeThresholdOverlook()
        {
            return (_ThresholdOverlook.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SurchargeOverlook;
        public SAPB1.BoYesNoEnum SurchargeOverlook
        {
            get { return _SurchargeOverlook.Value; }
            set { _SurchargeOverlook = value; }
        }
        public bool ShouldSerializeSurchargeOverlook()
        {
            return (_SurchargeOverlook.HasValue);
        }

        public string DownPaymentInterimAccount { get; set; }
        private SAPB1.OperationCode347Enum? _OperationCode347;
        public SAPB1.OperationCode347Enum OperationCode347
        {
            get { return _OperationCode347.Value; }
            set { _OperationCode347 = value; }
        }
        public bool ShouldSerializeOperationCode347()
        {
            return (_OperationCode347.HasValue);
        }

        private SAPB1.BoYesNoEnum? _InsuranceOperation347;
        public SAPB1.BoYesNoEnum InsuranceOperation347
        {
            get { return _InsuranceOperation347.Value; }
            set { _InsuranceOperation347 = value; }
        }
        public bool ShouldSerializeInsuranceOperation347()
        {
            return (_InsuranceOperation347.HasValue);
        }

        private SAPB1.BoYesNoEnum? _HierarchicalDeduction;
        public SAPB1.BoYesNoEnum HierarchicalDeduction
        {
            get { return _HierarchicalDeduction.Value; }
            set { _HierarchicalDeduction = value; }
        }
        public bool ShouldSerializeHierarchicalDeduction()
        {
            return (_HierarchicalDeduction.HasValue);
        }

        private SAPB1.ShaamGroupEnum? _ShaamGroup;
        public SAPB1.ShaamGroupEnum ShaamGroup
        {
            get { return _ShaamGroup.Value; }
            set { _ShaamGroup = value; }
        }
        public bool ShouldSerializeShaamGroup()
        {
            return (_ShaamGroup.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WithholdingTaxCertified;
        public SAPB1.BoYesNoEnum WithholdingTaxCertified
        {
            get { return _WithholdingTaxCertified.Value; }
            set { _WithholdingTaxCertified = value; }
        }
        public bool ShouldSerializeWithholdingTaxCertified()
        {
            return (_WithholdingTaxCertified.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BookkeepingCertified;
        public SAPB1.BoYesNoEnum BookkeepingCertified
        {
            get { return _BookkeepingCertified.Value; }
            set { _BookkeepingCertified = value; }
        }
        public bool ShouldSerializeBookkeepingCertified()
        {
            return (_BookkeepingCertified.HasValue);
        }

        public string PlanningGroup { get; set; }
        private SAPB1.BoYesNoEnum? _Affiliate;
        public SAPB1.BoYesNoEnum Affiliate
        {
            get { return _Affiliate.Value; }
            set { _Affiliate = value; }
        }
        public bool ShouldSerializeAffiliate()
        {
            return (_Affiliate.HasValue);
        }

        private int? _Industry;
        public int Industry
        {
            get { return _Industry.Value; }
            set { _Industry = value; }
        }
        public bool ShouldSerializeIndustry()
        {
            return (_Industry.HasValue);
        }

        public string VatIDNum { get; set; }
        private int? _DatevAccount;
        public int DatevAccount
        {
            get { return _DatevAccount.Value; }
            set { _DatevAccount = value; }
        }
        public bool ShouldSerializeDatevAccount()
        {
            return (_DatevAccount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DatevFirstDataEntry;
        public SAPB1.BoYesNoEnum DatevFirstDataEntry
        {
            get { return _DatevFirstDataEntry.Value; }
            set { _DatevFirstDataEntry = value; }
        }
        public bool ShouldSerializeDatevFirstDataEntry()
        {
            return (_DatevFirstDataEntry.HasValue);
        }

        public string GTSRegNo { get; set; }
        public string GTSBankAccountNo { get; set; }
        public string GTSBillingAddrTel { get; set; }
        private int? _ETaxWebSite;
        public int ETaxWebSite
        {
            get { return _ETaxWebSite.Value; }
            set { _ETaxWebSite = value; }
        }
        public bool ShouldSerializeETaxWebSite()
        {
            return (_ETaxWebSite.HasValue);
        }

        public string HouseBankIBAN { get; set; }
        public string VATRegistrationNumber { get; set; }
        public string RepresentativeName { get; set; }
        public string IndustryType { get; set; }
        public string BusinessType { get; set; }
        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private SAPB1.AutomaticPostingEnum? _AutomaticPosting;
        public SAPB1.AutomaticPostingEnum AutomaticPosting
        {
            get { return _AutomaticPosting.Value; }
            set { _AutomaticPosting = value; }
        }
        public bool ShouldSerializeAutomaticPosting()
        {
            return (_AutomaticPosting.HasValue);
        }

        public string InterestAccount { get; set; }
        public string FeeAccount { get; set; }
        private int? _CampaignNumber;
        public int CampaignNumber
        {
            get { return _CampaignNumber.Value; }
            set { _CampaignNumber = value; }
        }
        public bool ShouldSerializeCampaignNumber()
        {
            return (_CampaignNumber.HasValue);
        }

        public string AliasName { get; set; }
        private int? _DefaultBlanketAgreementNumber;
        public int DefaultBlanketAgreementNumber
        {
            get { return _DefaultBlanketAgreementNumber.Value; }
            set { _DefaultBlanketAgreementNumber = value; }
        }
        public bool ShouldSerializeDefaultBlanketAgreementNumber()
        {
            return (_DefaultBlanketAgreementNumber.HasValue);
        }

        private SAPB1.DiscountGroupRelationsEnum? _EffectiveDiscount;
        public SAPB1.DiscountGroupRelationsEnum EffectiveDiscount
        {
            get { return _EffectiveDiscount.Value; }
            set { _EffectiveDiscount = value; }
        }
        public bool ShouldSerializeEffectiveDiscount()
        {
            return (_EffectiveDiscount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _NoDiscounts;
        public SAPB1.BoYesNoEnum NoDiscounts
        {
            get { return _NoDiscounts.Value; }
            set { _NoDiscounts = value; }
        }
        public bool ShouldSerializeNoDiscounts()
        {
            return (_NoDiscounts.HasValue);
        }

        public string GlobalLocationNumber { get; set; }
        public string EDISenderID { get; set; }
        public string EDIRecipientID { get; set; }
        private SAPB1.ResidenceNumberTypeEnum? _ResidenNumber;
        public SAPB1.ResidenceNumberTypeEnum ResidenNumber
        {
            get { return _ResidenNumber.Value; }
            set { _ResidenNumber = value; }
        }
        public bool ShouldSerializeResidenNumber()
        {
            return (_ResidenNumber.HasValue);
        }

        public string RelationshipCode { get; set; }
        private DateTime? _RelationshipDateFrom;
        public DateTime RelationshipDateFrom
        {
            get { return _RelationshipDateFrom.Value; }
            set { _RelationshipDateFrom = value; }
        }
        public bool ShouldSerializeRelationshipDateFrom()
        {
            return (_RelationshipDateFrom.HasValue);
        }

        private DateTime? _RelationshipDateTill;
        public DateTime RelationshipDateTill
        {
            get { return _RelationshipDateTill.Value; }
            set { _RelationshipDateTill = value; }
        }
        public bool ShouldSerializeRelationshipDateTill()
        {
            return (_RelationshipDateTill.HasValue);
        }

        public string UnifiedFederalTaxID { get; set; }
        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

        private SAPB1.TypeOfOperationEnum? _TypeOfOperation;
        public SAPB1.TypeOfOperationEnum TypeOfOperation
        {
            get { return _TypeOfOperation.Value; }
            set { _TypeOfOperation = value; }
        }
        public bool ShouldSerializeTypeOfOperation()
        {
            return (_TypeOfOperation.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EndorsableChecksFromBP;
        public SAPB1.BoYesNoEnum EndorsableChecksFromBP
        {
            get { return _EndorsableChecksFromBP.Value; }
            set { _EndorsableChecksFromBP = value; }
        }
        public bool ShouldSerializeEndorsableChecksFromBP()
        {
            return (_EndorsableChecksFromBP.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AcceptsEndorsedChecks;
        public SAPB1.BoYesNoEnum AcceptsEndorsedChecks
        {
            get { return _AcceptsEndorsedChecks.Value; }
            set { _AcceptsEndorsedChecks = value; }
        }
        public bool ShouldSerializeAcceptsEndorsedChecks()
        {
            return (_AcceptsEndorsedChecks.HasValue);
        }

        private int? _OwnerCode;
        public int OwnerCode
        {
            get { return _OwnerCode.Value; }
            set { _OwnerCode = value; }
        }
        public bool ShouldSerializeOwnerCode()
        {
            return (_OwnerCode.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.BPAddress> BPAddresses { get; set; }
        public System.Collections.Generic.List<SAPB1.ContactEmployee> ContactEmployees { get; set; }
        public System.Collections.Generic.List<SAPB1.BPAccountReceivablePayble> BPAccountReceivablePaybleCollection { get; set; }
        public System.Collections.Generic.List<SAPB1.BPPaymentMethod> BPPaymentMethods { get; set; }
        public System.Collections.Generic.List<SAPB1.BPWithholdingTax> BPWithholdingTaxCollection { get; set; }
        public System.Collections.Generic.List<SAPB1.BPPaymentDate> BPPaymentDates { get; set; }
        public System.Collections.Generic.List<SAPB1.BPBranchAssignmentItem> BPBranchAssignment { get; set; }
        public System.Collections.Generic.List<SAPB1.BPBankAccount> BPBankAccounts { get; set; }
        public System.Collections.Generic.List<SAPB1.BPFiscalTaxID> BPFiscalTaxIDCollection { get; set; }
        public System.Collections.Generic.List<SAPB1.DiscountGroup> DiscountGroups { get; set; }
        public SAPB1.BPIntrastatExtension BPIntrastatExtension { get; set; }
    }

    public class BPAddress
    {
        public string AddressName { get; set; }
        public string Street { get; set; }
        public string Block { get; set; }
        public string ZipCode { get; set; }
        public string City { get; set; }
        public string County { get; set; }
        public string Country { get; set; }
        public string State { get; set; }
        public string FederalTaxID { get; set; }
        public string TaxCode { get; set; }
        public string BuildingFloorRoom { get; set; }
        private SAPB1.BoAddressType? _AddressType;
        public SAPB1.BoAddressType AddressType
        {
            get { return _AddressType.Value; }
            set { _AddressType = value; }
        }
        public bool ShouldSerializeAddressType()
        {
            return (_AddressType.HasValue);
        }

        public string AddressName2 { get; set; }
        public string AddressName3 { get; set; }
        public string TypeOfAddress { get; set; }
        public string StreetNo { get; set; }
        public string BPCode { get; set; }
        private int? _RowNum;
        public int RowNum
        {
            get { return _RowNum.Value; }
            set { _RowNum = value; }
        }
        public bool ShouldSerializeRowNum()
        {
            return (_RowNum.HasValue);
        }

        public string GlobalLocationNumber { get; set; }
        public string Nationality { get; set; }
        public string TaxOffice { get; set; }
    }

    public class ContactEmployee
    {
        public string CardCode { get; set; }
        public string Name { get; set; }
        public string Position { get; set; }
        public string Address { get; set; }
        public string Phone1 { get; set; }
        public string Phone2 { get; set; }
        public string MobilePhone { get; set; }
        public string Fax { get; set; }
        public string E_Mail { get; set; }
        public string Pager { get; set; }
        public string Remarks1 { get; set; }
        public string Remarks2 { get; set; }
        public string Password { get; set; }
        private int? _InternalCode;
        public int InternalCode
        {
            get { return _InternalCode.Value; }
            set { _InternalCode = value; }
        }
        public bool ShouldSerializeInternalCode()
        {
            return (_InternalCode.HasValue);
        }

        public string PlaceOfBirth { get; set; }
        private DateTime? _DateOfBirth;
        public DateTime DateOfBirth
        {
            get { return _DateOfBirth.Value; }
            set { _DateOfBirth = value; }
        }
        public bool ShouldSerializeDateOfBirth()
        {
            return (_DateOfBirth.HasValue);
        }

        private SAPB1.BoGenderTypes? _Gender;
        public SAPB1.BoGenderTypes Gender
        {
            get { return _Gender.Value; }
            set { _Gender = value; }
        }
        public bool ShouldSerializeGender()
        {
            return (_Gender.HasValue);
        }

        public string Profession { get; set; }
        public string Title { get; set; }
        public string CityOfBirth { get; set; }
        private SAPB1.BoYesNoEnum? _Active;
        public SAPB1.BoYesNoEnum Active
        {
            get { return _Active.Value; }
            set { _Active = value; }
        }
        public bool ShouldSerializeActive()
        {
            return (_Active.HasValue);
        }

        public string FirstName { get; set; }
        public string MiddleName { get; set; }
        public string LastName { get; set; }
        public string EmailGroupCode { get; set; }
    }

    public class BPAccountReceivablePayble
    {
        private SAPB1.BoBpAccountTypes? _AccountType;
        public SAPB1.BoBpAccountTypes AccountType
        {
            get { return _AccountType.Value; }
            set { _AccountType = value; }
        }
        public bool ShouldSerializeAccountType()
        {
            return (_AccountType.HasValue);
        }

        public string AccountCode { get; set; }
        public string BPCode { get; set; }
    }

    public class BPPaymentMethod
    {
        public string PaymentMethodCode { get; set; }
        private int? _RowNumber;
        public int RowNumber
        {
            get { return _RowNumber.Value; }
            set { _RowNumber = value; }
        }
        public bool ShouldSerializeRowNumber()
        {
            return (_RowNumber.HasValue);
        }

        public string BPCode { get; set; }
    }

    public class BPWithholdingTax
    {
        public string WTCode { get; set; }
        public string BPCode { get; set; }
    }

    public class BPPaymentDate
    {
        public string PaymentDate { get; set; }
        public string BPCode { get; set; }
    }

    public class BPBranchAssignmentItem
    {
        public string BPCode { get; set; }
        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

    }

    public class BPBankAccount
    {
        private int? _LogInstance;
        public int LogInstance
        {
            get { return _LogInstance.Value; }
            set { _LogInstance = value; }
        }
        public bool ShouldSerializeLogInstance()
        {
            return (_LogInstance.HasValue);
        }

        public string UserNo4 { get; set; }
        public string BPCode { get; set; }
        public string County { get; set; }
        public string State { get; set; }
        public string UserNo2 { get; set; }
        public string IBAN { get; set; }
        public string ZipCode { get; set; }
        public string City { get; set; }
        public string Block { get; set; }
        public string Branch { get; set; }
        public string Country { get; set; }
        public string Street { get; set; }
        public string ControlKey { get; set; }
        public string UserNo3 { get; set; }
        public string BankCode { get; set; }
        public string AccountNo { get; set; }
        public string UserNo1 { get; set; }
        private int? _InternalKey;
        public int InternalKey
        {
            get { return _InternalKey.Value; }
            set { _InternalKey = value; }
        }
        public bool ShouldSerializeInternalKey()
        {
            return (_InternalKey.HasValue);
        }

        public string BuildingFloorRoom { get; set; }
        public string BIK { get; set; }
        public string AccountName { get; set; }
        public string CorrespondentAccount { get; set; }
        public string Phone { get; set; }
        public string Fax { get; set; }
        public string CustomerIdNumber { get; set; }
        public string ISRBillerID { get; set; }
        private int? _ISRType;
        public int ISRType
        {
            get { return _ISRType.Value; }
            set { _ISRType = value; }
        }
        public bool ShouldSerializeISRType()
        {
            return (_ISRType.HasValue);
        }

        public string BICSwiftCode { get; set; }
        public string ABARoutingNumber { get; set; }
        public string MandateID { get; set; }
        private DateTime? _SignatureDate;
        public DateTime SignatureDate
        {
            get { return _SignatureDate.Value; }
            set { _SignatureDate = value; }
        }
        public bool ShouldSerializeSignatureDate()
        {
            return (_SignatureDate.HasValue);
        }

        private DateTime? _MandateExpDate;
        public DateTime MandateExpDate
        {
            get { return _MandateExpDate.Value; }
            set { _MandateExpDate = value; }
        }
        public bool ShouldSerializeMandateExpDate()
        {
            return (_MandateExpDate.HasValue);
        }

        private SAPB1.SEPASequenceTypeEnum? _SEPASeqType;
        public SAPB1.SEPASequenceTypeEnum SEPASeqType
        {
            get { return _SEPASeqType.Value; }
            set { _SEPASeqType = value; }
        }
        public bool ShouldSerializeSEPASeqType()
        {
            return (_SEPASeqType.HasValue);
        }

    }

    public class BPFiscalTaxID
    {
        public string Address { get; set; }
        private int? _CNAECode;
        public int CNAECode
        {
            get { return _CNAECode.Value; }
            set { _CNAECode = value; }
        }
        public bool ShouldSerializeCNAECode()
        {
            return (_CNAECode.HasValue);
        }

        public string TaxId0 { get; set; }
        public string TaxId1 { get; set; }
        public string TaxId2 { get; set; }
        public string TaxId3 { get; set; }
        public string TaxId4 { get; set; }
        public string TaxId5 { get; set; }
        public string TaxId6 { get; set; }
        public string TaxId7 { get; set; }
        public string TaxId8 { get; set; }
        public string TaxId9 { get; set; }
        public string TaxId10 { get; set; }
        public string TaxId11 { get; set; }
        public string BPCode { get; set; }
        private SAPB1.BoAddressType? _AddrType;
        public SAPB1.BoAddressType AddrType
        {
            get { return _AddrType.Value; }
            set { _AddrType = value; }
        }
        public bool ShouldSerializeAddrType()
        {
            return (_AddrType.HasValue);
        }

        public string TaxId12 { get; set; }
        public string TaxId13 { get; set; }
    }

    public class DiscountGroup
    {
        public string ObjectEntry { get; set; }
        private decimal? _DiscountPercentage;
        public decimal DiscountPercentage
        {
            get { return _DiscountPercentage.Value; }
            set { _DiscountPercentage = value; }
        }
        public bool ShouldSerializeDiscountPercentage()
        {
            return (_DiscountPercentage.HasValue);
        }

        public string BPCode { get; set; }
        private SAPB1.DiscountGroupBaseObjectEnum? _BaseObjectType;
        public SAPB1.DiscountGroupBaseObjectEnum BaseObjectType
        {
            get { return _BaseObjectType.Value; }
            set { _BaseObjectType = value; }
        }
        public bool ShouldSerializeBaseObjectType()
        {
            return (_BaseObjectType.HasValue);
        }

    }

    public class BPIntrastatExtension
    {
        public string CardCode { get; set; }
        private int? _TransportMode;
        public int TransportMode
        {
            get { return _TransportMode.Value; }
            set { _TransportMode = value; }
        }
        public bool ShouldSerializeTransportMode()
        {
            return (_TransportMode.HasValue);
        }

        private int? _Incoterms;
        public int Incoterms
        {
            get { return _Incoterms.Value; }
            set { _Incoterms = value; }
        }
        public bool ShouldSerializeIncoterms()
        {
            return (_Incoterms.HasValue);
        }

        private int? _NatureOfTransactions;
        public int NatureOfTransactions
        {
            get { return _NatureOfTransactions.Value; }
            set { _NatureOfTransactions = value; }
        }
        public bool ShouldSerializeNatureOfTransactions()
        {
            return (_NatureOfTransactions.HasValue);
        }

        private int? _StatisticalProcedure;
        public int StatisticalProcedure
        {
            get { return _StatisticalProcedure.Value; }
            set { _StatisticalProcedure = value; }
        }
        public bool ShouldSerializeStatisticalProcedure()
        {
            return (_StatisticalProcedure.HasValue);
        }

        private int? _CustomsProcedure;
        public int CustomsProcedure
        {
            get { return _CustomsProcedure.Value; }
            set { _CustomsProcedure = value; }
        }
        public bool ShouldSerializeCustomsProcedure()
        {
            return (_CustomsProcedure.HasValue);
        }

        private int? _PortOfEntryOrExit;
        public int PortOfEntryOrExit
        {
            get { return _PortOfEntryOrExit.Value; }
            set { _PortOfEntryOrExit = value; }
        }
        public bool ShouldSerializePortOfEntryOrExit()
        {
            return (_PortOfEntryOrExit.HasValue);
        }

        public string DomesticOrForeignID { get; set; }
        private SAPB1.BoYesNoEnum? _IntrastatRelevant;
        public SAPB1.BoYesNoEnum IntrastatRelevant
        {
            get { return _IntrastatRelevant.Value; }
            set { _IntrastatRelevant = value; }
        }
        public bool ShouldSerializeIntrastatRelevant()
        {
            return (_IntrastatRelevant.HasValue);
        }

    }

    public class OpenningBalanceAccount
    {
        public string OpenBalanceAccount { get; set; }
        private DateTime? _Date;
        public DateTime Date
        {
            get { return _Date.Value; }
            set { _Date = value; }
        }
        public bool ShouldSerializeDate()
        {
            return (_Date.HasValue);
        }

        public string Ref1 { get; set; }
        public string Ref2 { get; set; }
        public string Details { get; set; }
    }

    public class BPCode
    {
        public string Code { get; set; }
        private DateTime? _DueDate;
        public DateTime DueDate
        {
            get { return _DueDate.Value; }
            set { _DueDate = value; }
        }
        public bool ShouldSerializeDueDate()
        {
            return (_DueDate.HasValue);
        }

        private decimal? _Debit;
        public decimal Debit
        {
            get { return _Debit.Value; }
            set { _Debit = value; }
        }
        public bool ShouldSerializeDebit()
        {
            return (_Debit.HasValue);
        }

        private decimal? _Credit;
        public decimal Credit
        {
            get { return _Credit.Value; }
            set { _Credit = value; }
        }
        public bool ShouldSerializeCredit()
        {
            return (_Credit.HasValue);
        }

        private decimal? _SystemDebit;
        public decimal SystemDebit
        {
            get { return _SystemDebit.Value; }
            set { _SystemDebit = value; }
        }
        public bool ShouldSerializeSystemDebit()
        {
            return (_SystemDebit.HasValue);
        }

        private decimal? _SystemCredit;
        public decimal SystemCredit
        {
            get { return _SystemCredit.Value; }
            set { _SystemCredit = value; }
        }
        public bool ShouldSerializeSystemCredit()
        {
            return (_SystemCredit.HasValue);
        }

        private decimal? _ForeignDebit;
        public decimal ForeignDebit
        {
            get { return _ForeignDebit.Value; }
            set { _ForeignDebit = value; }
        }
        public bool ShouldSerializeForeignDebit()
        {
            return (_ForeignDebit.HasValue);
        }

        private decimal? _ForeignCredit;
        public decimal ForeignCredit
        {
            get { return _ForeignCredit.Value; }
            set { _ForeignCredit = value; }
        }
        public bool ShouldSerializeForeignCredit()
        {
            return (_ForeignCredit.HasValue);
        }

        public string ForeignCurrency { get; set; }
        public string BpCtrlAcct { get; set; }
    }

    public class Territory
    {
        private int? _TerritoryID;
        public int TerritoryID
        {
            get { return _TerritoryID.Value; }
            set { _TerritoryID = value; }
        }
        public bool ShouldSerializeTerritoryID()
        {
            return (_TerritoryID.HasValue);
        }

        public string Description { get; set; }
        private int? _LocationIndex;
        public int LocationIndex
        {
            get { return _LocationIndex.Value; }
            set { _LocationIndex = value; }
        }
        public bool ShouldSerializeLocationIndex()
        {
            return (_LocationIndex.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Inactive;
        public SAPB1.BoYesNoEnum Inactive
        {
            get { return _Inactive.Value; }
            set { _Inactive = value; }
        }
        public bool ShouldSerializeInactive()
        {
            return (_Inactive.HasValue);
        }

        private int? _Parent;
        public int Parent
        {
            get { return _Parent.Value; }
            set { _Parent = value; }
        }
        public bool ShouldSerializeParent()
        {
            return (_Parent.HasValue);
        }

    }

    public class Industry
    {
        public string IndustryDescription { get; set; }
        public string IndustryName { get; set; }
        private int? _IndustryCode;
        public int IndustryCode
        {
            get { return _IndustryCode.Value; }
            set { _IndustryCode = value; }
        }
        public bool ShouldSerializeIndustryCode()
        {
            return (_IndustryCode.HasValue);
        }

    }

    public class ProductionOrderParams
    {
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

    }

    public class ProductionOrder
    {
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

        private int? _DocumentNumber;
        public int DocumentNumber
        {
            get { return _DocumentNumber.Value; }
            set { _DocumentNumber = value; }
        }
        public bool ShouldSerializeDocumentNumber()
        {
            return (_DocumentNumber.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        public string ItemNo { get; set; }
        private SAPB1.BoProductionOrderStatusEnum? _ProductionOrderStatus;
        public SAPB1.BoProductionOrderStatusEnum ProductionOrderStatus
        {
            get { return _ProductionOrderStatus.Value; }
            set { _ProductionOrderStatus = value; }
        }
        public bool ShouldSerializeProductionOrderStatus()
        {
            return (_ProductionOrderStatus.HasValue);
        }

        private SAPB1.BoProductionOrderTypeEnum? _ProductionOrderType;
        public SAPB1.BoProductionOrderTypeEnum ProductionOrderType
        {
            get { return _ProductionOrderType.Value; }
            set { _ProductionOrderType = value; }
        }
        public bool ShouldSerializeProductionOrderType()
        {
            return (_ProductionOrderType.HasValue);
        }

        private decimal? _PlannedQuantity;
        public decimal PlannedQuantity
        {
            get { return _PlannedQuantity.Value; }
            set { _PlannedQuantity = value; }
        }
        public bool ShouldSerializePlannedQuantity()
        {
            return (_PlannedQuantity.HasValue);
        }

        private decimal? _CompletedQuantity;
        public decimal CompletedQuantity
        {
            get { return _CompletedQuantity.Value; }
            set { _CompletedQuantity = value; }
        }
        public bool ShouldSerializeCompletedQuantity()
        {
            return (_CompletedQuantity.HasValue);
        }

        private decimal? _RejectedQuantity;
        public decimal RejectedQuantity
        {
            get { return _RejectedQuantity.Value; }
            set { _RejectedQuantity = value; }
        }
        public bool ShouldSerializeRejectedQuantity()
        {
            return (_RejectedQuantity.HasValue);
        }

        private DateTime? _PostingDate;
        public DateTime PostingDate
        {
            get { return _PostingDate.Value; }
            set { _PostingDate = value; }
        }
        public bool ShouldSerializePostingDate()
        {
            return (_PostingDate.HasValue);
        }

        private DateTime? _DueDate;
        public DateTime DueDate
        {
            get { return _DueDate.Value; }
            set { _DueDate = value; }
        }
        public bool ShouldSerializeDueDate()
        {
            return (_DueDate.HasValue);
        }

        private int? _ProductionOrderOriginEntry;
        public int ProductionOrderOriginEntry
        {
            get { return _ProductionOrderOriginEntry.Value; }
            set { _ProductionOrderOriginEntry = value; }
        }
        public bool ShouldSerializeProductionOrderOriginEntry()
        {
            return (_ProductionOrderOriginEntry.HasValue);
        }

        private int? _ProductionOrderOriginNumber;
        public int ProductionOrderOriginNumber
        {
            get { return _ProductionOrderOriginNumber.Value; }
            set { _ProductionOrderOriginNumber = value; }
        }
        public bool ShouldSerializeProductionOrderOriginNumber()
        {
            return (_ProductionOrderOriginNumber.HasValue);
        }

        private SAPB1.BoProductionOrderOriginEnum? _ProductionOrderOrigin;
        public SAPB1.BoProductionOrderOriginEnum ProductionOrderOrigin
        {
            get { return _ProductionOrderOrigin.Value; }
            set { _ProductionOrderOrigin = value; }
        }
        public bool ShouldSerializeProductionOrderOrigin()
        {
            return (_ProductionOrderOrigin.HasValue);
        }

        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        public string Remarks { get; set; }
        private DateTime? _ClosingDate;
        public DateTime ClosingDate
        {
            get { return _ClosingDate.Value; }
            set { _ClosingDate = value; }
        }
        public bool ShouldSerializeClosingDate()
        {
            return (_ClosingDate.HasValue);
        }

        private DateTime? _ReleaseDate;
        public DateTime ReleaseDate
        {
            get { return _ReleaseDate.Value; }
            set { _ReleaseDate = value; }
        }
        public bool ShouldSerializeReleaseDate()
        {
            return (_ReleaseDate.HasValue);
        }

        public string CustomerCode { get; set; }
        public string Warehouse { get; set; }
        public string InventoryUOM { get; set; }
        public string JournalRemarks { get; set; }
        private int? _TransactionNumber;
        public int TransactionNumber
        {
            get { return _TransactionNumber.Value; }
            set { _TransactionNumber = value; }
        }
        public bool ShouldSerializeTransactionNumber()
        {
            return (_TransactionNumber.HasValue);
        }

        private DateTime? _CreationDate;
        public DateTime CreationDate
        {
            get { return _CreationDate.Value; }
            set { _CreationDate = value; }
        }
        public bool ShouldSerializeCreationDate()
        {
            return (_CreationDate.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Printed;
        public SAPB1.BoYesNoEnum Printed
        {
            get { return _Printed.Value; }
            set { _Printed = value; }
        }
        public bool ShouldSerializePrinted()
        {
            return (_Printed.HasValue);
        }

        public string DistributionRule { get; set; }
        public string Project { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ProductionOrderLine> ProductionOrderLines { get; set; }
        public System.Collections.Generic.List<SAPB1.ProductionOrdersSalesOrderLine> ProductionOrdersSalesOrderLines { get; set; }
    }

    public class ProductionOrderLine
    {
        private int? _DocumentAbsoluteEntry;
        public int DocumentAbsoluteEntry
        {
            get { return _DocumentAbsoluteEntry.Value; }
            set { _DocumentAbsoluteEntry = value; }
        }
        public bool ShouldSerializeDocumentAbsoluteEntry()
        {
            return (_DocumentAbsoluteEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        public string ItemNo { get; set; }
        private decimal? _BaseQuantity;
        public decimal BaseQuantity
        {
            get { return _BaseQuantity.Value; }
            set { _BaseQuantity = value; }
        }
        public bool ShouldSerializeBaseQuantity()
        {
            return (_BaseQuantity.HasValue);
        }

        private decimal? _PlannedQuantity;
        public decimal PlannedQuantity
        {
            get { return _PlannedQuantity.Value; }
            set { _PlannedQuantity = value; }
        }
        public bool ShouldSerializePlannedQuantity()
        {
            return (_PlannedQuantity.HasValue);
        }

        private decimal? _IssuedQuantity;
        public decimal IssuedQuantity
        {
            get { return _IssuedQuantity.Value; }
            set { _IssuedQuantity = value; }
        }
        public bool ShouldSerializeIssuedQuantity()
        {
            return (_IssuedQuantity.HasValue);
        }

        private SAPB1.BoIssueMethod? _ProductionOrderIssueType;
        public SAPB1.BoIssueMethod ProductionOrderIssueType
        {
            get { return _ProductionOrderIssueType.Value; }
            set { _ProductionOrderIssueType = value; }
        }
        public bool ShouldSerializeProductionOrderIssueType()
        {
            return (_ProductionOrderIssueType.HasValue);
        }

        public string Warehouse { get; set; }
        private int? _VisualOrder;
        public int VisualOrder
        {
            get { return _VisualOrder.Value; }
            set { _VisualOrder = value; }
        }
        public bool ShouldSerializeVisualOrder()
        {
            return (_VisualOrder.HasValue);
        }

        public string DistributionRule { get; set; }
        private int? _LocationCode;
        public int LocationCode
        {
            get { return _LocationCode.Value; }
            set { _LocationCode = value; }
        }
        public bool ShouldSerializeLocationCode()
        {
            return (_LocationCode.HasValue);
        }

        public string Project { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

        private int? _UoMCode;
        public int UoMCode
        {
            get { return _UoMCode.Value; }
            set { _UoMCode = value; }
        }
        public bool ShouldSerializeUoMCode()
        {
            return (_UoMCode.HasValue);
        }

        public string WipAccount { get; set; }
        private SAPB1.ProductionItemType? _ItemType;
        public SAPB1.ProductionItemType ItemType
        {
            get { return _ItemType.Value; }
            set { _ItemType = value; }
        }
        public bool ShouldSerializeItemType()
        {
            return (_ItemType.HasValue);
        }

        public string LineText { get; set; }
        private decimal? _AdditionalQuantity;
        public decimal AdditionalQuantity
        {
            get { return _AdditionalQuantity.Value; }
            set { _AdditionalQuantity = value; }
        }
        public bool ShouldSerializeAdditionalQuantity()
        {
            return (_AdditionalQuantity.HasValue);
        }

        private SAPB1.ResourceAllocationEnum? _ResourceAllocation;
        public SAPB1.ResourceAllocationEnum ResourceAllocation
        {
            get { return _ResourceAllocation.Value; }
            set { _ResourceAllocation = value; }
        }
        public bool ShouldSerializeResourceAllocation()
        {
            return (_ResourceAllocation.HasValue);
        }

        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private DateTime? _EndDate;
        public DateTime EndDate
        {
            get { return _EndDate.Value; }
            set { _EndDate = value; }
        }
        public bool ShouldSerializeEndDate()
        {
            return (_EndDate.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.SerialNumber> SerialNumbers { get; set; }
        public System.Collections.Generic.List<SAPB1.BatchNumber> BatchNumbers { get; set; }
    }

    public class ProductionOrdersSalesOrderLine
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private int? _BaseNumber;
        public int BaseNumber
        {
            get { return _BaseNumber.Value; }
            set { _BaseNumber = value; }
        }
        public bool ShouldSerializeBaseNumber()
        {
            return (_BaseNumber.HasValue);
        }

        private int? _BaseAbsEntry;
        public int BaseAbsEntry
        {
            get { return _BaseAbsEntry.Value; }
            set { _BaseAbsEntry = value; }
        }
        public bool ShouldSerializeBaseAbsEntry()
        {
            return (_BaseAbsEntry.HasValue);
        }

        private int? _BaseLine;
        public int BaseLine
        {
            get { return _BaseLine.Value; }
            set { _BaseLine = value; }
        }
        public bool ShouldSerializeBaseLine()
        {
            return (_BaseLine.HasValue);
        }

    }

    public class PackagesType
    {
        public string Type { get; set; }
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        private decimal? _Length1;
        public decimal Length1
        {
            get { return _Length1.Value; }
            set { _Length1 = value; }
        }
        public bool ShouldSerializeLength1()
        {
            return (_Length1.HasValue);
        }

        private int? _Length1Unit;
        public int Length1Unit
        {
            get { return _Length1Unit.Value; }
            set { _Length1Unit = value; }
        }
        public bool ShouldSerializeLength1Unit()
        {
            return (_Length1Unit.HasValue);
        }

        private decimal? _Length2;
        public decimal Length2
        {
            get { return _Length2.Value; }
            set { _Length2 = value; }
        }
        public bool ShouldSerializeLength2()
        {
            return (_Length2.HasValue);
        }

        private int? _Length2Unit;
        public int Length2Unit
        {
            get { return _Length2Unit.Value; }
            set { _Length2Unit = value; }
        }
        public bool ShouldSerializeLength2Unit()
        {
            return (_Length2Unit.HasValue);
        }

        private decimal? _Width1;
        public decimal Width1
        {
            get { return _Width1.Value; }
            set { _Width1 = value; }
        }
        public bool ShouldSerializeWidth1()
        {
            return (_Width1.HasValue);
        }

        private int? _Width1Unit;
        public int Width1Unit
        {
            get { return _Width1Unit.Value; }
            set { _Width1Unit = value; }
        }
        public bool ShouldSerializeWidth1Unit()
        {
            return (_Width1Unit.HasValue);
        }

        private decimal? _Width2;
        public decimal Width2
        {
            get { return _Width2.Value; }
            set { _Width2 = value; }
        }
        public bool ShouldSerializeWidth2()
        {
            return (_Width2.HasValue);
        }

        private int? _Width2Unit;
        public int Width2Unit
        {
            get { return _Width2Unit.Value; }
            set { _Width2Unit = value; }
        }
        public bool ShouldSerializeWidth2Unit()
        {
            return (_Width2Unit.HasValue);
        }

        private decimal? _Height1;
        public decimal Height1
        {
            get { return _Height1.Value; }
            set { _Height1 = value; }
        }
        public bool ShouldSerializeHeight1()
        {
            return (_Height1.HasValue);
        }

        private int? _Height1Unit;
        public int Height1Unit
        {
            get { return _Height1Unit.Value; }
            set { _Height1Unit = value; }
        }
        public bool ShouldSerializeHeight1Unit()
        {
            return (_Height1Unit.HasValue);
        }

        private decimal? _Height2;
        public decimal Height2
        {
            get { return _Height2.Value; }
            set { _Height2 = value; }
        }
        public bool ShouldSerializeHeight2()
        {
            return (_Height2.HasValue);
        }

        private int? _Height2Unit;
        public int Height2Unit
        {
            get { return _Height2Unit.Value; }
            set { _Height2Unit = value; }
        }
        public bool ShouldSerializeHeight2Unit()
        {
            return (_Height2Unit.HasValue);
        }

        private decimal? _Volume;
        public decimal Volume
        {
            get { return _Volume.Value; }
            set { _Volume = value; }
        }
        public bool ShouldSerializeVolume()
        {
            return (_Volume.HasValue);
        }

        private int? _VolumeUnit;
        public int VolumeUnit
        {
            get { return _VolumeUnit.Value; }
            set { _VolumeUnit = value; }
        }
        public bool ShouldSerializeVolumeUnit()
        {
            return (_VolumeUnit.HasValue);
        }

        private decimal? _Weight1;
        public decimal Weight1
        {
            get { return _Weight1.Value; }
            set { _Weight1 = value; }
        }
        public bool ShouldSerializeWeight1()
        {
            return (_Weight1.HasValue);
        }

        private int? _Weight1Unit;
        public int Weight1Unit
        {
            get { return _Weight1Unit.Value; }
            set { _Weight1Unit = value; }
        }
        public bool ShouldSerializeWeight1Unit()
        {
            return (_Weight1Unit.HasValue);
        }

        private decimal? _Weight2;
        public decimal Weight2
        {
            get { return _Weight2.Value; }
            set { _Weight2 = value; }
        }
        public bool ShouldSerializeWeight2()
        {
            return (_Weight2.HasValue);
        }

        private int? _Weight2Unit;
        public int Weight2Unit
        {
            get { return _Weight2Unit.Value; }
            set { _Weight2Unit = value; }
        }
        public bool ShouldSerializeWeight2Unit()
        {
            return (_Weight2Unit.HasValue);
        }

    }

    public class UserObjectsMD
    {
        public string TableName { get; set; }
        public string Code { get; set; }
        public string LogTableName { get; set; }
        private SAPB1.BoYesNoEnum? _CanCreateDefaultForm;
        public SAPB1.BoYesNoEnum CanCreateDefaultForm
        {
            get { return _CanCreateDefaultForm.Value; }
            set { _CanCreateDefaultForm = value; }
        }
        public bool ShouldSerializeCanCreateDefaultForm()
        {
            return (_CanCreateDefaultForm.HasValue);
        }

        private SAPB1.BoUDOObjType? _ObjectType;
        public SAPB1.BoUDOObjType ObjectType
        {
            get { return _ObjectType.Value; }
            set { _ObjectType = value; }
        }
        public bool ShouldSerializeObjectType()
        {
            return (_ObjectType.HasValue);
        }

        public string ExtensionName { get; set; }
        private SAPB1.BoYesNoEnum? _CanCancel;
        public SAPB1.BoYesNoEnum CanCancel
        {
            get { return _CanCancel.Value; }
            set { _CanCancel = value; }
        }
        public bool ShouldSerializeCanCancel()
        {
            return (_CanCancel.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CanDelete;
        public SAPB1.BoYesNoEnum CanDelete
        {
            get { return _CanDelete.Value; }
            set { _CanDelete = value; }
        }
        public bool ShouldSerializeCanDelete()
        {
            return (_CanDelete.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CanLog;
        public SAPB1.BoYesNoEnum CanLog
        {
            get { return _CanLog.Value; }
            set { _CanLog = value; }
        }
        public bool ShouldSerializeCanLog()
        {
            return (_CanLog.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ManageSeries;
        public SAPB1.BoYesNoEnum ManageSeries
        {
            get { return _ManageSeries.Value; }
            set { _ManageSeries = value; }
        }
        public bool ShouldSerializeManageSeries()
        {
            return (_ManageSeries.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CanFind;
        public SAPB1.BoYesNoEnum CanFind
        {
            get { return _CanFind.Value; }
            set { _CanFind = value; }
        }
        public bool ShouldSerializeCanFind()
        {
            return (_CanFind.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CanYearTransfer;
        public SAPB1.BoYesNoEnum CanYearTransfer
        {
            get { return _CanYearTransfer.Value; }
            set { _CanYearTransfer = value; }
        }
        public bool ShouldSerializeCanYearTransfer()
        {
            return (_CanYearTransfer.HasValue);
        }

        public string Name { get; set; }
        private SAPB1.BoYesNoEnum? _CanClose;
        public SAPB1.BoYesNoEnum CanClose
        {
            get { return _CanClose.Value; }
            set { _CanClose = value; }
        }
        public bool ShouldSerializeCanClose()
        {
            return (_CanClose.HasValue);
        }

        private SAPB1.BoYesNoEnum? _OverwriteDllfile;
        public SAPB1.BoYesNoEnum OverwriteDllfile
        {
            get { return _OverwriteDllfile.Value; }
            set { _OverwriteDllfile = value; }
        }
        public bool ShouldSerializeOverwriteDllfile()
        {
            return (_OverwriteDllfile.HasValue);
        }

        private SAPB1.BoYesNoEnum? _UseUniqueFormType;
        public SAPB1.BoYesNoEnum UseUniqueFormType
        {
            get { return _UseUniqueFormType.Value; }
            set { _UseUniqueFormType = value; }
        }
        public bool ShouldSerializeUseUniqueFormType()
        {
            return (_UseUniqueFormType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CanArchive;
        public SAPB1.BoYesNoEnum CanArchive
        {
            get { return _CanArchive.Value; }
            set { _CanArchive = value; }
        }
        public bool ShouldSerializeCanArchive()
        {
            return (_CanArchive.HasValue);
        }

        private SAPB1.BoYesNoEnum? _MenuItem;
        public SAPB1.BoYesNoEnum MenuItem
        {
            get { return _MenuItem.Value; }
            set { _MenuItem = value; }
        }
        public bool ShouldSerializeMenuItem()
        {
            return (_MenuItem.HasValue);
        }

        public string MenuCaption { get; set; }
        private int? _FatherMenuID;
        public int FatherMenuID
        {
            get { return _FatherMenuID.Value; }
            set { _FatherMenuID = value; }
        }
        public bool ShouldSerializeFatherMenuID()
        {
            return (_FatherMenuID.HasValue);
        }

        private int? _Position;
        public int Position
        {
            get { return _Position.Value; }
            set { _Position = value; }
        }
        public bool ShouldSerializePosition()
        {
            return (_Position.HasValue);
        }

        public string MenuUID { get; set; }
        private SAPB1.BoYesNoEnum? _EnableEnhancedForm;
        public SAPB1.BoYesNoEnum EnableEnhancedForm
        {
            get { return _EnableEnhancedForm.Value; }
            set { _EnableEnhancedForm = value; }
        }
        public bool ShouldSerializeEnableEnhancedForm()
        {
            return (_EnableEnhancedForm.HasValue);
        }

        private SAPB1.BoYesNoEnum? _RebuildEnhancedForm;
        public SAPB1.BoYesNoEnum RebuildEnhancedForm
        {
            get { return _RebuildEnhancedForm.Value; }
            set { _RebuildEnhancedForm = value; }
        }
        public bool ShouldSerializeRebuildEnhancedForm()
        {
            return (_RebuildEnhancedForm.HasValue);
        }

        public string FormSRF { get; set; }
        public System.Collections.Generic.List<SAPB1.UserObjectMD_ChildTable> UserObjectMD_ChildTables { get; set; }
        public System.Collections.Generic.List<SAPB1.UserObjectMD_FindColumn> UserObjectMD_FindColumns { get; set; }
        public System.Collections.Generic.List<SAPB1.UserObjectMD_FormColumn> UserObjectMD_FormColumns { get; set; }
        public System.Collections.Generic.List<SAPB1.UserObjectMD_EnhancedFormColumn> UserObjectMD_EnhancedFormColumns { get; set; }
    }

    public class UserObjectMD_ChildTable
    {
        private int? _SonNumber;
        public int SonNumber
        {
            get { return _SonNumber.Value; }
            set { _SonNumber = value; }
        }
        public bool ShouldSerializeSonNumber()
        {
            return (_SonNumber.HasValue);
        }

        public string TableName { get; set; }
        public string LogTableName { get; set; }
        public string Code { get; set; }
        public string ObjectName { get; set; }
    }

    public class UserObjectMD_FindColumn
    {
        private int? _ColumnNumber;
        public int ColumnNumber
        {
            get { return _ColumnNumber.Value; }
            set { _ColumnNumber = value; }
        }
        public bool ShouldSerializeColumnNumber()
        {
            return (_ColumnNumber.HasValue);
        }

        public string ColumnAlias { get; set; }
        public string ColumnDescription { get; set; }
        public string Code { get; set; }
    }

    public class UserObjectMD_FormColumn
    {
        public string FormColumnAlias { get; set; }
        public string FormColumnDescription { get; set; }
        private int? _FormColumnNumber;
        public int FormColumnNumber
        {
            get { return _FormColumnNumber.Value; }
            set { _FormColumnNumber = value; }
        }
        public bool ShouldSerializeFormColumnNumber()
        {
            return (_FormColumnNumber.HasValue);
        }

        private int? _SonNumber;
        public int SonNumber
        {
            get { return _SonNumber.Value; }
            set { _SonNumber = value; }
        }
        public bool ShouldSerializeSonNumber()
        {
            return (_SonNumber.HasValue);
        }

        public string Code { get; set; }
        private SAPB1.BoYesNoEnum? _Editable;
        public SAPB1.BoYesNoEnum Editable
        {
            get { return _Editable.Value; }
            set { _Editable = value; }
        }
        public bool ShouldSerializeEditable()
        {
            return (_Editable.HasValue);
        }

    }

    public class UserObjectMD_EnhancedFormColumn
    {
        public string Code { get; set; }
        private int? _ColumnNumber;
        public int ColumnNumber
        {
            get { return _ColumnNumber.Value; }
            set { _ColumnNumber = value; }
        }
        public bool ShouldSerializeColumnNumber()
        {
            return (_ColumnNumber.HasValue);
        }

        private int? _ChildNumber;
        public int ChildNumber
        {
            get { return _ChildNumber.Value; }
            set { _ChildNumber = value; }
        }
        public bool ShouldSerializeChildNumber()
        {
            return (_ChildNumber.HasValue);
        }

        public string ColumnAlias { get; set; }
        public string ColumnDescription { get; set; }
        private SAPB1.BoYesNoEnum? _ColumnIsUsed;
        public SAPB1.BoYesNoEnum ColumnIsUsed
        {
            get { return _ColumnIsUsed.Value; }
            set { _ColumnIsUsed = value; }
        }
        public bool ShouldSerializeColumnIsUsed()
        {
            return (_ColumnIsUsed.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Editable;
        public SAPB1.BoYesNoEnum Editable
        {
            get { return _Editable.Value; }
            set { _Editable = value; }
        }
        public bool ShouldSerializeEditable()
        {
            return (_Editable.HasValue);
        }

    }

    public class Team
    {
        private int? _TeamID;
        public int TeamID
        {
            get { return _TeamID.Value; }
            set { _TeamID = value; }
        }
        public bool ShouldSerializeTeamID()
        {
            return (_TeamID.HasValue);
        }

        public string TeamName { get; set; }
        public string Description { get; set; }
        public System.Collections.Generic.List<SAPB1.TeamMember> TeamMembers { get; set; }
    }

    public class TeamMember
    {
        private int? _TeamID;
        public int TeamID
        {
            get { return _TeamID.Value; }
            set { _TeamID = value; }
        }
        public bool ShouldSerializeTeamID()
        {
            return (_TeamID.HasValue);
        }

        private int? _EmployeeID;
        public int EmployeeID
        {
            get { return _EmployeeID.Value; }
            set { _EmployeeID = value; }
        }
        public bool ShouldSerializeEmployeeID()
        {
            return (_EmployeeID.HasValue);
        }

        private SAPB1.BoRoleInTeam? _RoleInTeam;
        public SAPB1.BoRoleInTeam RoleInTeam
        {
            get { return _RoleInTeam.Value; }
            set { _RoleInTeam = value; }
        }
        public bool ShouldSerializeRoleInTeam()
        {
            return (_RoleInTeam.HasValue);
        }

    }

    public class Relationship
    {
        public string RelationshipDescription { get; set; }
        private int? _RelationshipCode;
        public int RelationshipCode
        {
            get { return _RelationshipCode.Value; }
            set { _RelationshipCode = value; }
        }
        public bool ShouldSerializeRelationshipCode()
        {
            return (_RelationshipCode.HasValue);
        }

    }

    public class UserPermissionTree
    {
        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        private int? _DisplayOrder;
        public int DisplayOrder
        {
            get { return _DisplayOrder.Value; }
            set { _DisplayOrder = value; }
        }
        public bool ShouldSerializeDisplayOrder()
        {
            return (_DisplayOrder.HasValue);
        }

        public string PermissionID { get; set; }
        private SAPB1.BoUPTOptions? _Options;
        public SAPB1.BoUPTOptions Options
        {
            get { return _Options.Value; }
            set { _Options = value; }
        }
        public bool ShouldSerializeOptions()
        {
            return (_Options.HasValue);
        }

        public string Name { get; set; }
        private int? _Levels;
        public int Levels
        {
            get { return _Levels.Value; }
            set { _Levels = value; }
        }
        public bool ShouldSerializeLevels()
        {
            return (_Levels.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsItem;
        public SAPB1.BoYesNoEnum IsItem
        {
            get { return _IsItem.Value; }
            set { _IsItem = value; }
        }
        public bool ShouldSerializeIsItem()
        {
            return (_IsItem.HasValue);
        }

        public string ParentID { get; set; }
        public System.Collections.Generic.List<SAPB1.UserPermissionForm> UserPermissionForms { get; set; }
    }

    public class UserPermissionForm
    {
        public string FormType { get; set; }
        private int? _DisplayOrder;
        public int DisplayOrder
        {
            get { return _DisplayOrder.Value; }
            set { _DisplayOrder = value; }
        }
        public bool ShouldSerializeDisplayOrder()
        {
            return (_DisplayOrder.HasValue);
        }

        public string PermissionID { get; set; }
    }

    public class ActivityStatus
    {
        public string StatusDescription { get; set; }
        private int? _StatusId;
        public int StatusId
        {
            get { return _StatusId.Value; }
            set { _StatusId = value; }
        }
        public bool ShouldSerializeStatusId()
        {
            return (_StatusId.HasValue);
        }

        public string StatusName { get; set; }
    }

    public class ChooseFromList
    {
        public string ObjectName { get; set; }
        public System.Collections.Generic.List<SAPB1.ChooseFromList_Line> ChooseFromList_Lines { get; set; }
    }

    public class ChooseFromList_Line
    {
        public string FieldNo { get; set; }
        public string DisplayedName { get; set; }
        private SAPB1.BoYesNoEnum? _GroupBy;
        public SAPB1.BoYesNoEnum GroupBy
        {
            get { return _GroupBy.Value; }
            set { _GroupBy = value; }
        }
        public bool ShouldSerializeGroupBy()
        {
            return (_GroupBy.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Visible;
        public SAPB1.BoYesNoEnum Visible
        {
            get { return _Visible.Value; }
            set { _Visible = value; }
        }
        public bool ShouldSerializeVisible()
        {
            return (_Visible.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ShowType;
        public SAPB1.BoYesNoEnum ShowType
        {
            get { return _ShowType.Value; }
            set { _ShowType = value; }
        }
        public bool ShouldSerializeShowType()
        {
            return (_ShowType.HasValue);
        }

        private SAPB1.SortOrderEnum? _SortOrder;
        public SAPB1.SortOrderEnum SortOrder
        {
            get { return _SortOrder.Value; }
            set { _SortOrder = value; }
        }
        public bool ShouldSerializeSortOrder()
        {
            return (_SortOrder.HasValue);
        }

        private int? _VisualIndex;
        public int VisualIndex
        {
            get { return _VisualIndex.Value; }
            set { _VisualIndex = value; }
        }
        public bool ShouldSerializeVisualIndex()
        {
            return (_VisualIndex.HasValue);
        }

    }

    public class FormattedSearche
    {
        public string FormID { get; set; }
        public string ItemID { get; set; }
        public string ColumnID { get; set; }
        private SAPB1.BoFormattedSearchActionEnum? _Action;
        public SAPB1.BoFormattedSearchActionEnum Action
        {
            get { return _Action.Value; }
            set { _Action = value; }
        }
        public bool ShouldSerializeAction()
        {
            return (_Action.HasValue);
        }

        private int? _QueryID;
        public int QueryID
        {
            get { return _QueryID.Value; }
            set { _QueryID = value; }
        }
        public bool ShouldSerializeQueryID()
        {
            return (_QueryID.HasValue);
        }

        private int? _Index;
        public int Index
        {
            get { return _Index.Value; }
            set { _Index = value; }
        }
        public bool ShouldSerializeIndex()
        {
            return (_Index.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Refresh;
        public SAPB1.BoYesNoEnum Refresh
        {
            get { return _Refresh.Value; }
            set { _Refresh = value; }
        }
        public bool ShouldSerializeRefresh()
        {
            return (_Refresh.HasValue);
        }

        public string FieldID { get; set; }
        private SAPB1.BoYesNoEnum? _ForceRefresh;
        public SAPB1.BoYesNoEnum ForceRefresh
        {
            get { return _ForceRefresh.Value; }
            set { _ForceRefresh = value; }
        }
        public bool ShouldSerializeForceRefresh()
        {
            return (_ForceRefresh.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ByField;
        public SAPB1.BoYesNoEnum ByField
        {
            get { return _ByField.Value; }
            set { _ByField = value; }
        }
        public bool ShouldSerializeByField()
        {
            return (_ByField.HasValue);
        }

    }

    public class Attachments2
    {
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.Attachments2_Line> Attachments2_Lines { get; set; }
    }

    public class Attachments2_Line
    {
        public string SourcePath { get; set; }
        public string FileName { get; set; }
        public string FileExtension { get; set; }
        private DateTime? _AttachmentDate;
        public DateTime AttachmentDate
        {
            get { return _AttachmentDate.Value; }
            set { _AttachmentDate = value; }
        }
        public bool ShouldSerializeAttachmentDate()
        {
            return (_AttachmentDate.HasValue);
        }

        private int? _UserID;
        public int UserID
        {
            get { return _UserID.Value; }
            set { _UserID = value; }
        }
        public bool ShouldSerializeUserID()
        {
            return (_UserID.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Override;
        public SAPB1.BoYesNoEnum Override
        {
            get { return _Override.Value; }
            set { _Override = value; }
        }
        public bool ShouldSerializeOverride()
        {
            return (_Override.HasValue);
        }

    }

    public class UserLanguage
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string LanguageShortName { get; set; }
        public string LanguageFullName { get; set; }
        private int? _RelatedSystemLanguage;
        public int RelatedSystemLanguage
        {
            get { return _RelatedSystemLanguage.Value; }
            set { _RelatedSystemLanguage = value; }
        }
        public bool ShouldSerializeRelatedSystemLanguage()
        {
            return (_RelatedSystemLanguage.HasValue);
        }

    }

    public class MultiLanguageTranslation
    {
        private int? _Numerator;
        public int Numerator
        {
            get { return _Numerator.Value; }
            set { _Numerator = value; }
        }
        public bool ShouldSerializeNumerator()
        {
            return (_Numerator.HasValue);
        }

        public string TableName { get; set; }
        public string FieldAlias { get; set; }
        public string PrimaryKeyofobject { get; set; }
        public System.Collections.Generic.List<SAPB1.TranslationsInUserLanguage> TranslationsInUserLanguages { get; set; }
    }

    public class TranslationsInUserLanguage
    {
        private int? _KeyFromHeaderTable;
        public int KeyFromHeaderTable
        {
            get { return _KeyFromHeaderTable.Value; }
            set { _KeyFromHeaderTable = value; }
        }
        public bool ShouldSerializeKeyFromHeaderTable()
        {
            return (_KeyFromHeaderTable.HasValue);
        }

        private int? _LanguageCodeOfUserLanguage;
        public int LanguageCodeOfUserLanguage
        {
            get { return _LanguageCodeOfUserLanguage.Value; }
            set { _LanguageCodeOfUserLanguage = value; }
        }
        public bool ShouldSerializeLanguageCodeOfUserLanguage()
        {
            return (_LanguageCodeOfUserLanguage.HasValue);
        }

        public string Translationscontent { get; set; }
    }

    public class DynamicSystemStringParams
    {
        public string FormID { get; set; }
        public string ItemID { get; set; }
        public string ColumnID { get; set; }
    }

    public class DynamicSystemString
    {
        public string FormID { get; set; }
        public string ItemID { get; set; }
        public string ColumnID { get; set; }
        public string ItemString { get; set; }
        private SAPB1.BoYesNoEnum? _IsBold;
        public SAPB1.BoYesNoEnum IsBold
        {
            get { return _IsBold.Value; }
            set { _IsBold = value; }
        }
        public bool ShouldSerializeIsBold()
        {
            return (_IsBold.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsItalics;
        public SAPB1.BoYesNoEnum IsItalics
        {
            get { return _IsItalics.Value; }
            set { _IsItalics = value; }
        }
        public bool ShouldSerializeIsItalics()
        {
            return (_IsItalics.HasValue);
        }

    }

    public class DynamicSystemStringKey
    {
        public string FormID { get; set; }
        public string ItemID { get; set; }
        public string ColumnID { get; set; }
    }

    public class HouseBankAccount
    {
        public string BankCode { get; set; }
        public string AccNo { get; set; }
        public string Branch { get; set; }
        private int? _NextCheckNo;
        public int NextCheckNo
        {
            get { return _NextCheckNo.Value; }
            set { _NextCheckNo = value; }
        }
        public bool ShouldSerializeNextCheckNo()
        {
            return (_NextCheckNo.HasValue);
        }

        public string GLAccount { get; set; }
        public string Street { get; set; }
        public string Block { get; set; }
        public string ZipCode { get; set; }
        public string City { get; set; }
        public string County { get; set; }
        public string Country { get; set; }
        public string State { get; set; }
        private SAPB1.BoYesNoEnum? _BISR;
        public SAPB1.BoYesNoEnum BISR
        {
            get { return _BISR.Value; }
            set { _BISR = value; }
        }
        public bool ShouldSerializeBISR()
        {
            return (_BISR.HasValue);
        }

        public string ControlKey { get; set; }
        public string UserNo1 { get; set; }
        public string UserNo2 { get; set; }
        public string UserNo3 { get; set; }
        public string UserNo4 { get; set; }
        public string IBAN { get; set; }
        public string DebtofDiscountedBillofExc { get; set; }
        private int? _ToleranceDays;
        public int ToleranceDays
        {
            get { return _ToleranceDays.Value; }
            set { _ToleranceDays = value; }
        }
        public bool ShouldSerializeToleranceDays()
        {
            return (_ToleranceDays.HasValue);
        }

        private decimal? _MinAmountofBillofExchang;
        public decimal MinAmountofBillofExchang
        {
            get { return _MinAmountofBillofExchang.Value; }
            set { _MinAmountofBillofExchang = value; }
        }
        public bool ShouldSerializeMinAmountofBillofExchang()
        {
            return (_MinAmountofBillofExchang.HasValue);
        }

        private decimal? _MaxAmountofBillofExchan;
        public decimal MaxAmountofBillofExchan
        {
            get { return _MaxAmountofBillofExchan.Value; }
            set { _MaxAmountofBillofExchan = value; }
        }
        public bool ShouldSerializeMaxAmountofBillofExchan()
        {
            return (_MaxAmountofBillofExchan.HasValue);
        }

        private decimal? _DiscountLimit;
        public decimal DiscountLimit
        {
            get { return _DiscountLimit.Value; }
            set { _DiscountLimit = value; }
        }
        public bool ShouldSerializeDiscountLimit()
        {
            return (_DiscountLimit.HasValue);
        }

        private int? _DaysInAdvance;
        public int DaysInAdvance
        {
            get { return _DaysInAdvance.Value; }
            set { _DaysInAdvance = value; }
        }
        public bool ShouldSerializeDaysInAdvance()
        {
            return (_DaysInAdvance.HasValue);
        }

        public string BankonCollection { get; set; }
        public string BankonDiscounted { get; set; }
        public string GLInterimAccount { get; set; }
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

        private int? _BankKey;
        public int BankKey
        {
            get { return _BankKey.Value; }
            set { _BankKey = value; }
        }
        public bool ShouldSerializeBankKey()
        {
            return (_BankKey.HasValue);
        }

        private SAPB1.BoYesNoEnum? _LockChecksPrinting;
        public SAPB1.BoYesNoEnum LockChecksPrinting
        {
            get { return _LockChecksPrinting.Value; }
            set { _LockChecksPrinting = value; }
        }
        public bool ShouldSerializeLockChecksPrinting()
        {
            return (_LockChecksPrinting.HasValue);
        }

        public string TemplateName { get; set; }
        private int? _MaximumLines;
        public int MaximumLines
        {
            get { return _MaximumLines.Value; }
            set { _MaximumLines = value; }
        }
        public bool ShouldSerializeMaximumLines()
        {
            return (_MaximumLines.HasValue);
        }

        private SAPB1.PrintOnEnum? _PrintOn;
        public SAPB1.PrintOnEnum PrintOn
        {
            get { return _PrintOn.Value; }
            set { _PrintOn = value; }
        }
        public bool ShouldSerializePrintOn()
        {
            return (_PrintOn.HasValue);
        }

        public string CustomerIdNumber { get; set; }
        public string ISRBillerID { get; set; }
        private int? _ISRType;
        public int ISRType
        {
            get { return _ISRType.Value; }
            set { _ISRType = value; }
        }
        public bool ShouldSerializeISRType()
        {
            return (_ISRType.HasValue);
        }

        public string AccountCheckDigit { get; set; }
        private int? _OurNumber;
        public int OurNumber
        {
            get { return _OurNumber.Value; }
            set { _OurNumber = value; }
        }
        public bool ShouldSerializeOurNumber()
        {
            return (_OurNumber.HasValue);
        }

        public string AgreementNumber { get; set; }
        public string AddressType { get; set; }
        public string StreetNo { get; set; }
        public string Building { get; set; }
        private int? _IncomingPaymentSeries;
        public int IncomingPaymentSeries
        {
            get { return _IncomingPaymentSeries.Value; }
            set { _IncomingPaymentSeries = value; }
        }
        public bool ShouldSerializeIncomingPaymentSeries()
        {
            return (_IncomingPaymentSeries.HasValue);
        }

        private int? _OutgoingPaymentSeries;
        public int OutgoingPaymentSeries
        {
            get { return _OutgoingPaymentSeries.Value; }
            set { _OutgoingPaymentSeries = value; }
        }
        public bool ShouldSerializeOutgoingPaymentSeries()
        {
            return (_OutgoingPaymentSeries.HasValue);
        }

        private int? _JournalEntrySeries;
        public int JournalEntrySeries
        {
            get { return _JournalEntrySeries.Value; }
            set { _JournalEntrySeries = value; }
        }
        public bool ShouldSerializeJournalEntrySeries()
        {
            return (_JournalEntrySeries.HasValue);
        }

        public string ImportFileName { get; set; }
        public string AccountName { get; set; }
        public string BICSwiftCode { get; set; }
        public string FineAccount { get; set; }
        public string InterestAccount { get; set; }
        public string DiscountAccount { get; set; }
        public string ServiceFeeAccount { get; set; }
        public string IOFTaxAccount { get; set; }
        public string OtherExpensesAccount { get; set; }
        public string OtherIncomesAccount { get; set; }
        public string RetornoFileName { get; set; }
        public string BranchCheckDigit { get; set; }
        public string CollectionCode { get; set; }
        private int? _FileSeqNextNumber;
        public int FileSeqNextNumber
        {
            get { return _FileSeqNextNumber.Value; }
            set { _FileSeqNextNumber = value; }
        }
        public bool ShouldSerializeFileSeqNextNumber()
        {
            return (_FileSeqNextNumber.HasValue);
        }

    }

    public class BusinessPlaceParams
    {
        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

    }

    public class BusinessPlace
    {
        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

        public string BPLName { get; set; }
        public string BPLNameForeign { get; set; }
        public string VATRegNum { get; set; }
        public string RepName { get; set; }
        public string Industry { get; set; }
        public string Business { get; set; }
        public string Address { get; set; }
        public string Addressforeign { get; set; }
        private SAPB1.BoYesNoEnum? _MainBPL;
        public SAPB1.BoYesNoEnum MainBPL
        {
            get { return _MainBPL.Value; }
            set { _MainBPL = value; }
        }
        public bool ShouldSerializeMainBPL()
        {
            return (_MainBPL.HasValue);
        }

        public string TaxOfficeNo { get; set; }
        private SAPB1.BoYesNoEnum? _Disabled;
        public SAPB1.BoYesNoEnum Disabled
        {
            get { return _Disabled.Value; }
            set { _Disabled = value; }
        }
        public bool ShouldSerializeDisabled()
        {
            return (_Disabled.HasValue);
        }

        public string DefaultCustomerID { get; set; }
        public string DefaultVendorID { get; set; }
        public string DefaultWarehouseID { get; set; }
        public string DefaultTaxCode { get; set; }
        public string TaxOffice { get; set; }
        public string FederalTaxID { get; set; }
        public string FederalTaxID2 { get; set; }
        public string FederalTaxID3 { get; set; }
        public string AdditionalIdNumber { get; set; }
        private int? _NatureOfCompanyCode;
        public int NatureOfCompanyCode
        {
            get { return _NatureOfCompanyCode.Value; }
            set { _NatureOfCompanyCode = value; }
        }
        public bool ShouldSerializeNatureOfCompanyCode()
        {
            return (_NatureOfCompanyCode.HasValue);
        }

        private int? _EconomicActivityTypeCode;
        public int EconomicActivityTypeCode
        {
            get { return _EconomicActivityTypeCode.Value; }
            set { _EconomicActivityTypeCode = value; }
        }
        public bool ShouldSerializeEconomicActivityTypeCode()
        {
            return (_EconomicActivityTypeCode.HasValue);
        }

        public string CreditContributionOriginCode { get; set; }
        public string IPIPeriodCode { get; set; }
        private int? _CooperativeAssociationTypeCode;
        public int CooperativeAssociationTypeCode
        {
            get { return _CooperativeAssociationTypeCode.Value; }
            set { _CooperativeAssociationTypeCode = value; }
        }
        public bool ShouldSerializeCooperativeAssociationTypeCode()
        {
            return (_CooperativeAssociationTypeCode.HasValue);
        }

        private int? _ProfitTaxationCode;
        public int ProfitTaxationCode
        {
            get { return _ProfitTaxationCode.Value; }
            set { _ProfitTaxationCode = value; }
        }
        public bool ShouldSerializeProfitTaxationCode()
        {
            return (_ProfitTaxationCode.HasValue);
        }

        private int? _CompanyQualificationCode;
        public int CompanyQualificationCode
        {
            get { return _CompanyQualificationCode.Value; }
            set { _CompanyQualificationCode = value; }
        }
        public bool ShouldSerializeCompanyQualificationCode()
        {
            return (_CompanyQualificationCode.HasValue);
        }

        private int? _DeclarerTypeCode;
        public int DeclarerTypeCode
        {
            get { return _DeclarerTypeCode.Value; }
            set { _DeclarerTypeCode = value; }
        }
        public bool ShouldSerializeDeclarerTypeCode()
        {
            return (_DeclarerTypeCode.HasValue);
        }

        public string PreferredStateCode { get; set; }
        public string AddressType { get; set; }
        public string Street { get; set; }
        public string StreetNo { get; set; }
        public string Building { get; set; }
        public string ZipCode { get; set; }
        public string Block { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string County { get; set; }
        public string Country { get; set; }
        public string AliasName { get; set; }
        public string CommercialRegister { get; set; }
        private DateTime? _DateOfIncorporation;
        public DateTime DateOfIncorporation
        {
            get { return _DateOfIncorporation.Value; }
            set { _DateOfIncorporation = value; }
        }
        public bool ShouldSerializeDateOfIncorporation()
        {
            return (_DateOfIncorporation.HasValue);
        }

        public string SPEDProfile { get; set; }
        private int? _EnvironmentType;
        public int EnvironmentType
        {
            get { return _EnvironmentType.Value; }
            set { _EnvironmentType = value; }
        }
        public bool ShouldSerializeEnvironmentType()
        {
            return (_EnvironmentType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Opting4ICMS;
        public SAPB1.BoYesNoEnum Opting4ICMS
        {
            get { return _Opting4ICMS.Value; }
            set { _Opting4ICMS = value; }
        }
        public bool ShouldSerializeOpting4ICMS()
        {
            return (_Opting4ICMS.HasValue);
        }

        public string PaymentClearingAccount { get; set; }
        public string GlobalLocationNumber { get; set; }
        public string DefaultResourceWarehouseID { get; set; }
        public System.Collections.Generic.List<SAPB1.BusinessPlaceIENumber> BusinessPlaceIENumbers { get; set; }
        public System.Collections.Generic.List<SAPB1.BusinessPlaceTributaryInfo> BusinessPlaceTributaryInfos { get; set; }
    }

    public class BusinessPlaceIENumber
    {
        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

        public string State { get; set; }
        public string IENumber { get; set; }
    }

    public class BusinessPlaceTributaryInfo
    {
        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

        private int? _TributaryID;
        public int TributaryID
        {
            get { return _TributaryID.Value; }
            set { _TributaryID = value; }
        }
        public bool ShouldSerializeTributaryID()
        {
            return (_TributaryID.HasValue);
        }

        private int? _TributaryType;
        public int TributaryType
        {
            get { return _TributaryType.Value; }
            set { _TributaryType = value; }
        }
        public bool ShouldSerializeTributaryType()
        {
            return (_TributaryType.HasValue);
        }

        private DateTime? _TTStartDate;
        public DateTime TTStartDate
        {
            get { return _TTStartDate.Value; }
            set { _TTStartDate = value; }
        }
        public bool ShouldSerializeTTStartDate()
        {
            return (_TTStartDate.HasValue);
        }

        private DateTime? _TTEndDate;
        public DateTime TTEndDate
        {
            get { return _TTEndDate.Value; }
            set { _TTEndDate = value; }
        }
        public bool ShouldSerializeTTEndDate()
        {
            return (_TTEndDate.HasValue);
        }

        private int? _TributaryRegimeCode;
        public int TributaryRegimeCode
        {
            get { return _TributaryRegimeCode.Value; }
            set { _TributaryRegimeCode = value; }
        }
        public bool ShouldSerializeTributaryRegimeCode()
        {
            return (_TributaryRegimeCode.HasValue);
        }

        private DateTime? _TRCStartDate;
        public DateTime TRCStartDate
        {
            get { return _TRCStartDate.Value; }
            set { _TRCStartDate = value; }
        }
        public bool ShouldSerializeTRCStartDate()
        {
            return (_TRCStartDate.HasValue);
        }

        private DateTime? _TRCEndDate;
        public DateTime TRCEndDate
        {
            get { return _TRCEndDate.Value; }
            set { _TRCEndDate = value; }
        }
        public bool ShouldSerializeTRCEndDate()
        {
            return (_TRCEndDate.HasValue);
        }

    }

    public class LocalEra
    {
        public string EraName { get; set; }
        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        public string Code { get; set; }
    }

    public class SalesTaxInvoice
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private int? _DocNum;
        public int DocNum
        {
            get { return _DocNum.Value; }
            set { _DocNum = value; }
        }
        public bool ShouldSerializeDocNum()
        {
            return (_DocNum.HasValue);
        }

        private SAPB1.BoTaxInvoiceTypes? _DocType;
        public SAPB1.BoTaxInvoiceTypes DocType
        {
            get { return _DocType.Value; }
            set { _DocType = value; }
        }
        public bool ShouldSerializeDocType()
        {
            return (_DocType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Printed;
        public SAPB1.BoYesNoEnum Printed
        {
            get { return _Printed.Value; }
            set { _Printed = value; }
        }
        public bool ShouldSerializePrinted()
        {
            return (_Printed.HasValue);
        }

        private DateTime? _DocDate;
        public DateTime DocDate
        {
            get { return _DocDate.Value; }
            set { _DocDate = value; }
        }
        public bool ShouldSerializeDocDate()
        {
            return (_DocDate.HasValue);
        }

        public string CardCode { get; set; }
        private DateTime? _CreationDate;
        public DateTime CreationDate
        {
            get { return _CreationDate.Value; }
            set { _CreationDate = value; }
        }
        public bool ShouldSerializeCreationDate()
        {
            return (_CreationDate.HasValue);
        }

        private DateTime? _UpdateDate;
        public DateTime UpdateDate
        {
            get { return _UpdateDate.Value; }
            set { _UpdateDate = value; }
        }
        public bool ShouldSerializeUpdateDate()
        {
            return (_UpdateDate.HasValue);
        }

        private DateTime? _DocDueDate;
        public DateTime DocDueDate
        {
            get { return _DocDueDate.Value; }
            set { _DocDueDate = value; }
        }
        public bool ShouldSerializeDocDueDate()
        {
            return (_DocDueDate.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private int? _Segment;
        public int Segment
        {
            get { return _Segment.Value; }
            set { _Segment = value; }
        }
        public bool ShouldSerializeSegment()
        {
            return (_Segment.HasValue);
        }

        private int? _ContactPersonCode;
        public int ContactPersonCode
        {
            get { return _ContactPersonCode.Value; }
            set { _ContactPersonCode = value; }
        }
        public bool ShouldSerializeContactPersonCode()
        {
            return (_ContactPersonCode.HasValue);
        }

        private DateTime? _TaxDate;
        public DateTime TaxDate
        {
            get { return _TaxDate.Value; }
            set { _TaxDate = value; }
        }
        public bool ShouldSerializeTaxDate()
        {
            return (_TaxDate.HasValue);
        }

        public string Comments { get; set; }
        public string ShipToCode { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        private SAPB1.BoCurrencySources? _CurrencySource;
        public SAPB1.BoCurrencySources CurrencySource
        {
            get { return _CurrencySource.Value; }
            set { _CurrencySource = value; }
        }
        public bool ShouldSerializeCurrencySource()
        {
            return (_CurrencySource.HasValue);
        }

        public string DocCurrency { get; set; }
        public string CustomerOrVendorRefNo { get; set; }
        public string CustomerOrVendorName { get; set; }
        private DateTime? _CancelDate;
        public DateTime CancelDate
        {
            get { return _CancelDate.Value; }
            set { _CancelDate = value; }
        }
        public bool ShouldSerializeCancelDate()
        {
            return (_CancelDate.HasValue);
        }

        private decimal? _DocumentTotal;
        public decimal DocumentTotal
        {
            get { return _DocumentTotal.Value; }
            set { _DocumentTotal = value; }
        }
        public bool ShouldSerializeDocumentTotal()
        {
            return (_DocumentTotal.HasValue);
        }

        private decimal? _TaxTotal;
        public decimal TaxTotal
        {
            get { return _TaxTotal.Value; }
            set { _TaxTotal = value; }
        }
        public bool ShouldSerializeTaxTotal()
        {
            return (_TaxTotal.HasValue);
        }

        public string PaymentRefNo { get; set; }
        private DateTime? _PaymentRefDate;
        public DateTime PaymentRefDate
        {
            get { return _PaymentRefDate.Value; }
            set { _PaymentRefDate = value; }
        }
        public bool ShouldSerializePaymentRefDate()
        {
            return (_PaymentRefDate.HasValue);
        }

        private int? _AlterationRevision;
        public int AlterationRevision
        {
            get { return _AlterationRevision.Value; }
            set { _AlterationRevision = value; }
        }
        public bool ShouldSerializeAlterationRevision()
        {
            return (_AlterationRevision.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.SalesTaxInvoiceLine> SalesTaxInvoiceLines { get; set; }
        public System.Collections.Generic.List<SAPB1.SalesTaxInvoiceOperationCode> SalesTaxInvoiceOperationCodes { get; set; }
    }

    public class SalesTaxInvoiceLine
    {
        private int? _RefEntry1;
        public int RefEntry1
        {
            get { return _RefEntry1.Value; }
            set { _RefEntry1 = value; }
        }
        public bool ShouldSerializeRefEntry1()
        {
            return (_RefEntry1.HasValue);
        }

        private int? _RefEntry2;
        public int RefEntry2
        {
            get { return _RefEntry2.Value; }
            set { _RefEntry2 = value; }
        }
        public bool ShouldSerializeRefEntry2()
        {
            return (_RefEntry2.HasValue);
        }

    }

    public class SalesTaxInvoiceOperationCode
    {
        private int? _OpCode;
        public int OpCode
        {
            get { return _OpCode.Value; }
            set { _OpCode = value; }
        }
        public bool ShouldSerializeOpCode()
        {
            return (_OpCode.HasValue);
        }

    }

    public class PurchaseTaxInvoice
    {
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        private int? _DocNum;
        public int DocNum
        {
            get { return _DocNum.Value; }
            set { _DocNum = value; }
        }
        public bool ShouldSerializeDocNum()
        {
            return (_DocNum.HasValue);
        }

        private SAPB1.BoTaxInvoiceTypes? _DocType;
        public SAPB1.BoTaxInvoiceTypes DocType
        {
            get { return _DocType.Value; }
            set { _DocType = value; }
        }
        public bool ShouldSerializeDocType()
        {
            return (_DocType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Printed;
        public SAPB1.BoYesNoEnum Printed
        {
            get { return _Printed.Value; }
            set { _Printed = value; }
        }
        public bool ShouldSerializePrinted()
        {
            return (_Printed.HasValue);
        }

        private DateTime? _DocDate;
        public DateTime DocDate
        {
            get { return _DocDate.Value; }
            set { _DocDate = value; }
        }
        public bool ShouldSerializeDocDate()
        {
            return (_DocDate.HasValue);
        }

        public string CardCode { get; set; }
        private DateTime? _CreationDate;
        public DateTime CreationDate
        {
            get { return _CreationDate.Value; }
            set { _CreationDate = value; }
        }
        public bool ShouldSerializeCreationDate()
        {
            return (_CreationDate.HasValue);
        }

        private DateTime? _UpdateDate;
        public DateTime UpdateDate
        {
            get { return _UpdateDate.Value; }
            set { _UpdateDate = value; }
        }
        public bool ShouldSerializeUpdateDate()
        {
            return (_UpdateDate.HasValue);
        }

        private DateTime? _DocDueDate;
        public DateTime DocDueDate
        {
            get { return _DocDueDate.Value; }
            set { _DocDueDate = value; }
        }
        public bool ShouldSerializeDocDueDate()
        {
            return (_DocDueDate.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private int? _Segment;
        public int Segment
        {
            get { return _Segment.Value; }
            set { _Segment = value; }
        }
        public bool ShouldSerializeSegment()
        {
            return (_Segment.HasValue);
        }

        private int? _ContactPersonCode;
        public int ContactPersonCode
        {
            get { return _ContactPersonCode.Value; }
            set { _ContactPersonCode = value; }
        }
        public bool ShouldSerializeContactPersonCode()
        {
            return (_ContactPersonCode.HasValue);
        }

        private DateTime? _TaxDate;
        public DateTime TaxDate
        {
            get { return _TaxDate.Value; }
            set { _TaxDate = value; }
        }
        public bool ShouldSerializeTaxDate()
        {
            return (_TaxDate.HasValue);
        }

        public string Comments { get; set; }
        public string ShipToCode { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        private SAPB1.BoCurrencySources? _CurrencySource;
        public SAPB1.BoCurrencySources CurrencySource
        {
            get { return _CurrencySource.Value; }
            set { _CurrencySource = value; }
        }
        public bool ShouldSerializeCurrencySource()
        {
            return (_CurrencySource.HasValue);
        }

        public string DocCurrency { get; set; }
        public string CustomerOrVendorRefNo { get; set; }
        public string CustomerOrVendorName { get; set; }
        private DateTime? _CancelDate;
        public DateTime CancelDate
        {
            get { return _CancelDate.Value; }
            set { _CancelDate = value; }
        }
        public bool ShouldSerializeCancelDate()
        {
            return (_CancelDate.HasValue);
        }

        private decimal? _DocumentTotal;
        public decimal DocumentTotal
        {
            get { return _DocumentTotal.Value; }
            set { _DocumentTotal = value; }
        }
        public bool ShouldSerializeDocumentTotal()
        {
            return (_DocumentTotal.HasValue);
        }

        private decimal? _TaxTotal;
        public decimal TaxTotal
        {
            get { return _TaxTotal.Value; }
            set { _TaxTotal = value; }
        }
        public bool ShouldSerializeTaxTotal()
        {
            return (_TaxTotal.HasValue);
        }

        public string PaymentRefNo { get; set; }
        private DateTime? _PaymentRefDate;
        public DateTime PaymentRefDate
        {
            get { return _PaymentRefDate.Value; }
            set { _PaymentRefDate = value; }
        }
        public bool ShouldSerializePaymentRefDate()
        {
            return (_PaymentRefDate.HasValue);
        }

        private int? _AlterationRevision;
        public int AlterationRevision
        {
            get { return _AlterationRevision.Value; }
            set { _AlterationRevision = value; }
        }
        public bool ShouldSerializeAlterationRevision()
        {
            return (_AlterationRevision.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.PurchaseTaxInvoiceLine> PurchaseTaxInvoiceLines { get; set; }
        public System.Collections.Generic.List<SAPB1.PurchaseTaxInvoiceOperationCode> PurchaseTaxInvoiceOperationCodes { get; set; }
    }

    public class PurchaseTaxInvoiceLine
    {
        private int? _RefEntry1;
        public int RefEntry1
        {
            get { return _RefEntry1.Value; }
            set { _RefEntry1 = value; }
        }
        public bool ShouldSerializeRefEntry1()
        {
            return (_RefEntry1.HasValue);
        }

        private int? _RefEntry2;
        public int RefEntry2
        {
            get { return _RefEntry2.Value; }
            set { _RefEntry2 = value; }
        }
        public bool ShouldSerializeRefEntry2()
        {
            return (_RefEntry2.HasValue);
        }

    }

    public class PurchaseTaxInvoiceOperationCode
    {
        private int? _OpCode;
        public int OpCode
        {
            get { return _OpCode.Value; }
            set { _OpCode = value; }
        }
        public bool ShouldSerializeOpCode()
        {
            return (_OpCode.HasValue);
        }

    }

    public class Bank
    {
        public string BankCode { get; set; }
        public string BankName { get; set; }
        public string AccountforOutgoingChecks { get; set; }
        public string BranchforOutgoingChecks { get; set; }
        private int? _NextCheckNumber;
        public int NextCheckNumber
        {
            get { return _NextCheckNumber.Value; }
            set { _NextCheckNumber = value; }
        }
        public bool ShouldSerializeNextCheckNumber()
        {
            return (_NextCheckNumber.HasValue);
        }

        public string SwiftNo { get; set; }
        public string IBAN { get; set; }
        public string CountryCode { get; set; }
        private SAPB1.BoYesNoEnum? _PostOffice;
        public SAPB1.BoYesNoEnum PostOffice
        {
            get { return _PostOffice.Value; }
            set { _PostOffice = value; }
        }
        public bool ShouldSerializePostOffice()
        {
            return (_PostOffice.HasValue);
        }

        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

        private int? _DefaultBankAccountKey;
        public int DefaultBankAccountKey
        {
            get { return _DefaultBankAccountKey.Value; }
            set { _DefaultBankAccountKey = value; }
        }
        public bool ShouldSerializeDefaultBankAccountKey()
        {
            return (_DefaultBankAccountKey.HasValue);
        }

    }

    public class JournalEntryParams
    {
        private int? _JdtNum;
        public int JdtNum
        {
            get { return _JdtNum.Value; }
            set { _JdtNum = value; }
        }
        public bool ShouldSerializeJdtNum()
        {
            return (_JdtNum.HasValue);
        }

    }

    public class JournalEntry
    {
        private DateTime? _ReferenceDate;
        public DateTime ReferenceDate
        {
            get { return _ReferenceDate.Value; }
            set { _ReferenceDate = value; }
        }
        public bool ShouldSerializeReferenceDate()
        {
            return (_ReferenceDate.HasValue);
        }

        public string Memo { get; set; }
        public string Reference { get; set; }
        public string Reference2 { get; set; }
        public string TransactionCode { get; set; }
        public string ProjectCode { get; set; }
        private DateTime? _TaxDate;
        public DateTime TaxDate
        {
            get { return _TaxDate.Value; }
            set { _TaxDate = value; }
        }
        public bool ShouldSerializeTaxDate()
        {
            return (_TaxDate.HasValue);
        }

        private int? _JdtNum;
        public int JdtNum
        {
            get { return _JdtNum.Value; }
            set { _JdtNum = value; }
        }
        public bool ShouldSerializeJdtNum()
        {
            return (_JdtNum.HasValue);
        }

        public string Indicator { get; set; }
        private SAPB1.BoYesNoEnum? _UseAutoStorno;
        public SAPB1.BoYesNoEnum UseAutoStorno
        {
            get { return _UseAutoStorno.Value; }
            set { _UseAutoStorno = value; }
        }
        public bool ShouldSerializeUseAutoStorno()
        {
            return (_UseAutoStorno.HasValue);
        }

        private DateTime? _StornoDate;
        public DateTime StornoDate
        {
            get { return _StornoDate.Value; }
            set { _StornoDate = value; }
        }
        public bool ShouldSerializeStornoDate()
        {
            return (_StornoDate.HasValue);
        }

        private DateTime? _VatDate;
        public DateTime VatDate
        {
            get { return _VatDate.Value; }
            set { _VatDate = value; }
        }
        public bool ShouldSerializeVatDate()
        {
            return (_VatDate.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private SAPB1.BoYesNoEnum? _StampTax;
        public SAPB1.BoYesNoEnum StampTax
        {
            get { return _StampTax.Value; }
            set { _StampTax = value; }
        }
        public bool ShouldSerializeStampTax()
        {
            return (_StampTax.HasValue);
        }

        private DateTime? _DueDate;
        public DateTime DueDate
        {
            get { return _DueDate.Value; }
            set { _DueDate = value; }
        }
        public bool ShouldSerializeDueDate()
        {
            return (_DueDate.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AutoVAT;
        public SAPB1.BoYesNoEnum AutoVAT
        {
            get { return _AutoVAT.Value; }
            set { _AutoVAT = value; }
        }
        public bool ShouldSerializeAutoVAT()
        {
            return (_AutoVAT.HasValue);
        }

        private int? _Number;
        public int Number
        {
            get { return _Number.Value; }
            set { _Number = value; }
        }
        public bool ShouldSerializeNumber()
        {
            return (_Number.HasValue);
        }

        private int? _FolioNumber;
        public int FolioNumber
        {
            get { return _FolioNumber.Value; }
            set { _FolioNumber = value; }
        }
        public bool ShouldSerializeFolioNumber()
        {
            return (_FolioNumber.HasValue);
        }

        public string FolioPrefixString { get; set; }
        private SAPB1.BoYesNoEnum? _ReportEU;
        public SAPB1.BoYesNoEnum ReportEU
        {
            get { return _ReportEU.Value; }
            set { _ReportEU = value; }
        }
        public bool ShouldSerializeReportEU()
        {
            return (_ReportEU.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Report347;
        public SAPB1.BoYesNoEnum Report347
        {
            get { return _Report347.Value; }
            set { _Report347 = value; }
        }
        public bool ShouldSerializeReport347()
        {
            return (_Report347.HasValue);
        }

        private SAPB1.PrintStatusEnum? _Printed;
        public SAPB1.PrintStatusEnum Printed
        {
            get { return _Printed.Value; }
            set { _Printed = value; }
        }
        public bool ShouldSerializePrinted()
        {
            return (_Printed.HasValue);
        }

        private int? _LocationCode;
        public int LocationCode
        {
            get { return _LocationCode.Value; }
            set { _LocationCode = value; }
        }
        public bool ShouldSerializeLocationCode()
        {
            return (_LocationCode.HasValue);
        }

        private SAPB1.TransTypesEnum? _OriginalJournal;
        public SAPB1.TransTypesEnum OriginalJournal
        {
            get { return _OriginalJournal.Value; }
            set { _OriginalJournal = value; }
        }
        public bool ShouldSerializeOriginalJournal()
        {
            return (_OriginalJournal.HasValue);
        }

        private int? _Original;
        public int Original
        {
            get { return _Original.Value; }
            set { _Original = value; }
        }
        public bool ShouldSerializeOriginal()
        {
            return (_Original.HasValue);
        }

        public string BaseReference { get; set; }
        private SAPB1.BoYesNoEnum? _BlockDunningLetter;
        public SAPB1.BoYesNoEnum BlockDunningLetter
        {
            get { return _BlockDunningLetter.Value; }
            set { _BlockDunningLetter = value; }
        }
        public bool ShouldSerializeBlockDunningLetter()
        {
            return (_BlockDunningLetter.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AutomaticWT;
        public SAPB1.BoYesNoEnum AutomaticWT
        {
            get { return _AutomaticWT.Value; }
            set { _AutomaticWT = value; }
        }
        public bool ShouldSerializeAutomaticWT()
        {
            return (_AutomaticWT.HasValue);
        }

        private decimal? _WTSum;
        public decimal WTSum
        {
            get { return _WTSum.Value; }
            set { _WTSum = value; }
        }
        public bool ShouldSerializeWTSum()
        {
            return (_WTSum.HasValue);
        }

        private decimal? _WTSumSC;
        public decimal WTSumSC
        {
            get { return _WTSumSC.Value; }
            set { _WTSumSC = value; }
        }
        public bool ShouldSerializeWTSumSC()
        {
            return (_WTSumSC.HasValue);
        }

        private decimal? _WTSumFC;
        public decimal WTSumFC
        {
            get { return _WTSumFC.Value; }
            set { _WTSumFC = value; }
        }
        public bool ShouldSerializeWTSumFC()
        {
            return (_WTSumFC.HasValue);
        }

        public string SignatureInputMessage { get; set; }
        public string SignatureDigest { get; set; }
        public string CertificationNumber { get; set; }
        private int? _PrivateKeyVersion;
        public int PrivateKeyVersion
        {
            get { return _PrivateKeyVersion.Value; }
            set { _PrivateKeyVersion = value; }
        }
        public bool ShouldSerializePrivateKeyVersion()
        {
            return (_PrivateKeyVersion.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Corisptivi;
        public SAPB1.BoYesNoEnum Corisptivi
        {
            get { return _Corisptivi.Value; }
            set { _Corisptivi = value; }
        }
        public bool ShouldSerializeCorisptivi()
        {
            return (_Corisptivi.HasValue);
        }

        public string Reference3 { get; set; }
        public string DocumentType { get; set; }
        private SAPB1.BoYesNoEnum? _DeferredTax;
        public SAPB1.BoYesNoEnum DeferredTax
        {
            get { return _DeferredTax.Value; }
            set { _DeferredTax = value; }
        }
        public bool ShouldSerializeDeferredTax()
        {
            return (_DeferredTax.HasValue);
        }

        private int? _BlanketAgreementNumber;
        public int BlanketAgreementNumber
        {
            get { return _BlanketAgreementNumber.Value; }
            set { _BlanketAgreementNumber = value; }
        }
        public bool ShouldSerializeBlanketAgreementNumber()
        {
            return (_BlanketAgreementNumber.HasValue);
        }

        private SAPB1.OperationCodeTypeEnum? _OperationCode;
        public SAPB1.OperationCodeTypeEnum OperationCode
        {
            get { return _OperationCode.Value; }
            set { _OperationCode = value; }
        }
        public bool ShouldSerializeOperationCode()
        {
            return (_OperationCode.HasValue);
        }

        private SAPB1.ResidenceNumberTypeEnum? _ResidenceNumberType;
        public SAPB1.ResidenceNumberTypeEnum ResidenceNumberType
        {
            get { return _ResidenceNumberType.Value; }
            set { _ResidenceNumberType = value; }
        }
        public bool ShouldSerializeResidenceNumberType()
        {
            return (_ResidenceNumberType.HasValue);
        }

        private SAPB1.ECDPostingTypeEnum? _ECDPostingType;
        public SAPB1.ECDPostingTypeEnum ECDPostingType
        {
            get { return _ECDPostingType.Value; }
            set { _ECDPostingType = value; }
        }
        public bool ShouldSerializeECDPostingType()
        {
            return (_ECDPostingType.HasValue);
        }

        private int? _ExposedTransNumber;
        public int ExposedTransNumber
        {
            get { return _ExposedTransNumber.Value; }
            set { _ExposedTransNumber = value; }
        }
        public bool ShouldSerializeExposedTransNumber()
        {
            return (_ExposedTransNumber.HasValue);
        }

        public string PointOfIssueCode { get; set; }
        private SAPB1.FolioLetterEnum? _Letter;
        public SAPB1.FolioLetterEnum Letter
        {
            get { return _Letter.Value; }
            set { _Letter = value; }
        }
        public bool ShouldSerializeLetter()
        {
            return (_Letter.HasValue);
        }

        private int? _FolioNumberFrom;
        public int FolioNumberFrom
        {
            get { return _FolioNumberFrom.Value; }
            set { _FolioNumberFrom = value; }
        }
        public bool ShouldSerializeFolioNumberFrom()
        {
            return (_FolioNumberFrom.HasValue);
        }

        private int? _FolioNumberTo;
        public int FolioNumberTo
        {
            get { return _FolioNumberTo.Value; }
            set { _FolioNumberTo = value; }
        }
        public bool ShouldSerializeFolioNumberTo()
        {
            return (_FolioNumberTo.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.JournalEntryLine> JournalEntryLines { get; set; }
        public System.Collections.Generic.List<SAPB1.WithholdingTaxData> WithholdingTaxDataCollection { get; set; }
    }

    public class JournalEntryLine
    {
        private int? _Line_ID;
        public int Line_ID
        {
            get { return _Line_ID.Value; }
            set { _Line_ID = value; }
        }
        public bool ShouldSerializeLine_ID()
        {
            return (_Line_ID.HasValue);
        }

        public string AccountCode { get; set; }
        private decimal? _Debit;
        public decimal Debit
        {
            get { return _Debit.Value; }
            set { _Debit = value; }
        }
        public bool ShouldSerializeDebit()
        {
            return (_Debit.HasValue);
        }

        private decimal? _Credit;
        public decimal Credit
        {
            get { return _Credit.Value; }
            set { _Credit = value; }
        }
        public bool ShouldSerializeCredit()
        {
            return (_Credit.HasValue);
        }

        private decimal? _FCDebit;
        public decimal FCDebit
        {
            get { return _FCDebit.Value; }
            set { _FCDebit = value; }
        }
        public bool ShouldSerializeFCDebit()
        {
            return (_FCDebit.HasValue);
        }

        private decimal? _FCCredit;
        public decimal FCCredit
        {
            get { return _FCCredit.Value; }
            set { _FCCredit = value; }
        }
        public bool ShouldSerializeFCCredit()
        {
            return (_FCCredit.HasValue);
        }

        public string FCCurrency { get; set; }
        private DateTime? _DueDate;
        public DateTime DueDate
        {
            get { return _DueDate.Value; }
            set { _DueDate = value; }
        }
        public bool ShouldSerializeDueDate()
        {
            return (_DueDate.HasValue);
        }

        public string ShortName { get; set; }
        public string ContraAccount { get; set; }
        public string LineMemo { get; set; }
        private DateTime? _ReferenceDate1;
        public DateTime ReferenceDate1
        {
            get { return _ReferenceDate1.Value; }
            set { _ReferenceDate1 = value; }
        }
        public bool ShouldSerializeReferenceDate1()
        {
            return (_ReferenceDate1.HasValue);
        }

        private DateTime? _ReferenceDate2;
        public DateTime ReferenceDate2
        {
            get { return _ReferenceDate2.Value; }
            set { _ReferenceDate2 = value; }
        }
        public bool ShouldSerializeReferenceDate2()
        {
            return (_ReferenceDate2.HasValue);
        }

        public string Reference1 { get; set; }
        public string Reference2 { get; set; }
        public string ProjectCode { get; set; }
        public string CostingCode { get; set; }
        private DateTime? _TaxDate;
        public DateTime TaxDate
        {
            get { return _TaxDate.Value; }
            set { _TaxDate = value; }
        }
        public bool ShouldSerializeTaxDate()
        {
            return (_TaxDate.HasValue);
        }

        private decimal? _BaseSum;
        public decimal BaseSum
        {
            get { return _BaseSum.Value; }
            set { _BaseSum = value; }
        }
        public bool ShouldSerializeBaseSum()
        {
            return (_BaseSum.HasValue);
        }

        public string TaxGroup { get; set; }
        private decimal? _DebitSys;
        public decimal DebitSys
        {
            get { return _DebitSys.Value; }
            set { _DebitSys = value; }
        }
        public bool ShouldSerializeDebitSys()
        {
            return (_DebitSys.HasValue);
        }

        private decimal? _CreditSys;
        public decimal CreditSys
        {
            get { return _CreditSys.Value; }
            set { _CreditSys = value; }
        }
        public bool ShouldSerializeCreditSys()
        {
            return (_CreditSys.HasValue);
        }

        private DateTime? _VatDate;
        public DateTime VatDate
        {
            get { return _VatDate.Value; }
            set { _VatDate = value; }
        }
        public bool ShouldSerializeVatDate()
        {
            return (_VatDate.HasValue);
        }

        private SAPB1.BoYesNoEnum? _VatLine;
        public SAPB1.BoYesNoEnum VatLine
        {
            get { return _VatLine.Value; }
            set { _VatLine = value; }
        }
        public bool ShouldSerializeVatLine()
        {
            return (_VatLine.HasValue);
        }

        private decimal? _SystemBaseAmount;
        public decimal SystemBaseAmount
        {
            get { return _SystemBaseAmount.Value; }
            set { _SystemBaseAmount = value; }
        }
        public bool ShouldSerializeSystemBaseAmount()
        {
            return (_SystemBaseAmount.HasValue);
        }

        private decimal? _VatAmount;
        public decimal VatAmount
        {
            get { return _VatAmount.Value; }
            set { _VatAmount = value; }
        }
        public bool ShouldSerializeVatAmount()
        {
            return (_VatAmount.HasValue);
        }

        private decimal? _SystemVatAmount;
        public decimal SystemVatAmount
        {
            get { return _SystemVatAmount.Value; }
            set { _SystemVatAmount = value; }
        }
        public bool ShouldSerializeSystemVatAmount()
        {
            return (_SystemVatAmount.HasValue);
        }

        private decimal? _GrossValue;
        public decimal GrossValue
        {
            get { return _GrossValue.Value; }
            set { _GrossValue = value; }
        }
        public bool ShouldSerializeGrossValue()
        {
            return (_GrossValue.HasValue);
        }

        public string AdditionalReference { get; set; }
        private int? _CheckAbs;
        public int CheckAbs
        {
            get { return _CheckAbs.Value; }
            set { _CheckAbs = value; }
        }
        public bool ShouldSerializeCheckAbs()
        {
            return (_CheckAbs.HasValue);
        }

        public string CostingCode2 { get; set; }
        public string CostingCode3 { get; set; }
        public string CostingCode4 { get; set; }
        public string TaxCode { get; set; }
        private SAPB1.BoTaxPostAccEnum? _TaxPostAccount;
        public SAPB1.BoTaxPostAccEnum TaxPostAccount
        {
            get { return _TaxPostAccount.Value; }
            set { _TaxPostAccount = value; }
        }
        public bool ShouldSerializeTaxPostAccount()
        {
            return (_TaxPostAccount.HasValue);
        }

        public string CostingCode5 { get; set; }
        private int? _LocationCode;
        public int LocationCode
        {
            get { return _LocationCode.Value; }
            set { _LocationCode = value; }
        }
        public bool ShouldSerializeLocationCode()
        {
            return (_LocationCode.HasValue);
        }

        public string ControlAccount { get; set; }
        private decimal? _EqualizationTaxAmount;
        public decimal EqualizationTaxAmount
        {
            get { return _EqualizationTaxAmount.Value; }
            set { _EqualizationTaxAmount = value; }
        }
        public bool ShouldSerializeEqualizationTaxAmount()
        {
            return (_EqualizationTaxAmount.HasValue);
        }

        private decimal? _SystemEqualizationTaxAmount;
        public decimal SystemEqualizationTaxAmount
        {
            get { return _SystemEqualizationTaxAmount.Value; }
            set { _SystemEqualizationTaxAmount = value; }
        }
        public bool ShouldSerializeSystemEqualizationTaxAmount()
        {
            return (_SystemEqualizationTaxAmount.HasValue);
        }

        private decimal? _TotalTax;
        public decimal TotalTax
        {
            get { return _TotalTax.Value; }
            set { _TotalTax = value; }
        }
        public bool ShouldSerializeTotalTax()
        {
            return (_TotalTax.HasValue);
        }

        private decimal? _SystemTotalTax;
        public decimal SystemTotalTax
        {
            get { return _SystemTotalTax.Value; }
            set { _SystemTotalTax = value; }
        }
        public bool ShouldSerializeSystemTotalTax()
        {
            return (_SystemTotalTax.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WTLiable;
        public SAPB1.BoYesNoEnum WTLiable
        {
            get { return _WTLiable.Value; }
            set { _WTLiable = value; }
        }
        public bool ShouldSerializeWTLiable()
        {
            return (_WTLiable.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WTRow;
        public SAPB1.BoYesNoEnum WTRow
        {
            get { return _WTRow.Value; }
            set { _WTRow = value; }
        }
        public bool ShouldSerializeWTRow()
        {
            return (_WTRow.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PaymentBlock;
        public SAPB1.BoYesNoEnum PaymentBlock
        {
            get { return _PaymentBlock.Value; }
            set { _PaymentBlock = value; }
        }
        public bool ShouldSerializePaymentBlock()
        {
            return (_PaymentBlock.HasValue);
        }

        private int? _BlockReason;
        public int BlockReason
        {
            get { return _BlockReason.Value; }
            set { _BlockReason = value; }
        }
        public bool ShouldSerializeBlockReason()
        {
            return (_BlockReason.HasValue);
        }

        public string FederalTaxID { get; set; }
        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

        public string BPLName { get; set; }
        public string VATRegNum { get; set; }
        private SAPB1.BoYesNoEnum? _PaymentOrdered;
        public SAPB1.BoYesNoEnum PaymentOrdered
        {
            get { return _PaymentOrdered.Value; }
            set { _PaymentOrdered = value; }
        }
        public bool ShouldSerializePaymentOrdered()
        {
            return (_PaymentOrdered.HasValue);
        }

        private int? _ExposedTransNumber;
        public int ExposedTransNumber
        {
            get { return _ExposedTransNumber.Value; }
            set { _ExposedTransNumber = value; }
        }
        public bool ShouldSerializeExposedTransNumber()
        {
            return (_ExposedTransNumber.HasValue);
        }

        private int? _DocumentArray;
        public int DocumentArray
        {
            get { return _DocumentArray.Value; }
            set { _DocumentArray = value; }
        }
        public bool ShouldSerializeDocumentArray()
        {
            return (_DocumentArray.HasValue);
        }

        private int? _DocumentLine;
        public int DocumentLine
        {
            get { return _DocumentLine.Value; }
            set { _DocumentLine = value; }
        }
        public bool ShouldSerializeDocumentLine()
        {
            return (_DocumentLine.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.CashFlowAssignment> CashFlowAssignments { get; set; }
    }

    public class Contact
    {
        public string CardCode { get; set; }
        public string Notes { get; set; }
        private DateTime? _ContactDate;
        public DateTime ContactDate
        {
            get { return _ContactDate.Value; }
            set { _ContactDate = value; }
        }
        public bool ShouldSerializeContactDate()
        {
            return (_ContactDate.HasValue);
        }

        private TimeSpan? _ContactTime;
        public TimeSpan ContactTime
        {
            get { return _ContactTime.Value; }
            set { _ContactTime = value; }
        }
        public bool ShouldSerializeContactTime()
        {
            return (_ContactTime.HasValue);
        }

        private DateTime? _Recontact;
        public DateTime Recontact
        {
            get { return _Recontact.Value; }
            set { _Recontact = value; }
        }
        public bool ShouldSerializeRecontact()
        {
            return (_Recontact.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Closed;
        public SAPB1.BoYesNoEnum Closed
        {
            get { return _Closed.Value; }
            set { _Closed = value; }
        }
        public bool ShouldSerializeClosed()
        {
            return (_Closed.HasValue);
        }

        private DateTime? _CloseDate;
        public DateTime CloseDate
        {
            get { return _CloseDate.Value; }
            set { _CloseDate = value; }
        }
        public bool ShouldSerializeCloseDate()
        {
            return (_CloseDate.HasValue);
        }

        public string Phone { get; set; }
        public string Fax { get; set; }
        private int? _Subject;
        public int Subject
        {
            get { return _Subject.Value; }
            set { _Subject = value; }
        }
        public bool ShouldSerializeSubject()
        {
            return (_Subject.HasValue);
        }

        public string DocType { get; set; }
        public string DocNum { get; set; }
        public string DocEntry { get; set; }
        private int? _ContactCode;
        public int ContactCode
        {
            get { return _ContactCode.Value; }
            set { _ContactCode = value; }
        }
        public bool ShouldSerializeContactCode()
        {
            return (_ContactCode.HasValue);
        }

        private SAPB1.BoMsgPriorities? _Priority;
        public SAPB1.BoMsgPriorities Priority
        {
            get { return _Priority.Value; }
            set { _Priority = value; }
        }
        public bool ShouldSerializePriority()
        {
            return (_Priority.HasValue);
        }

        public string Details { get; set; }
        private SAPB1.BoActivities? _Activity;
        public SAPB1.BoActivities Activity
        {
            get { return _Activity.Value; }
            set { _Activity = value; }
        }
        public bool ShouldSerializeActivity()
        {
            return (_Activity.HasValue);
        }

        private int? _ActivityType;
        public int ActivityType
        {
            get { return _ActivityType.Value; }
            set { _ActivityType = value; }
        }
        public bool ShouldSerializeActivityType()
        {
            return (_ActivityType.HasValue);
        }

        private int? _Location;
        public int Location
        {
            get { return _Location.Value; }
            set { _Location = value; }
        }
        public bool ShouldSerializeLocation()
        {
            return (_Location.HasValue);
        }

        private TimeSpan? _StartTime;
        public TimeSpan StartTime
        {
            get { return _StartTime.Value; }
            set { _StartTime = value; }
        }
        public bool ShouldSerializeStartTime()
        {
            return (_StartTime.HasValue);
        }

        private TimeSpan? _EndTime;
        public TimeSpan EndTime
        {
            get { return _EndTime.Value; }
            set { _EndTime = value; }
        }
        public bool ShouldSerializeEndTime()
        {
            return (_EndTime.HasValue);
        }

        private decimal? _Duration;
        public decimal Duration
        {
            get { return _Duration.Value; }
            set { _Duration = value; }
        }
        public bool ShouldSerializeDuration()
        {
            return (_Duration.HasValue);
        }

        private SAPB1.BoDurations? _DurationType;
        public SAPB1.BoDurations DurationType
        {
            get { return _DurationType.Value; }
            set { _DurationType = value; }
        }
        public bool ShouldSerializeDurationType()
        {
            return (_DurationType.HasValue);
        }

        private int? _SalesEmployee;
        public int SalesEmployee
        {
            get { return _SalesEmployee.Value; }
            set { _SalesEmployee = value; }
        }
        public bool ShouldSerializeSalesEmployee()
        {
            return (_SalesEmployee.HasValue);
        }

        private int? _ContactPersonCode;
        public int ContactPersonCode
        {
            get { return _ContactPersonCode.Value; }
            set { _ContactPersonCode = value; }
        }
        public bool ShouldSerializeContactPersonCode()
        {
            return (_ContactPersonCode.HasValue);
        }

        private int? _HandledBy;
        public int HandledBy
        {
            get { return _HandledBy.Value; }
            set { _HandledBy = value; }
        }
        public bool ShouldSerializeHandledBy()
        {
            return (_HandledBy.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Reminder;
        public SAPB1.BoYesNoEnum Reminder
        {
            get { return _Reminder.Value; }
            set { _Reminder = value; }
        }
        public bool ShouldSerializeReminder()
        {
            return (_Reminder.HasValue);
        }

        private decimal? _ReminderPeriod;
        public decimal ReminderPeriod
        {
            get { return _ReminderPeriod.Value; }
            set { _ReminderPeriod = value; }
        }
        public bool ShouldSerializeReminderPeriod()
        {
            return (_ReminderPeriod.HasValue);
        }

        private SAPB1.BoDurations? _ReminderType;
        public SAPB1.BoDurations ReminderType
        {
            get { return _ReminderType.Value; }
            set { _ReminderType = value; }
        }
        public bool ShouldSerializeReminderType()
        {
            return (_ReminderType.HasValue);
        }

        public string City { get; set; }
        private SAPB1.BoYesNoEnum? _Personalflag;
        public SAPB1.BoYesNoEnum Personalflag
        {
            get { return _Personalflag.Value; }
            set { _Personalflag = value; }
        }
        public bool ShouldSerializePersonalflag()
        {
            return (_Personalflag.HasValue);
        }

        public string Street { get; set; }
        private int? _ParentobjectId;
        public int ParentobjectId
        {
            get { return _ParentobjectId.Value; }
            set { _ParentobjectId = value; }
        }
        public bool ShouldSerializeParentobjectId()
        {
            return (_ParentobjectId.HasValue);
        }

        public string Parentobjecttype { get; set; }
        public string Room { get; set; }
        private SAPB1.BoYesNoEnum? _Inactiveflag;
        public SAPB1.BoYesNoEnum Inactiveflag
        {
            get { return _Inactiveflag.Value; }
            set { _Inactiveflag = value; }
        }
        public bool ShouldSerializeInactiveflag()
        {
            return (_Inactiveflag.HasValue);
        }

        public string State { get; set; }
        private int? _PreviousActivity;
        public int PreviousActivity
        {
            get { return _PreviousActivity.Value; }
            set { _PreviousActivity = value; }
        }
        public bool ShouldSerializePreviousActivity()
        {
            return (_PreviousActivity.HasValue);
        }

        public string Country { get; set; }
        private int? _Status;
        public int Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Tentativeflag;
        public SAPB1.BoYesNoEnum Tentativeflag
        {
            get { return _Tentativeflag.Value; }
            set { _Tentativeflag = value; }
        }
        public bool ShouldSerializeTentativeflag()
        {
            return (_Tentativeflag.HasValue);
        }

        private DateTime? _EndDuedate;
        public DateTime EndDuedate
        {
            get { return _EndDuedate.Value; }
            set { _EndDuedate = value; }
        }
        public bool ShouldSerializeEndDuedate()
        {
            return (_EndDuedate.HasValue);
        }

        public string DocTypeEx { get; set; }
        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

    }

    public class CreditCard
    {
        private int? _CreditCardCode;
        public int CreditCardCode
        {
            get { return _CreditCardCode.Value; }
            set { _CreditCardCode = value; }
        }
        public bool ShouldSerializeCreditCardCode()
        {
            return (_CreditCardCode.HasValue);
        }

        public string CreditCardName { get; set; }
        public string GLAccount { get; set; }
        public string Telephone { get; set; }
        public string CompanyID { get; set; }
        public string CountryCode { get; set; }
    }

    public class Currency
    {
        public string Code { get; set; }
        public string Name { get; set; }
        public string DocumentsCode { get; set; }
        public string InternationalDescription { get; set; }
        public string HundredthName { get; set; }
        public string EnglishName { get; set; }
        public string EnglishHundredthName { get; set; }
        public string PluralInternationalDescription { get; set; }
        public string PluralHundredthName { get; set; }
        public string PluralEnglishName { get; set; }
        public string PluralEnglishHundredthName { get; set; }
        private SAPB1.CurrenciesDecimalsEnum? _Decimals;
        public SAPB1.CurrenciesDecimalsEnum Decimals
        {
            get { return _Decimals.Value; }
            set { _Decimals = value; }
        }
        public bool ShouldSerializeDecimals()
        {
            return (_Decimals.HasValue);
        }

        private SAPB1.RoundingSysEnum? _Rounding;
        public SAPB1.RoundingSysEnum Rounding
        {
            get { return _Rounding.Value; }
            set { _Rounding = value; }
        }
        public bool ShouldSerializeRounding()
        {
            return (_Rounding.HasValue);
        }

        private SAPB1.BoYesNoEnum? _RoundingInPayment;
        public SAPB1.BoYesNoEnum RoundingInPayment
        {
            get { return _RoundingInPayment.Value; }
            set { _RoundingInPayment = value; }
        }
        public bool ShouldSerializeRoundingInPayment()
        {
            return (_RoundingInPayment.HasValue);
        }

        private decimal? _MaxIncomingAmtDiff;
        public decimal MaxIncomingAmtDiff
        {
            get { return _MaxIncomingAmtDiff.Value; }
            set { _MaxIncomingAmtDiff = value; }
        }
        public bool ShouldSerializeMaxIncomingAmtDiff()
        {
            return (_MaxIncomingAmtDiff.HasValue);
        }

        private decimal? _MaxOutgoingAmtDiff;
        public decimal MaxOutgoingAmtDiff
        {
            get { return _MaxOutgoingAmtDiff.Value; }
            set { _MaxOutgoingAmtDiff = value; }
        }
        public bool ShouldSerializeMaxOutgoingAmtDiff()
        {
            return (_MaxOutgoingAmtDiff.HasValue);
        }

        private decimal? _MaxIncomingAmtDiffPercent;
        public decimal MaxIncomingAmtDiffPercent
        {
            get { return _MaxIncomingAmtDiffPercent.Value; }
            set { _MaxIncomingAmtDiffPercent = value; }
        }
        public bool ShouldSerializeMaxIncomingAmtDiffPercent()
        {
            return (_MaxIncomingAmtDiffPercent.HasValue);
        }

        private decimal? _MaxOutgoingAmtDiffPercent;
        public decimal MaxOutgoingAmtDiffPercent
        {
            get { return _MaxOutgoingAmtDiffPercent.Value; }
            set { _MaxOutgoingAmtDiffPercent = value; }
        }
        public bool ShouldSerializeMaxOutgoingAmtDiffPercent()
        {
            return (_MaxOutgoingAmtDiffPercent.HasValue);
        }

    }

    public class ItemParams
    {
        public string ItemCode { get; set; }
    }

    public class Item
    {
        public string ItemCode { get; set; }
        public string ItemName { get; set; }
        public string ForeignName { get; set; }
        private int? _ItemsGroupCode;
        public int ItemsGroupCode
        {
            get { return _ItemsGroupCode.Value; }
            set { _ItemsGroupCode = value; }
        }
        public bool ShouldSerializeItemsGroupCode()
        {
            return (_ItemsGroupCode.HasValue);
        }

        private int? _CustomsGroupCode;
        public int CustomsGroupCode
        {
            get { return _CustomsGroupCode.Value; }
            set { _CustomsGroupCode = value; }
        }
        public bool ShouldSerializeCustomsGroupCode()
        {
            return (_CustomsGroupCode.HasValue);
        }

        public string SalesVATGroup { get; set; }
        public string BarCode { get; set; }
        private SAPB1.BoYesNoEnum? _VatLiable;
        public SAPB1.BoYesNoEnum VatLiable
        {
            get { return _VatLiable.Value; }
            set { _VatLiable = value; }
        }
        public bool ShouldSerializeVatLiable()
        {
            return (_VatLiable.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PurchaseItem;
        public SAPB1.BoYesNoEnum PurchaseItem
        {
            get { return _PurchaseItem.Value; }
            set { _PurchaseItem = value; }
        }
        public bool ShouldSerializePurchaseItem()
        {
            return (_PurchaseItem.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SalesItem;
        public SAPB1.BoYesNoEnum SalesItem
        {
            get { return _SalesItem.Value; }
            set { _SalesItem = value; }
        }
        public bool ShouldSerializeSalesItem()
        {
            return (_SalesItem.HasValue);
        }

        private SAPB1.BoYesNoEnum? _InventoryItem;
        public SAPB1.BoYesNoEnum InventoryItem
        {
            get { return _InventoryItem.Value; }
            set { _InventoryItem = value; }
        }
        public bool ShouldSerializeInventoryItem()
        {
            return (_InventoryItem.HasValue);
        }

        public string IncomeAccount { get; set; }
        public string ExemptIncomeAccount { get; set; }
        public string ExpanseAccount { get; set; }
        public string Mainsupplier { get; set; }
        public string SupplierCatalogNo { get; set; }
        private decimal? _DesiredInventory;
        public decimal DesiredInventory
        {
            get { return _DesiredInventory.Value; }
            set { _DesiredInventory = value; }
        }
        public bool ShouldSerializeDesiredInventory()
        {
            return (_DesiredInventory.HasValue);
        }

        private decimal? _MinInventory;
        public decimal MinInventory
        {
            get { return _MinInventory.Value; }
            set { _MinInventory = value; }
        }
        public bool ShouldSerializeMinInventory()
        {
            return (_MinInventory.HasValue);
        }

        public string Picture { get; set; }
        public string User_Text { get; set; }
        public string SerialNum { get; set; }
        private decimal? _CommissionPercent;
        public decimal CommissionPercent
        {
            get { return _CommissionPercent.Value; }
            set { _CommissionPercent = value; }
        }
        public bool ShouldSerializeCommissionPercent()
        {
            return (_CommissionPercent.HasValue);
        }

        private decimal? _CommissionSum;
        public decimal CommissionSum
        {
            get { return _CommissionSum.Value; }
            set { _CommissionSum = value; }
        }
        public bool ShouldSerializeCommissionSum()
        {
            return (_CommissionSum.HasValue);
        }

        private int? _CommissionGroup;
        public int CommissionGroup
        {
            get { return _CommissionGroup.Value; }
            set { _CommissionGroup = value; }
        }
        public bool ShouldSerializeCommissionGroup()
        {
            return (_CommissionGroup.HasValue);
        }

        private SAPB1.BoItemTreeTypes? _TreeType;
        public SAPB1.BoItemTreeTypes TreeType
        {
            get { return _TreeType.Value; }
            set { _TreeType = value; }
        }
        public bool ShouldSerializeTreeType()
        {
            return (_TreeType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AssetItem;
        public SAPB1.BoYesNoEnum AssetItem
        {
            get { return _AssetItem.Value; }
            set { _AssetItem = value; }
        }
        public bool ShouldSerializeAssetItem()
        {
            return (_AssetItem.HasValue);
        }

        public string DataExportCode { get; set; }
        private int? _Manufacturer;
        public int Manufacturer
        {
            get { return _Manufacturer.Value; }
            set { _Manufacturer = value; }
        }
        public bool ShouldSerializeManufacturer()
        {
            return (_Manufacturer.HasValue);
        }

        private decimal? _QuantityOnStock;
        public decimal QuantityOnStock
        {
            get { return _QuantityOnStock.Value; }
            set { _QuantityOnStock = value; }
        }
        public bool ShouldSerializeQuantityOnStock()
        {
            return (_QuantityOnStock.HasValue);
        }

        private decimal? _QuantityOrderedFromVendors;
        public decimal QuantityOrderedFromVendors
        {
            get { return _QuantityOrderedFromVendors.Value; }
            set { _QuantityOrderedFromVendors = value; }
        }
        public bool ShouldSerializeQuantityOrderedFromVendors()
        {
            return (_QuantityOrderedFromVendors.HasValue);
        }

        private decimal? _QuantityOrderedByCustomers;
        public decimal QuantityOrderedByCustomers
        {
            get { return _QuantityOrderedByCustomers.Value; }
            set { _QuantityOrderedByCustomers = value; }
        }
        public bool ShouldSerializeQuantityOrderedByCustomers()
        {
            return (_QuantityOrderedByCustomers.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ManageSerialNumbers;
        public SAPB1.BoYesNoEnum ManageSerialNumbers
        {
            get { return _ManageSerialNumbers.Value; }
            set { _ManageSerialNumbers = value; }
        }
        public bool ShouldSerializeManageSerialNumbers()
        {
            return (_ManageSerialNumbers.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ManageBatchNumbers;
        public SAPB1.BoYesNoEnum ManageBatchNumbers
        {
            get { return _ManageBatchNumbers.Value; }
            set { _ManageBatchNumbers = value; }
        }
        public bool ShouldSerializeManageBatchNumbers()
        {
            return (_ManageBatchNumbers.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Valid;
        public SAPB1.BoYesNoEnum Valid
        {
            get { return _Valid.Value; }
            set { _Valid = value; }
        }
        public bool ShouldSerializeValid()
        {
            return (_Valid.HasValue);
        }

        private DateTime? _ValidFrom;
        public DateTime ValidFrom
        {
            get { return _ValidFrom.Value; }
            set { _ValidFrom = value; }
        }
        public bool ShouldSerializeValidFrom()
        {
            return (_ValidFrom.HasValue);
        }

        private DateTime? _ValidTo;
        public DateTime ValidTo
        {
            get { return _ValidTo.Value; }
            set { _ValidTo = value; }
        }
        public bool ShouldSerializeValidTo()
        {
            return (_ValidTo.HasValue);
        }

        public string ValidRemarks { get; set; }
        private SAPB1.BoYesNoEnum? _Frozen;
        public SAPB1.BoYesNoEnum Frozen
        {
            get { return _Frozen.Value; }
            set { _Frozen = value; }
        }
        public bool ShouldSerializeFrozen()
        {
            return (_Frozen.HasValue);
        }

        private DateTime? _FrozenFrom;
        public DateTime FrozenFrom
        {
            get { return _FrozenFrom.Value; }
            set { _FrozenFrom = value; }
        }
        public bool ShouldSerializeFrozenFrom()
        {
            return (_FrozenFrom.HasValue);
        }

        private DateTime? _FrozenTo;
        public DateTime FrozenTo
        {
            get { return _FrozenTo.Value; }
            set { _FrozenTo = value; }
        }
        public bool ShouldSerializeFrozenTo()
        {
            return (_FrozenTo.HasValue);
        }

        public string FrozenRemarks { get; set; }
        public string SalesUnit { get; set; }
        private decimal? _SalesItemsPerUnit;
        public decimal SalesItemsPerUnit
        {
            get { return _SalesItemsPerUnit.Value; }
            set { _SalesItemsPerUnit = value; }
        }
        public bool ShouldSerializeSalesItemsPerUnit()
        {
            return (_SalesItemsPerUnit.HasValue);
        }

        public string SalesPackagingUnit { get; set; }
        private decimal? _SalesQtyPerPackUnit;
        public decimal SalesQtyPerPackUnit
        {
            get { return _SalesQtyPerPackUnit.Value; }
            set { _SalesQtyPerPackUnit = value; }
        }
        public bool ShouldSerializeSalesQtyPerPackUnit()
        {
            return (_SalesQtyPerPackUnit.HasValue);
        }

        private decimal? _SalesUnitLength;
        public decimal SalesUnitLength
        {
            get { return _SalesUnitLength.Value; }
            set { _SalesUnitLength = value; }
        }
        public bool ShouldSerializeSalesUnitLength()
        {
            return (_SalesUnitLength.HasValue);
        }

        private int? _SalesLengthUnit;
        public int SalesLengthUnit
        {
            get { return _SalesLengthUnit.Value; }
            set { _SalesLengthUnit = value; }
        }
        public bool ShouldSerializeSalesLengthUnit()
        {
            return (_SalesLengthUnit.HasValue);
        }

        private decimal? _SalesUnitWidth;
        public decimal SalesUnitWidth
        {
            get { return _SalesUnitWidth.Value; }
            set { _SalesUnitWidth = value; }
        }
        public bool ShouldSerializeSalesUnitWidth()
        {
            return (_SalesUnitWidth.HasValue);
        }

        private int? _SalesWidthUnit;
        public int SalesWidthUnit
        {
            get { return _SalesWidthUnit.Value; }
            set { _SalesWidthUnit = value; }
        }
        public bool ShouldSerializeSalesWidthUnit()
        {
            return (_SalesWidthUnit.HasValue);
        }

        private decimal? _SalesUnitHeight;
        public decimal SalesUnitHeight
        {
            get { return _SalesUnitHeight.Value; }
            set { _SalesUnitHeight = value; }
        }
        public bool ShouldSerializeSalesUnitHeight()
        {
            return (_SalesUnitHeight.HasValue);
        }

        private int? _SalesHeightUnit;
        public int SalesHeightUnit
        {
            get { return _SalesHeightUnit.Value; }
            set { _SalesHeightUnit = value; }
        }
        public bool ShouldSerializeSalesHeightUnit()
        {
            return (_SalesHeightUnit.HasValue);
        }

        private decimal? _SalesUnitVolume;
        public decimal SalesUnitVolume
        {
            get { return _SalesUnitVolume.Value; }
            set { _SalesUnitVolume = value; }
        }
        public bool ShouldSerializeSalesUnitVolume()
        {
            return (_SalesUnitVolume.HasValue);
        }

        private int? _SalesVolumeUnit;
        public int SalesVolumeUnit
        {
            get { return _SalesVolumeUnit.Value; }
            set { _SalesVolumeUnit = value; }
        }
        public bool ShouldSerializeSalesVolumeUnit()
        {
            return (_SalesVolumeUnit.HasValue);
        }

        private decimal? _SalesUnitWeight;
        public decimal SalesUnitWeight
        {
            get { return _SalesUnitWeight.Value; }
            set { _SalesUnitWeight = value; }
        }
        public bool ShouldSerializeSalesUnitWeight()
        {
            return (_SalesUnitWeight.HasValue);
        }

        private int? _SalesWeightUnit;
        public int SalesWeightUnit
        {
            get { return _SalesWeightUnit.Value; }
            set { _SalesWeightUnit = value; }
        }
        public bool ShouldSerializeSalesWeightUnit()
        {
            return (_SalesWeightUnit.HasValue);
        }

        public string PurchaseUnit { get; set; }
        private decimal? _PurchaseItemsPerUnit;
        public decimal PurchaseItemsPerUnit
        {
            get { return _PurchaseItemsPerUnit.Value; }
            set { _PurchaseItemsPerUnit = value; }
        }
        public bool ShouldSerializePurchaseItemsPerUnit()
        {
            return (_PurchaseItemsPerUnit.HasValue);
        }

        public string PurchasePackagingUnit { get; set; }
        private decimal? _PurchaseQtyPerPackUnit;
        public decimal PurchaseQtyPerPackUnit
        {
            get { return _PurchaseQtyPerPackUnit.Value; }
            set { _PurchaseQtyPerPackUnit = value; }
        }
        public bool ShouldSerializePurchaseQtyPerPackUnit()
        {
            return (_PurchaseQtyPerPackUnit.HasValue);
        }

        private decimal? _PurchaseUnitLength;
        public decimal PurchaseUnitLength
        {
            get { return _PurchaseUnitLength.Value; }
            set { _PurchaseUnitLength = value; }
        }
        public bool ShouldSerializePurchaseUnitLength()
        {
            return (_PurchaseUnitLength.HasValue);
        }

        private int? _PurchaseLengthUnit;
        public int PurchaseLengthUnit
        {
            get { return _PurchaseLengthUnit.Value; }
            set { _PurchaseLengthUnit = value; }
        }
        public bool ShouldSerializePurchaseLengthUnit()
        {
            return (_PurchaseLengthUnit.HasValue);
        }

        private decimal? _PurchaseUnitWidth;
        public decimal PurchaseUnitWidth
        {
            get { return _PurchaseUnitWidth.Value; }
            set { _PurchaseUnitWidth = value; }
        }
        public bool ShouldSerializePurchaseUnitWidth()
        {
            return (_PurchaseUnitWidth.HasValue);
        }

        private int? _PurchaseWidthUnit;
        public int PurchaseWidthUnit
        {
            get { return _PurchaseWidthUnit.Value; }
            set { _PurchaseWidthUnit = value; }
        }
        public bool ShouldSerializePurchaseWidthUnit()
        {
            return (_PurchaseWidthUnit.HasValue);
        }

        private decimal? _PurchaseUnitHeight;
        public decimal PurchaseUnitHeight
        {
            get { return _PurchaseUnitHeight.Value; }
            set { _PurchaseUnitHeight = value; }
        }
        public bool ShouldSerializePurchaseUnitHeight()
        {
            return (_PurchaseUnitHeight.HasValue);
        }

        private int? _PurchaseHeightUnit;
        public int PurchaseHeightUnit
        {
            get { return _PurchaseHeightUnit.Value; }
            set { _PurchaseHeightUnit = value; }
        }
        public bool ShouldSerializePurchaseHeightUnit()
        {
            return (_PurchaseHeightUnit.HasValue);
        }

        private decimal? _PurchaseUnitVolume;
        public decimal PurchaseUnitVolume
        {
            get { return _PurchaseUnitVolume.Value; }
            set { _PurchaseUnitVolume = value; }
        }
        public bool ShouldSerializePurchaseUnitVolume()
        {
            return (_PurchaseUnitVolume.HasValue);
        }

        private int? _PurchaseVolumeUnit;
        public int PurchaseVolumeUnit
        {
            get { return _PurchaseVolumeUnit.Value; }
            set { _PurchaseVolumeUnit = value; }
        }
        public bool ShouldSerializePurchaseVolumeUnit()
        {
            return (_PurchaseVolumeUnit.HasValue);
        }

        private decimal? _PurchaseUnitWeight;
        public decimal PurchaseUnitWeight
        {
            get { return _PurchaseUnitWeight.Value; }
            set { _PurchaseUnitWeight = value; }
        }
        public bool ShouldSerializePurchaseUnitWeight()
        {
            return (_PurchaseUnitWeight.HasValue);
        }

        private int? _PurchaseWeightUnit;
        public int PurchaseWeightUnit
        {
            get { return _PurchaseWeightUnit.Value; }
            set { _PurchaseWeightUnit = value; }
        }
        public bool ShouldSerializePurchaseWeightUnit()
        {
            return (_PurchaseWeightUnit.HasValue);
        }

        public string PurchaseVATGroup { get; set; }
        private decimal? _SalesFactor1;
        public decimal SalesFactor1
        {
            get { return _SalesFactor1.Value; }
            set { _SalesFactor1 = value; }
        }
        public bool ShouldSerializeSalesFactor1()
        {
            return (_SalesFactor1.HasValue);
        }

        private decimal? _SalesFactor2;
        public decimal SalesFactor2
        {
            get { return _SalesFactor2.Value; }
            set { _SalesFactor2 = value; }
        }
        public bool ShouldSerializeSalesFactor2()
        {
            return (_SalesFactor2.HasValue);
        }

        private decimal? _SalesFactor3;
        public decimal SalesFactor3
        {
            get { return _SalesFactor3.Value; }
            set { _SalesFactor3 = value; }
        }
        public bool ShouldSerializeSalesFactor3()
        {
            return (_SalesFactor3.HasValue);
        }

        private decimal? _SalesFactor4;
        public decimal SalesFactor4
        {
            get { return _SalesFactor4.Value; }
            set { _SalesFactor4 = value; }
        }
        public bool ShouldSerializeSalesFactor4()
        {
            return (_SalesFactor4.HasValue);
        }

        private decimal? _PurchaseFactor1;
        public decimal PurchaseFactor1
        {
            get { return _PurchaseFactor1.Value; }
            set { _PurchaseFactor1 = value; }
        }
        public bool ShouldSerializePurchaseFactor1()
        {
            return (_PurchaseFactor1.HasValue);
        }

        private decimal? _PurchaseFactor2;
        public decimal PurchaseFactor2
        {
            get { return _PurchaseFactor2.Value; }
            set { _PurchaseFactor2 = value; }
        }
        public bool ShouldSerializePurchaseFactor2()
        {
            return (_PurchaseFactor2.HasValue);
        }

        private decimal? _PurchaseFactor3;
        public decimal PurchaseFactor3
        {
            get { return _PurchaseFactor3.Value; }
            set { _PurchaseFactor3 = value; }
        }
        public bool ShouldSerializePurchaseFactor3()
        {
            return (_PurchaseFactor3.HasValue);
        }

        private decimal? _PurchaseFactor4;
        public decimal PurchaseFactor4
        {
            get { return _PurchaseFactor4.Value; }
            set { _PurchaseFactor4 = value; }
        }
        public bool ShouldSerializePurchaseFactor4()
        {
            return (_PurchaseFactor4.HasValue);
        }

        private decimal? _MovingAveragePrice;
        public decimal MovingAveragePrice
        {
            get { return _MovingAveragePrice.Value; }
            set { _MovingAveragePrice = value; }
        }
        public bool ShouldSerializeMovingAveragePrice()
        {
            return (_MovingAveragePrice.HasValue);
        }

        public string ForeignRevenuesAccount { get; set; }
        public string ECRevenuesAccount { get; set; }
        public string ForeignExpensesAccount { get; set; }
        public string ECExpensesAccount { get; set; }
        private decimal? _AvgStdPrice;
        public decimal AvgStdPrice
        {
            get { return _AvgStdPrice.Value; }
            set { _AvgStdPrice = value; }
        }
        public bool ShouldSerializeAvgStdPrice()
        {
            return (_AvgStdPrice.HasValue);
        }

        public string DefaultWarehouse { get; set; }
        private int? _ShipType;
        public int ShipType
        {
            get { return _ShipType.Value; }
            set { _ShipType = value; }
        }
        public bool ShouldSerializeShipType()
        {
            return (_ShipType.HasValue);
        }

        private SAPB1.BoGLMethods? _GLMethod;
        public SAPB1.BoGLMethods GLMethod
        {
            get { return _GLMethod.Value; }
            set { _GLMethod = value; }
        }
        public bool ShouldSerializeGLMethod()
        {
            return (_GLMethod.HasValue);
        }

        private SAPB1.BoTaxTypes? _TaxType;
        public SAPB1.BoTaxTypes TaxType
        {
            get { return _TaxType.Value; }
            set { _TaxType = value; }
        }
        public bool ShouldSerializeTaxType()
        {
            return (_TaxType.HasValue);
        }

        private decimal? _MaxInventory;
        public decimal MaxInventory
        {
            get { return _MaxInventory.Value; }
            set { _MaxInventory = value; }
        }
        public bool ShouldSerializeMaxInventory()
        {
            return (_MaxInventory.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ManageStockByWarehouse;
        public SAPB1.BoYesNoEnum ManageStockByWarehouse
        {
            get { return _ManageStockByWarehouse.Value; }
            set { _ManageStockByWarehouse = value; }
        }
        public bool ShouldSerializeManageStockByWarehouse()
        {
            return (_ManageStockByWarehouse.HasValue);
        }

        private int? _PurchaseHeightUnit1;
        public int PurchaseHeightUnit1
        {
            get { return _PurchaseHeightUnit1.Value; }
            set { _PurchaseHeightUnit1 = value; }
        }
        public bool ShouldSerializePurchaseHeightUnit1()
        {
            return (_PurchaseHeightUnit1.HasValue);
        }

        private decimal? _PurchaseUnitHeight1;
        public decimal PurchaseUnitHeight1
        {
            get { return _PurchaseUnitHeight1.Value; }
            set { _PurchaseUnitHeight1 = value; }
        }
        public bool ShouldSerializePurchaseUnitHeight1()
        {
            return (_PurchaseUnitHeight1.HasValue);
        }

        private int? _PurchaseLengthUnit1;
        public int PurchaseLengthUnit1
        {
            get { return _PurchaseLengthUnit1.Value; }
            set { _PurchaseLengthUnit1 = value; }
        }
        public bool ShouldSerializePurchaseLengthUnit1()
        {
            return (_PurchaseLengthUnit1.HasValue);
        }

        private decimal? _PurchaseUnitLength1;
        public decimal PurchaseUnitLength1
        {
            get { return _PurchaseUnitLength1.Value; }
            set { _PurchaseUnitLength1 = value; }
        }
        public bool ShouldSerializePurchaseUnitLength1()
        {
            return (_PurchaseUnitLength1.HasValue);
        }

        private int? _PurchaseWeightUnit1;
        public int PurchaseWeightUnit1
        {
            get { return _PurchaseWeightUnit1.Value; }
            set { _PurchaseWeightUnit1 = value; }
        }
        public bool ShouldSerializePurchaseWeightUnit1()
        {
            return (_PurchaseWeightUnit1.HasValue);
        }

        private decimal? _PurchaseUnitWeight1;
        public decimal PurchaseUnitWeight1
        {
            get { return _PurchaseUnitWeight1.Value; }
            set { _PurchaseUnitWeight1 = value; }
        }
        public bool ShouldSerializePurchaseUnitWeight1()
        {
            return (_PurchaseUnitWeight1.HasValue);
        }

        private int? _PurchaseWidthUnit1;
        public int PurchaseWidthUnit1
        {
            get { return _PurchaseWidthUnit1.Value; }
            set { _PurchaseWidthUnit1 = value; }
        }
        public bool ShouldSerializePurchaseWidthUnit1()
        {
            return (_PurchaseWidthUnit1.HasValue);
        }

        private decimal? _PurchaseUnitWidth1;
        public decimal PurchaseUnitWidth1
        {
            get { return _PurchaseUnitWidth1.Value; }
            set { _PurchaseUnitWidth1 = value; }
        }
        public bool ShouldSerializePurchaseUnitWidth1()
        {
            return (_PurchaseUnitWidth1.HasValue);
        }

        private int? _SalesHeightUnit1;
        public int SalesHeightUnit1
        {
            get { return _SalesHeightUnit1.Value; }
            set { _SalesHeightUnit1 = value; }
        }
        public bool ShouldSerializeSalesHeightUnit1()
        {
            return (_SalesHeightUnit1.HasValue);
        }

        private decimal? _SalesUnitHeight1;
        public decimal SalesUnitHeight1
        {
            get { return _SalesUnitHeight1.Value; }
            set { _SalesUnitHeight1 = value; }
        }
        public bool ShouldSerializeSalesUnitHeight1()
        {
            return (_SalesUnitHeight1.HasValue);
        }

        private int? _SalesLengthUnit1;
        public int SalesLengthUnit1
        {
            get { return _SalesLengthUnit1.Value; }
            set { _SalesLengthUnit1 = value; }
        }
        public bool ShouldSerializeSalesLengthUnit1()
        {
            return (_SalesLengthUnit1.HasValue);
        }

        private decimal? _SalesUnitLength1;
        public decimal SalesUnitLength1
        {
            get { return _SalesUnitLength1.Value; }
            set { _SalesUnitLength1 = value; }
        }
        public bool ShouldSerializeSalesUnitLength1()
        {
            return (_SalesUnitLength1.HasValue);
        }

        private int? _SalesWeightUnit1;
        public int SalesWeightUnit1
        {
            get { return _SalesWeightUnit1.Value; }
            set { _SalesWeightUnit1 = value; }
        }
        public bool ShouldSerializeSalesWeightUnit1()
        {
            return (_SalesWeightUnit1.HasValue);
        }

        private decimal? _SalesUnitWeight1;
        public decimal SalesUnitWeight1
        {
            get { return _SalesUnitWeight1.Value; }
            set { _SalesUnitWeight1 = value; }
        }
        public bool ShouldSerializeSalesUnitWeight1()
        {
            return (_SalesUnitWeight1.HasValue);
        }

        private int? _SalesWidthUnit1;
        public int SalesWidthUnit1
        {
            get { return _SalesWidthUnit1.Value; }
            set { _SalesWidthUnit1 = value; }
        }
        public bool ShouldSerializeSalesWidthUnit1()
        {
            return (_SalesWidthUnit1.HasValue);
        }

        private decimal? _SalesUnitWidth1;
        public decimal SalesUnitWidth1
        {
            get { return _SalesUnitWidth1.Value; }
            set { _SalesUnitWidth1 = value; }
        }
        public bool ShouldSerializeSalesUnitWidth1()
        {
            return (_SalesUnitWidth1.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ForceSelectionOfSerialNumber;
        public SAPB1.BoYesNoEnum ForceSelectionOfSerialNumber
        {
            get { return _ForceSelectionOfSerialNumber.Value; }
            set { _ForceSelectionOfSerialNumber = value; }
        }
        public bool ShouldSerializeForceSelectionOfSerialNumber()
        {
            return (_ForceSelectionOfSerialNumber.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ManageSerialNumbersOnReleaseOnly;
        public SAPB1.BoYesNoEnum ManageSerialNumbersOnReleaseOnly
        {
            get { return _ManageSerialNumbersOnReleaseOnly.Value; }
            set { _ManageSerialNumbersOnReleaseOnly = value; }
        }
        public bool ShouldSerializeManageSerialNumbersOnReleaseOnly()
        {
            return (_ManageSerialNumbersOnReleaseOnly.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WTLiable;
        public SAPB1.BoYesNoEnum WTLiable
        {
            get { return _WTLiable.Value; }
            set { _WTLiable = value; }
        }
        public bool ShouldSerializeWTLiable()
        {
            return (_WTLiable.HasValue);
        }

        private SAPB1.BoInventorySystem? _CostAccountingMethod;
        public SAPB1.BoInventorySystem CostAccountingMethod
        {
            get { return _CostAccountingMethod.Value; }
            set { _CostAccountingMethod = value; }
        }
        public bool ShouldSerializeCostAccountingMethod()
        {
            return (_CostAccountingMethod.HasValue);
        }

        public string SWW { get; set; }
        public string WarrantyTemplate { get; set; }
        private SAPB1.BoYesNoEnum? _IndirectTax;
        public SAPB1.BoYesNoEnum IndirectTax
        {
            get { return _IndirectTax.Value; }
            set { _IndirectTax = value; }
        }
        public bool ShouldSerializeIndirectTax()
        {
            return (_IndirectTax.HasValue);
        }

        public string ArTaxCode { get; set; }
        public string ApTaxCode { get; set; }
        public string BaseUnitName { get; set; }
        public string ItemCountryOrg { get; set; }
        private SAPB1.BoIssueMethod? _IssueMethod;
        public SAPB1.BoIssueMethod IssueMethod
        {
            get { return _IssueMethod.Value; }
            set { _IssueMethod = value; }
        }
        public bool ShouldSerializeIssueMethod()
        {
            return (_IssueMethod.HasValue);
        }

        private SAPB1.BoManageMethod? _SRIAndBatchManageMethod;
        public SAPB1.BoManageMethod SRIAndBatchManageMethod
        {
            get { return _SRIAndBatchManageMethod.Value; }
            set { _SRIAndBatchManageMethod = value; }
        }
        public bool ShouldSerializeSRIAndBatchManageMethod()
        {
            return (_SRIAndBatchManageMethod.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsPhantom;
        public SAPB1.BoYesNoEnum IsPhantom
        {
            get { return _IsPhantom.Value; }
            set { _IsPhantom = value; }
        }
        public bool ShouldSerializeIsPhantom()
        {
            return (_IsPhantom.HasValue);
        }

        public string InventoryUOM { get; set; }
        private SAPB1.BoPlanningSystem? _PlanningSystem;
        public SAPB1.BoPlanningSystem PlanningSystem
        {
            get { return _PlanningSystem.Value; }
            set { _PlanningSystem = value; }
        }
        public bool ShouldSerializePlanningSystem()
        {
            return (_PlanningSystem.HasValue);
        }

        private SAPB1.BoProcurementMethod? _ProcurementMethod;
        public SAPB1.BoProcurementMethod ProcurementMethod
        {
            get { return _ProcurementMethod.Value; }
            set { _ProcurementMethod = value; }
        }
        public bool ShouldSerializeProcurementMethod()
        {
            return (_ProcurementMethod.HasValue);
        }

        private SAPB1.BoMRPComponentWarehouse? _ComponentWarehouse;
        public SAPB1.BoMRPComponentWarehouse ComponentWarehouse
        {
            get { return _ComponentWarehouse.Value; }
            set { _ComponentWarehouse = value; }
        }
        public bool ShouldSerializeComponentWarehouse()
        {
            return (_ComponentWarehouse.HasValue);
        }

        private int? _OrderIntervals;
        public int OrderIntervals
        {
            get { return _OrderIntervals.Value; }
            set { _OrderIntervals = value; }
        }
        public bool ShouldSerializeOrderIntervals()
        {
            return (_OrderIntervals.HasValue);
        }

        private decimal? _OrderMultiple;
        public decimal OrderMultiple
        {
            get { return _OrderMultiple.Value; }
            set { _OrderMultiple = value; }
        }
        public bool ShouldSerializeOrderMultiple()
        {
            return (_OrderMultiple.HasValue);
        }

        private int? _LeadTime;
        public int LeadTime
        {
            get { return _LeadTime.Value; }
            set { _LeadTime = value; }
        }
        public bool ShouldSerializeLeadTime()
        {
            return (_LeadTime.HasValue);
        }

        private decimal? _MinOrderQuantity;
        public decimal MinOrderQuantity
        {
            get { return _MinOrderQuantity.Value; }
            set { _MinOrderQuantity = value; }
        }
        public bool ShouldSerializeMinOrderQuantity()
        {
            return (_MinOrderQuantity.HasValue);
        }

        private SAPB1.ItemTypeEnum? _ItemType;
        public SAPB1.ItemTypeEnum ItemType
        {
            get { return _ItemType.Value; }
            set { _ItemType = value; }
        }
        public bool ShouldSerializeItemType()
        {
            return (_ItemType.HasValue);
        }

        private SAPB1.ItemClassEnum? _ItemClass;
        public SAPB1.ItemClassEnum ItemClass
        {
            get { return _ItemClass.Value; }
            set { _ItemClass = value; }
        }
        public bool ShouldSerializeItemClass()
        {
            return (_ItemClass.HasValue);
        }

        private int? _OutgoingServiceCode;
        public int OutgoingServiceCode
        {
            get { return _OutgoingServiceCode.Value; }
            set { _OutgoingServiceCode = value; }
        }
        public bool ShouldSerializeOutgoingServiceCode()
        {
            return (_OutgoingServiceCode.HasValue);
        }

        private int? _IncomingServiceCode;
        public int IncomingServiceCode
        {
            get { return _IncomingServiceCode.Value; }
            set { _IncomingServiceCode = value; }
        }
        public bool ShouldSerializeIncomingServiceCode()
        {
            return (_IncomingServiceCode.HasValue);
        }

        private int? _ServiceGroup;
        public int ServiceGroup
        {
            get { return _ServiceGroup.Value; }
            set { _ServiceGroup = value; }
        }
        public bool ShouldSerializeServiceGroup()
        {
            return (_ServiceGroup.HasValue);
        }

        private int? _NCMCode;
        public int NCMCode
        {
            get { return _NCMCode.Value; }
            set { _NCMCode = value; }
        }
        public bool ShouldSerializeNCMCode()
        {
            return (_NCMCode.HasValue);
        }

        private SAPB1.BoMaterialTypes? _MaterialType;
        public SAPB1.BoMaterialTypes MaterialType
        {
            get { return _MaterialType.Value; }
            set { _MaterialType = value; }
        }
        public bool ShouldSerializeMaterialType()
        {
            return (_MaterialType.HasValue);
        }

        private int? _MaterialGroup;
        public int MaterialGroup
        {
            get { return _MaterialGroup.Value; }
            set { _MaterialGroup = value; }
        }
        public bool ShouldSerializeMaterialGroup()
        {
            return (_MaterialGroup.HasValue);
        }

        public string ProductSource { get; set; }
        private SAPB1.BoYesNoEnum? _Properties1;
        public SAPB1.BoYesNoEnum Properties1
        {
            get { return _Properties1.Value; }
            set { _Properties1 = value; }
        }
        public bool ShouldSerializeProperties1()
        {
            return (_Properties1.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties2;
        public SAPB1.BoYesNoEnum Properties2
        {
            get { return _Properties2.Value; }
            set { _Properties2 = value; }
        }
        public bool ShouldSerializeProperties2()
        {
            return (_Properties2.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties3;
        public SAPB1.BoYesNoEnum Properties3
        {
            get { return _Properties3.Value; }
            set { _Properties3 = value; }
        }
        public bool ShouldSerializeProperties3()
        {
            return (_Properties3.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties4;
        public SAPB1.BoYesNoEnum Properties4
        {
            get { return _Properties4.Value; }
            set { _Properties4 = value; }
        }
        public bool ShouldSerializeProperties4()
        {
            return (_Properties4.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties5;
        public SAPB1.BoYesNoEnum Properties5
        {
            get { return _Properties5.Value; }
            set { _Properties5 = value; }
        }
        public bool ShouldSerializeProperties5()
        {
            return (_Properties5.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties6;
        public SAPB1.BoYesNoEnum Properties6
        {
            get { return _Properties6.Value; }
            set { _Properties6 = value; }
        }
        public bool ShouldSerializeProperties6()
        {
            return (_Properties6.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties7;
        public SAPB1.BoYesNoEnum Properties7
        {
            get { return _Properties7.Value; }
            set { _Properties7 = value; }
        }
        public bool ShouldSerializeProperties7()
        {
            return (_Properties7.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties8;
        public SAPB1.BoYesNoEnum Properties8
        {
            get { return _Properties8.Value; }
            set { _Properties8 = value; }
        }
        public bool ShouldSerializeProperties8()
        {
            return (_Properties8.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties9;
        public SAPB1.BoYesNoEnum Properties9
        {
            get { return _Properties9.Value; }
            set { _Properties9 = value; }
        }
        public bool ShouldSerializeProperties9()
        {
            return (_Properties9.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties10;
        public SAPB1.BoYesNoEnum Properties10
        {
            get { return _Properties10.Value; }
            set { _Properties10 = value; }
        }
        public bool ShouldSerializeProperties10()
        {
            return (_Properties10.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties11;
        public SAPB1.BoYesNoEnum Properties11
        {
            get { return _Properties11.Value; }
            set { _Properties11 = value; }
        }
        public bool ShouldSerializeProperties11()
        {
            return (_Properties11.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties12;
        public SAPB1.BoYesNoEnum Properties12
        {
            get { return _Properties12.Value; }
            set { _Properties12 = value; }
        }
        public bool ShouldSerializeProperties12()
        {
            return (_Properties12.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties13;
        public SAPB1.BoYesNoEnum Properties13
        {
            get { return _Properties13.Value; }
            set { _Properties13 = value; }
        }
        public bool ShouldSerializeProperties13()
        {
            return (_Properties13.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties14;
        public SAPB1.BoYesNoEnum Properties14
        {
            get { return _Properties14.Value; }
            set { _Properties14 = value; }
        }
        public bool ShouldSerializeProperties14()
        {
            return (_Properties14.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties15;
        public SAPB1.BoYesNoEnum Properties15
        {
            get { return _Properties15.Value; }
            set { _Properties15 = value; }
        }
        public bool ShouldSerializeProperties15()
        {
            return (_Properties15.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties16;
        public SAPB1.BoYesNoEnum Properties16
        {
            get { return _Properties16.Value; }
            set { _Properties16 = value; }
        }
        public bool ShouldSerializeProperties16()
        {
            return (_Properties16.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties17;
        public SAPB1.BoYesNoEnum Properties17
        {
            get { return _Properties17.Value; }
            set { _Properties17 = value; }
        }
        public bool ShouldSerializeProperties17()
        {
            return (_Properties17.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties18;
        public SAPB1.BoYesNoEnum Properties18
        {
            get { return _Properties18.Value; }
            set { _Properties18 = value; }
        }
        public bool ShouldSerializeProperties18()
        {
            return (_Properties18.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties19;
        public SAPB1.BoYesNoEnum Properties19
        {
            get { return _Properties19.Value; }
            set { _Properties19 = value; }
        }
        public bool ShouldSerializeProperties19()
        {
            return (_Properties19.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties20;
        public SAPB1.BoYesNoEnum Properties20
        {
            get { return _Properties20.Value; }
            set { _Properties20 = value; }
        }
        public bool ShouldSerializeProperties20()
        {
            return (_Properties20.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties21;
        public SAPB1.BoYesNoEnum Properties21
        {
            get { return _Properties21.Value; }
            set { _Properties21 = value; }
        }
        public bool ShouldSerializeProperties21()
        {
            return (_Properties21.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties22;
        public SAPB1.BoYesNoEnum Properties22
        {
            get { return _Properties22.Value; }
            set { _Properties22 = value; }
        }
        public bool ShouldSerializeProperties22()
        {
            return (_Properties22.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties23;
        public SAPB1.BoYesNoEnum Properties23
        {
            get { return _Properties23.Value; }
            set { _Properties23 = value; }
        }
        public bool ShouldSerializeProperties23()
        {
            return (_Properties23.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties24;
        public SAPB1.BoYesNoEnum Properties24
        {
            get { return _Properties24.Value; }
            set { _Properties24 = value; }
        }
        public bool ShouldSerializeProperties24()
        {
            return (_Properties24.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties25;
        public SAPB1.BoYesNoEnum Properties25
        {
            get { return _Properties25.Value; }
            set { _Properties25 = value; }
        }
        public bool ShouldSerializeProperties25()
        {
            return (_Properties25.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties26;
        public SAPB1.BoYesNoEnum Properties26
        {
            get { return _Properties26.Value; }
            set { _Properties26 = value; }
        }
        public bool ShouldSerializeProperties26()
        {
            return (_Properties26.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties27;
        public SAPB1.BoYesNoEnum Properties27
        {
            get { return _Properties27.Value; }
            set { _Properties27 = value; }
        }
        public bool ShouldSerializeProperties27()
        {
            return (_Properties27.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties28;
        public SAPB1.BoYesNoEnum Properties28
        {
            get { return _Properties28.Value; }
            set { _Properties28 = value; }
        }
        public bool ShouldSerializeProperties28()
        {
            return (_Properties28.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties29;
        public SAPB1.BoYesNoEnum Properties29
        {
            get { return _Properties29.Value; }
            set { _Properties29 = value; }
        }
        public bool ShouldSerializeProperties29()
        {
            return (_Properties29.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties30;
        public SAPB1.BoYesNoEnum Properties30
        {
            get { return _Properties30.Value; }
            set { _Properties30 = value; }
        }
        public bool ShouldSerializeProperties30()
        {
            return (_Properties30.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties31;
        public SAPB1.BoYesNoEnum Properties31
        {
            get { return _Properties31.Value; }
            set { _Properties31 = value; }
        }
        public bool ShouldSerializeProperties31()
        {
            return (_Properties31.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties32;
        public SAPB1.BoYesNoEnum Properties32
        {
            get { return _Properties32.Value; }
            set { _Properties32 = value; }
        }
        public bool ShouldSerializeProperties32()
        {
            return (_Properties32.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties33;
        public SAPB1.BoYesNoEnum Properties33
        {
            get { return _Properties33.Value; }
            set { _Properties33 = value; }
        }
        public bool ShouldSerializeProperties33()
        {
            return (_Properties33.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties34;
        public SAPB1.BoYesNoEnum Properties34
        {
            get { return _Properties34.Value; }
            set { _Properties34 = value; }
        }
        public bool ShouldSerializeProperties34()
        {
            return (_Properties34.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties35;
        public SAPB1.BoYesNoEnum Properties35
        {
            get { return _Properties35.Value; }
            set { _Properties35 = value; }
        }
        public bool ShouldSerializeProperties35()
        {
            return (_Properties35.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties36;
        public SAPB1.BoYesNoEnum Properties36
        {
            get { return _Properties36.Value; }
            set { _Properties36 = value; }
        }
        public bool ShouldSerializeProperties36()
        {
            return (_Properties36.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties37;
        public SAPB1.BoYesNoEnum Properties37
        {
            get { return _Properties37.Value; }
            set { _Properties37 = value; }
        }
        public bool ShouldSerializeProperties37()
        {
            return (_Properties37.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties38;
        public SAPB1.BoYesNoEnum Properties38
        {
            get { return _Properties38.Value; }
            set { _Properties38 = value; }
        }
        public bool ShouldSerializeProperties38()
        {
            return (_Properties38.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties39;
        public SAPB1.BoYesNoEnum Properties39
        {
            get { return _Properties39.Value; }
            set { _Properties39 = value; }
        }
        public bool ShouldSerializeProperties39()
        {
            return (_Properties39.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties40;
        public SAPB1.BoYesNoEnum Properties40
        {
            get { return _Properties40.Value; }
            set { _Properties40 = value; }
        }
        public bool ShouldSerializeProperties40()
        {
            return (_Properties40.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties41;
        public SAPB1.BoYesNoEnum Properties41
        {
            get { return _Properties41.Value; }
            set { _Properties41 = value; }
        }
        public bool ShouldSerializeProperties41()
        {
            return (_Properties41.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties42;
        public SAPB1.BoYesNoEnum Properties42
        {
            get { return _Properties42.Value; }
            set { _Properties42 = value; }
        }
        public bool ShouldSerializeProperties42()
        {
            return (_Properties42.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties43;
        public SAPB1.BoYesNoEnum Properties43
        {
            get { return _Properties43.Value; }
            set { _Properties43 = value; }
        }
        public bool ShouldSerializeProperties43()
        {
            return (_Properties43.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties44;
        public SAPB1.BoYesNoEnum Properties44
        {
            get { return _Properties44.Value; }
            set { _Properties44 = value; }
        }
        public bool ShouldSerializeProperties44()
        {
            return (_Properties44.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties45;
        public SAPB1.BoYesNoEnum Properties45
        {
            get { return _Properties45.Value; }
            set { _Properties45 = value; }
        }
        public bool ShouldSerializeProperties45()
        {
            return (_Properties45.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties46;
        public SAPB1.BoYesNoEnum Properties46
        {
            get { return _Properties46.Value; }
            set { _Properties46 = value; }
        }
        public bool ShouldSerializeProperties46()
        {
            return (_Properties46.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties47;
        public SAPB1.BoYesNoEnum Properties47
        {
            get { return _Properties47.Value; }
            set { _Properties47 = value; }
        }
        public bool ShouldSerializeProperties47()
        {
            return (_Properties47.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties48;
        public SAPB1.BoYesNoEnum Properties48
        {
            get { return _Properties48.Value; }
            set { _Properties48 = value; }
        }
        public bool ShouldSerializeProperties48()
        {
            return (_Properties48.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties49;
        public SAPB1.BoYesNoEnum Properties49
        {
            get { return _Properties49.Value; }
            set { _Properties49 = value; }
        }
        public bool ShouldSerializeProperties49()
        {
            return (_Properties49.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties50;
        public SAPB1.BoYesNoEnum Properties50
        {
            get { return _Properties50.Value; }
            set { _Properties50 = value; }
        }
        public bool ShouldSerializeProperties50()
        {
            return (_Properties50.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties51;
        public SAPB1.BoYesNoEnum Properties51
        {
            get { return _Properties51.Value; }
            set { _Properties51 = value; }
        }
        public bool ShouldSerializeProperties51()
        {
            return (_Properties51.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties52;
        public SAPB1.BoYesNoEnum Properties52
        {
            get { return _Properties52.Value; }
            set { _Properties52 = value; }
        }
        public bool ShouldSerializeProperties52()
        {
            return (_Properties52.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties53;
        public SAPB1.BoYesNoEnum Properties53
        {
            get { return _Properties53.Value; }
            set { _Properties53 = value; }
        }
        public bool ShouldSerializeProperties53()
        {
            return (_Properties53.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties54;
        public SAPB1.BoYesNoEnum Properties54
        {
            get { return _Properties54.Value; }
            set { _Properties54 = value; }
        }
        public bool ShouldSerializeProperties54()
        {
            return (_Properties54.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties55;
        public SAPB1.BoYesNoEnum Properties55
        {
            get { return _Properties55.Value; }
            set { _Properties55 = value; }
        }
        public bool ShouldSerializeProperties55()
        {
            return (_Properties55.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties56;
        public SAPB1.BoYesNoEnum Properties56
        {
            get { return _Properties56.Value; }
            set { _Properties56 = value; }
        }
        public bool ShouldSerializeProperties56()
        {
            return (_Properties56.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties57;
        public SAPB1.BoYesNoEnum Properties57
        {
            get { return _Properties57.Value; }
            set { _Properties57 = value; }
        }
        public bool ShouldSerializeProperties57()
        {
            return (_Properties57.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties58;
        public SAPB1.BoYesNoEnum Properties58
        {
            get { return _Properties58.Value; }
            set { _Properties58 = value; }
        }
        public bool ShouldSerializeProperties58()
        {
            return (_Properties58.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties59;
        public SAPB1.BoYesNoEnum Properties59
        {
            get { return _Properties59.Value; }
            set { _Properties59 = value; }
        }
        public bool ShouldSerializeProperties59()
        {
            return (_Properties59.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties60;
        public SAPB1.BoYesNoEnum Properties60
        {
            get { return _Properties60.Value; }
            set { _Properties60 = value; }
        }
        public bool ShouldSerializeProperties60()
        {
            return (_Properties60.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties61;
        public SAPB1.BoYesNoEnum Properties61
        {
            get { return _Properties61.Value; }
            set { _Properties61 = value; }
        }
        public bool ShouldSerializeProperties61()
        {
            return (_Properties61.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties62;
        public SAPB1.BoYesNoEnum Properties62
        {
            get { return _Properties62.Value; }
            set { _Properties62 = value; }
        }
        public bool ShouldSerializeProperties62()
        {
            return (_Properties62.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties63;
        public SAPB1.BoYesNoEnum Properties63
        {
            get { return _Properties63.Value; }
            set { _Properties63 = value; }
        }
        public bool ShouldSerializeProperties63()
        {
            return (_Properties63.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Properties64;
        public SAPB1.BoYesNoEnum Properties64
        {
            get { return _Properties64.Value; }
            set { _Properties64 = value; }
        }
        public bool ShouldSerializeProperties64()
        {
            return (_Properties64.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AutoCreateSerialNumbersOnRelease;
        public SAPB1.BoYesNoEnum AutoCreateSerialNumbersOnRelease
        {
            get { return _AutoCreateSerialNumbersOnRelease.Value; }
            set { _AutoCreateSerialNumbersOnRelease = value; }
        }
        public bool ShouldSerializeAutoCreateSerialNumbersOnRelease()
        {
            return (_AutoCreateSerialNumbersOnRelease.HasValue);
        }

        private int? _DNFEntry;
        public int DNFEntry
        {
            get { return _DNFEntry.Value; }
            set { _DNFEntry = value; }
        }
        public bool ShouldSerializeDNFEntry()
        {
            return (_DNFEntry.HasValue);
        }

        public string GTSItemSpec { get; set; }
        public string GTSItemTaxCategory { get; set; }
        private int? _FuelID;
        public int FuelID
        {
            get { return _FuelID.Value; }
            set { _FuelID = value; }
        }
        public bool ShouldSerializeFuelID()
        {
            return (_FuelID.HasValue);
        }

        public string BeverageTableCode { get; set; }
        public string BeverageGroupCode { get; set; }
        private int? _BeverageCommercialBrandCode;
        public int BeverageCommercialBrandCode
        {
            get { return _BeverageCommercialBrandCode.Value; }
            set { _BeverageCommercialBrandCode = value; }
        }
        public bool ShouldSerializeBeverageCommercialBrandCode()
        {
            return (_BeverageCommercialBrandCode.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        private int? _ToleranceDays;
        public int ToleranceDays
        {
            get { return _ToleranceDays.Value; }
            set { _ToleranceDays = value; }
        }
        public bool ShouldSerializeToleranceDays()
        {
            return (_ToleranceDays.HasValue);
        }

        private SAPB1.TypeOfAdvancedRulesEnum? _TypeOfAdvancedRules;
        public SAPB1.TypeOfAdvancedRulesEnum TypeOfAdvancedRules
        {
            get { return _TypeOfAdvancedRules.Value; }
            set { _TypeOfAdvancedRules = value; }
        }
        public bool ShouldSerializeTypeOfAdvancedRules()
        {
            return (_TypeOfAdvancedRules.HasValue);
        }

        private SAPB1.IssuePrimarilyByEnum? _IssuePrimarilyBy;
        public SAPB1.IssuePrimarilyByEnum IssuePrimarilyBy
        {
            get { return _IssuePrimarilyBy.Value; }
            set { _IssuePrimarilyBy = value; }
        }
        public bool ShouldSerializeIssuePrimarilyBy()
        {
            return (_IssuePrimarilyBy.HasValue);
        }

        private SAPB1.BoYesNoEnum? _NoDiscounts;
        public SAPB1.BoYesNoEnum NoDiscounts
        {
            get { return _NoDiscounts.Value; }
            set { _NoDiscounts = value; }
        }
        public bool ShouldSerializeNoDiscounts()
        {
            return (_NoDiscounts.HasValue);
        }

        public string AssetClass { get; set; }
        public string AssetGroup { get; set; }
        public string InventoryNumber { get; set; }
        private int? _Technician;
        public int Technician
        {
            get { return _Technician.Value; }
            set { _Technician = value; }
        }
        public bool ShouldSerializeTechnician()
        {
            return (_Technician.HasValue);
        }

        private int? _Employee;
        public int Employee
        {
            get { return _Employee.Value; }
            set { _Employee = value; }
        }
        public bool ShouldSerializeEmployee()
        {
            return (_Employee.HasValue);
        }

        private int? _Location;
        public int Location
        {
            get { return _Location.Value; }
            set { _Location = value; }
        }
        public bool ShouldSerializeLocation()
        {
            return (_Location.HasValue);
        }

        private SAPB1.AssetStatusEnum? _AssetStatus;
        public SAPB1.AssetStatusEnum AssetStatus
        {
            get { return _AssetStatus.Value; }
            set { _AssetStatus = value; }
        }
        public bool ShouldSerializeAssetStatus()
        {
            return (_AssetStatus.HasValue);
        }

        private DateTime? _CapitalizationDate;
        public DateTime CapitalizationDate
        {
            get { return _CapitalizationDate.Value; }
            set { _CapitalizationDate = value; }
        }
        public bool ShouldSerializeCapitalizationDate()
        {
            return (_CapitalizationDate.HasValue);
        }

        private SAPB1.BoYesNoEnum? _StatisticalAsset;
        public SAPB1.BoYesNoEnum StatisticalAsset
        {
            get { return _StatisticalAsset.Value; }
            set { _StatisticalAsset = value; }
        }
        public bool ShouldSerializeStatisticalAsset()
        {
            return (_StatisticalAsset.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Cession;
        public SAPB1.BoYesNoEnum Cession
        {
            get { return _Cession.Value; }
            set { _Cession = value; }
        }
        public bool ShouldSerializeCession()
        {
            return (_Cession.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DeactivateAfterUsefulLife;
        public SAPB1.BoYesNoEnum DeactivateAfterUsefulLife
        {
            get { return _DeactivateAfterUsefulLife.Value; }
            set { _DeactivateAfterUsefulLife = value; }
        }
        public bool ShouldSerializeDeactivateAfterUsefulLife()
        {
            return (_DeactivateAfterUsefulLife.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ManageByQuantity;
        public SAPB1.BoYesNoEnum ManageByQuantity
        {
            get { return _ManageByQuantity.Value; }
            set { _ManageByQuantity = value; }
        }
        public bool ShouldSerializeManageByQuantity()
        {
            return (_ManageByQuantity.HasValue);
        }

        private int? _UoMGroupEntry;
        public int UoMGroupEntry
        {
            get { return _UoMGroupEntry.Value; }
            set { _UoMGroupEntry = value; }
        }
        public bool ShouldSerializeUoMGroupEntry()
        {
            return (_UoMGroupEntry.HasValue);
        }

        private int? _InventoryUoMEntry;
        public int InventoryUoMEntry
        {
            get { return _InventoryUoMEntry.Value; }
            set { _InventoryUoMEntry = value; }
        }
        public bool ShouldSerializeInventoryUoMEntry()
        {
            return (_InventoryUoMEntry.HasValue);
        }

        private int? _DefaultSalesUoMEntry;
        public int DefaultSalesUoMEntry
        {
            get { return _DefaultSalesUoMEntry.Value; }
            set { _DefaultSalesUoMEntry = value; }
        }
        public bool ShouldSerializeDefaultSalesUoMEntry()
        {
            return (_DefaultSalesUoMEntry.HasValue);
        }

        private int? _DefaultPurchasingUoMEntry;
        public int DefaultPurchasingUoMEntry
        {
            get { return _DefaultPurchasingUoMEntry.Value; }
            set { _DefaultPurchasingUoMEntry = value; }
        }
        public bool ShouldSerializeDefaultPurchasingUoMEntry()
        {
            return (_DefaultPurchasingUoMEntry.HasValue);
        }

        public string DepreciationGroup { get; set; }
        public string AssetSerialNumber { get; set; }
        private decimal? _InventoryWeight;
        public decimal InventoryWeight
        {
            get { return _InventoryWeight.Value; }
            set { _InventoryWeight = value; }
        }
        public bool ShouldSerializeInventoryWeight()
        {
            return (_InventoryWeight.HasValue);
        }

        private int? _InventoryWeightUnit;
        public int InventoryWeightUnit
        {
            get { return _InventoryWeightUnit.Value; }
            set { _InventoryWeightUnit = value; }
        }
        public bool ShouldSerializeInventoryWeightUnit()
        {
            return (_InventoryWeightUnit.HasValue);
        }

        private decimal? _InventoryWeight1;
        public decimal InventoryWeight1
        {
            get { return _InventoryWeight1.Value; }
            set { _InventoryWeight1 = value; }
        }
        public bool ShouldSerializeInventoryWeight1()
        {
            return (_InventoryWeight1.HasValue);
        }

        private int? _InventoryWeightUnit1;
        public int InventoryWeightUnit1
        {
            get { return _InventoryWeightUnit1.Value; }
            set { _InventoryWeightUnit1 = value; }
        }
        public bool ShouldSerializeInventoryWeightUnit1()
        {
            return (_InventoryWeightUnit1.HasValue);
        }

        public string DefaultCountingUnit { get; set; }
        private decimal? _CountingItemsPerUnit;
        public decimal CountingItemsPerUnit
        {
            get { return _CountingItemsPerUnit.Value; }
            set { _CountingItemsPerUnit = value; }
        }
        public bool ShouldSerializeCountingItemsPerUnit()
        {
            return (_CountingItemsPerUnit.HasValue);
        }

        private int? _DefaultCountingUoMEntry;
        public int DefaultCountingUoMEntry
        {
            get { return _DefaultCountingUoMEntry.Value; }
            set { _DefaultCountingUoMEntry = value; }
        }
        public bool ShouldSerializeDefaultCountingUoMEntry()
        {
            return (_DefaultCountingUoMEntry.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Excisable;
        public SAPB1.BoYesNoEnum Excisable
        {
            get { return _Excisable.Value; }
            set { _Excisable = value; }
        }
        public bool ShouldSerializeExcisable()
        {
            return (_Excisable.HasValue);
        }

        private int? _ChapterID;
        public int ChapterID
        {
            get { return _ChapterID.Value; }
            set { _ChapterID = value; }
        }
        public bool ShouldSerializeChapterID()
        {
            return (_ChapterID.HasValue);
        }

        public string ScsCode { get; set; }
        private SAPB1.SpecialProductTypeEnum? _SpProdType;
        public SAPB1.SpecialProductTypeEnum SpProdType
        {
            get { return _SpProdType.Value; }
            set { _SpProdType = value; }
        }
        public bool ShouldSerializeSpProdType()
        {
            return (_SpProdType.HasValue);
        }

        private decimal? _ProdStdCost;
        public decimal ProdStdCost
        {
            get { return _ProdStdCost.Value; }
            set { _ProdStdCost = value; }
        }
        public bool ShouldSerializeProdStdCost()
        {
            return (_ProdStdCost.HasValue);
        }

        private SAPB1.BoYesNoEnum? _InCostRollup;
        public SAPB1.BoYesNoEnum InCostRollup
        {
            get { return _InCostRollup.Value; }
            set { _InCostRollup = value; }
        }
        public bool ShouldSerializeInCostRollup()
        {
            return (_InCostRollup.HasValue);
        }

        private SAPB1.BoYesNoEnum? _VirtualAssetItem;
        public SAPB1.BoYesNoEnum VirtualAssetItem
        {
            get { return _VirtualAssetItem.Value; }
            set { _VirtualAssetItem = value; }
        }
        public bool ShouldSerializeVirtualAssetItem()
        {
            return (_VirtualAssetItem.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnforceAssetSerialNumbers;
        public SAPB1.BoYesNoEnum EnforceAssetSerialNumbers
        {
            get { return _EnforceAssetSerialNumbers.Value; }
            set { _EnforceAssetSerialNumbers = value; }
        }
        public bool ShouldSerializeEnforceAssetSerialNumbers()
        {
            return (_EnforceAssetSerialNumbers.HasValue);
        }

        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ItemPrice> ItemPrices { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemWarehouseInfo> ItemWarehouseInfoCollection { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemPreferredVendor> ItemPreferredVendors { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemLocalizationInfo> ItemLocalizationInfos { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemProject> ItemProjects { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemDistributionRule> ItemDistributionRules { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemAttributeGroups> ItemAttributeGroups { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemDepreciationParameter> ItemDepreciationParameters { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemPeriodControl> ItemPeriodControls { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemUnitOfMeasurement> ItemUnitOfMeasurementCollection { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemBarCode> ItemBarCodeCollection { get; set; }
        public SAPB1.ItemIntrastatExtension ItemIntrastatExtension { get; set; }
    }

    public class ItemPrice
    {
        private int? _PriceList;
        public int PriceList
        {
            get { return _PriceList.Value; }
            set { _PriceList = value; }
        }
        public bool ShouldSerializePriceList()
        {
            return (_PriceList.HasValue);
        }

        private decimal? _Price;
        public decimal Price
        {
            get { return _Price.Value; }
            set { _Price = value; }
        }
        public bool ShouldSerializePrice()
        {
            return (_Price.HasValue);
        }

        public string Currency { get; set; }
        private decimal? _AdditionalPrice1;
        public decimal AdditionalPrice1
        {
            get { return _AdditionalPrice1.Value; }
            set { _AdditionalPrice1 = value; }
        }
        public bool ShouldSerializeAdditionalPrice1()
        {
            return (_AdditionalPrice1.HasValue);
        }

        public string AdditionalCurrency1 { get; set; }
        private decimal? _AdditionalPrice2;
        public decimal AdditionalPrice2
        {
            get { return _AdditionalPrice2.Value; }
            set { _AdditionalPrice2 = value; }
        }
        public bool ShouldSerializeAdditionalPrice2()
        {
            return (_AdditionalPrice2.HasValue);
        }

        public string AdditionalCurrency2 { get; set; }
        private int? _BasePriceList;
        public int BasePriceList
        {
            get { return _BasePriceList.Value; }
            set { _BasePriceList = value; }
        }
        public bool ShouldSerializeBasePriceList()
        {
            return (_BasePriceList.HasValue);
        }

        private decimal? _Factor;
        public decimal Factor
        {
            get { return _Factor.Value; }
            set { _Factor = value; }
        }
        public bool ShouldSerializeFactor()
        {
            return (_Factor.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.UoMPrice> UoMPrices { get; set; }
    }

    public class UoMPrice
    {
        private int? _PriceList;
        public int PriceList
        {
            get { return _PriceList.Value; }
            set { _PriceList = value; }
        }
        public bool ShouldSerializePriceList()
        {
            return (_PriceList.HasValue);
        }

        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

        private decimal? _ReduceBy;
        public decimal ReduceBy
        {
            get { return _ReduceBy.Value; }
            set { _ReduceBy = value; }
        }
        public bool ShouldSerializeReduceBy()
        {
            return (_ReduceBy.HasValue);
        }

        private decimal? _Price;
        public decimal Price
        {
            get { return _Price.Value; }
            set { _Price = value; }
        }
        public bool ShouldSerializePrice()
        {
            return (_Price.HasValue);
        }

        public string Currency { get; set; }
        private decimal? _AdditionalReduceBy1;
        public decimal AdditionalReduceBy1
        {
            get { return _AdditionalReduceBy1.Value; }
            set { _AdditionalReduceBy1 = value; }
        }
        public bool ShouldSerializeAdditionalReduceBy1()
        {
            return (_AdditionalReduceBy1.HasValue);
        }

        private decimal? _AdditionalPrice1;
        public decimal AdditionalPrice1
        {
            get { return _AdditionalPrice1.Value; }
            set { _AdditionalPrice1 = value; }
        }
        public bool ShouldSerializeAdditionalPrice1()
        {
            return (_AdditionalPrice1.HasValue);
        }

        public string AdditionalCurrency1 { get; set; }
        private decimal? _AdditionalReduceBy2;
        public decimal AdditionalReduceBy2
        {
            get { return _AdditionalReduceBy2.Value; }
            set { _AdditionalReduceBy2 = value; }
        }
        public bool ShouldSerializeAdditionalReduceBy2()
        {
            return (_AdditionalReduceBy2.HasValue);
        }

        private decimal? _AdditionalPrice2;
        public decimal AdditionalPrice2
        {
            get { return _AdditionalPrice2.Value; }
            set { _AdditionalPrice2 = value; }
        }
        public bool ShouldSerializeAdditionalPrice2()
        {
            return (_AdditionalPrice2.HasValue);
        }

        public string AdditionalCurrency2 { get; set; }
        private SAPB1.BoYesNoEnum? _Auto;
        public SAPB1.BoYesNoEnum Auto
        {
            get { return _Auto.Value; }
            set { _Auto = value; }
        }
        public bool ShouldSerializeAuto()
        {
            return (_Auto.HasValue);
        }

    }

    public class ItemWarehouseInfo
    {
        private decimal? _MinimalStock;
        public decimal MinimalStock
        {
            get { return _MinimalStock.Value; }
            set { _MinimalStock = value; }
        }
        public bool ShouldSerializeMinimalStock()
        {
            return (_MinimalStock.HasValue);
        }

        private decimal? _MaximalStock;
        public decimal MaximalStock
        {
            get { return _MaximalStock.Value; }
            set { _MaximalStock = value; }
        }
        public bool ShouldSerializeMaximalStock()
        {
            return (_MaximalStock.HasValue);
        }

        private decimal? _MinimalOrder;
        public decimal MinimalOrder
        {
            get { return _MinimalOrder.Value; }
            set { _MinimalOrder = value; }
        }
        public bool ShouldSerializeMinimalOrder()
        {
            return (_MinimalOrder.HasValue);
        }

        private decimal? _StandardAveragePrice;
        public decimal StandardAveragePrice
        {
            get { return _StandardAveragePrice.Value; }
            set { _StandardAveragePrice = value; }
        }
        public bool ShouldSerializeStandardAveragePrice()
        {
            return (_StandardAveragePrice.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Locked;
        public SAPB1.BoYesNoEnum Locked
        {
            get { return _Locked.Value; }
            set { _Locked = value; }
        }
        public bool ShouldSerializeLocked()
        {
            return (_Locked.HasValue);
        }

        public string InventoryAccount { get; set; }
        public string CostAccount { get; set; }
        public string TransferAccount { get; set; }
        public string RevenuesAccount { get; set; }
        public string VarienceAccount { get; set; }
        public string DecreasingAccount { get; set; }
        public string IncreasingAccount { get; set; }
        public string ReturningAccount { get; set; }
        public string ExpensesAccount { get; set; }
        public string EURevenuesAccount { get; set; }
        public string EUExpensesAccount { get; set; }
        public string ForeignRevenueAcc { get; set; }
        public string ForeignExpensAcc { get; set; }
        public string ExemptIncomeAcc { get; set; }
        public string PriceDifferenceAcc { get; set; }
        public string WarehouseCode { get; set; }
        private decimal? _InStock;
        public decimal InStock
        {
            get { return _InStock.Value; }
            set { _InStock = value; }
        }
        public bool ShouldSerializeInStock()
        {
            return (_InStock.HasValue);
        }

        private decimal? _Committed;
        public decimal Committed
        {
            get { return _Committed.Value; }
            set { _Committed = value; }
        }
        public bool ShouldSerializeCommitted()
        {
            return (_Committed.HasValue);
        }

        private decimal? _Ordered;
        public decimal Ordered
        {
            get { return _Ordered.Value; }
            set { _Ordered = value; }
        }
        public bool ShouldSerializeOrdered()
        {
            return (_Ordered.HasValue);
        }

        private decimal? _CountedQuantity;
        public decimal CountedQuantity
        {
            get { return _CountedQuantity.Value; }
            set { _CountedQuantity = value; }
        }
        public bool ShouldSerializeCountedQuantity()
        {
            return (_CountedQuantity.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WasCounted;
        public SAPB1.BoYesNoEnum WasCounted
        {
            get { return _WasCounted.Value; }
            set { _WasCounted = value; }
        }
        public bool ShouldSerializeWasCounted()
        {
            return (_WasCounted.HasValue);
        }

        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        private decimal? _Counted;
        public decimal Counted
        {
            get { return _Counted.Value; }
            set { _Counted = value; }
        }
        public bool ShouldSerializeCounted()
        {
            return (_Counted.HasValue);
        }

        public string ExpenseClearingAct { get; set; }
        public string PurchaseCreditAcc { get; set; }
        public string EUPurchaseCreditAcc { get; set; }
        public string ForeignPurchaseCreditAcc { get; set; }
        public string SalesCreditAcc { get; set; }
        public string SalesCreditEUAcc { get; set; }
        public string ExemptedCredits { get; set; }
        public string SalesCreditForeignAcc { get; set; }
        public string ExpenseOffsettingAccount { get; set; }
        public string WipAccount { get; set; }
        public string ExchangeRateDifferencesAcct { get; set; }
        public string GoodsClearingAcct { get; set; }
        public string NegativeInventoryAdjustmentAccount { get; set; }
        public string CostInflationOffsetAccount { get; set; }
        public string GLDecreaseAcct { get; set; }
        public string GLIncreaseAcct { get; set; }
        public string PAReturnAcct { get; set; }
        public string PurchaseAcct { get; set; }
        public string PurchaseOffsetAcct { get; set; }
        public string ShippedGoodsAccount { get; set; }
        public string StockInflationOffsetAccount { get; set; }
        public string StockInflationAdjustAccount { get; set; }
        public string VATInRevenueAccount { get; set; }
        public string WipVarianceAccount { get; set; }
        public string CostInflationAccount { get; set; }
        public string WHIncomingCenvatAccount { get; set; }
        public string WHOutgoingCenvatAccount { get; set; }
        public string StockInTransitAccount { get; set; }
        public string WipOffsetProfitAndLossAccount { get; set; }
        public string InventoryOffsetProfitAndLossAccount { get; set; }
        private int? _DefaultBin;
        public int DefaultBin
        {
            get { return _DefaultBin.Value; }
            set { _DefaultBin = value; }
        }
        public bool ShouldSerializeDefaultBin()
        {
            return (_DefaultBin.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DefaultBinEnforced;
        public SAPB1.BoYesNoEnum DefaultBinEnforced
        {
            get { return _DefaultBinEnforced.Value; }
            set { _DefaultBinEnforced = value; }
        }
        public bool ShouldSerializeDefaultBinEnforced()
        {
            return (_DefaultBinEnforced.HasValue);
        }

        public string PurchaseBalanceAccount { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemCycleCount> ItemCycleCounts { get; set; }
    }

    public class ItemCycleCount
    {
        private int? _CycleCode;
        public int CycleCode
        {
            get { return _CycleCode.Value; }
            set { _CycleCode = value; }
        }
        public bool ShouldSerializeCycleCode()
        {
            return (_CycleCode.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Alert;
        public SAPB1.BoYesNoEnum Alert
        {
            get { return _Alert.Value; }
            set { _Alert = value; }
        }
        public bool ShouldSerializeAlert()
        {
            return (_Alert.HasValue);
        }

        private DateTime? _NextCountingDate;
        public DateTime NextCountingDate
        {
            get { return _NextCountingDate.Value; }
            set { _NextCountingDate = value; }
        }
        public bool ShouldSerializeNextCountingDate()
        {
            return (_NextCountingDate.HasValue);
        }

        private TimeSpan? _AlertTime;
        public TimeSpan AlertTime
        {
            get { return _AlertTime.Value; }
            set { _AlertTime = value; }
        }
        public bool ShouldSerializeAlertTime()
        {
            return (_AlertTime.HasValue);
        }

        private int? _DestinationUser;
        public int DestinationUser
        {
            get { return _DestinationUser.Value; }
            set { _DestinationUser = value; }
        }
        public bool ShouldSerializeDestinationUser()
        {
            return (_DestinationUser.HasValue);
        }

        public string WarehouseCode { get; set; }
    }

    public class ItemPreferredVendor
    {
        public string BPCode { get; set; }
    }

    public class ItemLocalizationInfo
    {
        public string ItemCode { get; set; }
        public string IncomeNature { get; set; }
    }

    public class ItemProject
    {
        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        private DateTime? _ValidFrom;
        public DateTime ValidFrom
        {
            get { return _ValidFrom.Value; }
            set { _ValidFrom = value; }
        }
        public bool ShouldSerializeValidFrom()
        {
            return (_ValidFrom.HasValue);
        }

        private DateTime? _ValidTo;
        public DateTime ValidTo
        {
            get { return _ValidTo.Value; }
            set { _ValidTo = value; }
        }
        public bool ShouldSerializeValidTo()
        {
            return (_ValidTo.HasValue);
        }

        public string Project { get; set; }
    }

    public class ItemDistributionRule
    {
        public string LineNumber { get; set; }
        private DateTime? _ValidFrom;
        public DateTime ValidFrom
        {
            get { return _ValidFrom.Value; }
            set { _ValidFrom = value; }
        }
        public bool ShouldSerializeValidFrom()
        {
            return (_ValidFrom.HasValue);
        }

        private DateTime? _ValidTo;
        public DateTime ValidTo
        {
            get { return _ValidTo.Value; }
            set { _ValidTo = value; }
        }
        public bool ShouldSerializeValidTo()
        {
            return (_ValidTo.HasValue);
        }

        public string DistributionRule { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
    }

    public class ItemAttributeGroups
    {
        public string Attribute1 { get; set; }
        public string Attribute2 { get; set; }
        public string Attribute3 { get; set; }
        public string Attribute4 { get; set; }
        public string Attribute5 { get; set; }
        public string Attribute6 { get; set; }
        public string Attribute7 { get; set; }
        public string Attribute8 { get; set; }
        public string Attribute9 { get; set; }
        public string Attribute10 { get; set; }
        public string Attribute11 { get; set; }
        public string Attribute12 { get; set; }
        public string Attribute13 { get; set; }
        public string Attribute14 { get; set; }
        public string Attribute15 { get; set; }
        public string Attribute16 { get; set; }
        public string Attribute17 { get; set; }
        public string Attribute18 { get; set; }
        public string Attribute19 { get; set; }
        public string Attribute20 { get; set; }
        public string Attribute21 { get; set; }
        public string Attribute22 { get; set; }
        public string Attribute23 { get; set; }
        public string Attribute24 { get; set; }
        public string Attribute25 { get; set; }
        public string Attribute26 { get; set; }
        public string Attribute27 { get; set; }
        public string Attribute28 { get; set; }
        public string Attribute29 { get; set; }
        public string Attribute30 { get; set; }
        public string Attribute31 { get; set; }
        public string Attribute32 { get; set; }
        private int? _Attribute33;
        public int Attribute33
        {
            get { return _Attribute33.Value; }
            set { _Attribute33 = value; }
        }
        public bool ShouldSerializeAttribute33()
        {
            return (_Attribute33.HasValue);
        }

        private int? _Attribute34;
        public int Attribute34
        {
            get { return _Attribute34.Value; }
            set { _Attribute34 = value; }
        }
        public bool ShouldSerializeAttribute34()
        {
            return (_Attribute34.HasValue);
        }

        private int? _Attribute35;
        public int Attribute35
        {
            get { return _Attribute35.Value; }
            set { _Attribute35 = value; }
        }
        public bool ShouldSerializeAttribute35()
        {
            return (_Attribute35.HasValue);
        }

        private int? _Attribute36;
        public int Attribute36
        {
            get { return _Attribute36.Value; }
            set { _Attribute36 = value; }
        }
        public bool ShouldSerializeAttribute36()
        {
            return (_Attribute36.HasValue);
        }

        private int? _Attribute37;
        public int Attribute37
        {
            get { return _Attribute37.Value; }
            set { _Attribute37 = value; }
        }
        public bool ShouldSerializeAttribute37()
        {
            return (_Attribute37.HasValue);
        }

        private int? _Attribute38;
        public int Attribute38
        {
            get { return _Attribute38.Value; }
            set { _Attribute38 = value; }
        }
        public bool ShouldSerializeAttribute38()
        {
            return (_Attribute38.HasValue);
        }

        private int? _Attribute39;
        public int Attribute39
        {
            get { return _Attribute39.Value; }
            set { _Attribute39 = value; }
        }
        public bool ShouldSerializeAttribute39()
        {
            return (_Attribute39.HasValue);
        }

        private int? _Attribute40;
        public int Attribute40
        {
            get { return _Attribute40.Value; }
            set { _Attribute40 = value; }
        }
        public bool ShouldSerializeAttribute40()
        {
            return (_Attribute40.HasValue);
        }

        private int? _Attribute41;
        public int Attribute41
        {
            get { return _Attribute41.Value; }
            set { _Attribute41 = value; }
        }
        public bool ShouldSerializeAttribute41()
        {
            return (_Attribute41.HasValue);
        }

        private int? _Attribute42;
        public int Attribute42
        {
            get { return _Attribute42.Value; }
            set { _Attribute42 = value; }
        }
        public bool ShouldSerializeAttribute42()
        {
            return (_Attribute42.HasValue);
        }

        private DateTime? _Attribute43;
        public DateTime Attribute43
        {
            get { return _Attribute43.Value; }
            set { _Attribute43 = value; }
        }
        public bool ShouldSerializeAttribute43()
        {
            return (_Attribute43.HasValue);
        }

        private DateTime? _Attribute44;
        public DateTime Attribute44
        {
            get { return _Attribute44.Value; }
            set { _Attribute44 = value; }
        }
        public bool ShouldSerializeAttribute44()
        {
            return (_Attribute44.HasValue);
        }

        private DateTime? _Attribute45;
        public DateTime Attribute45
        {
            get { return _Attribute45.Value; }
            set { _Attribute45 = value; }
        }
        public bool ShouldSerializeAttribute45()
        {
            return (_Attribute45.HasValue);
        }

        private DateTime? _Attribute46;
        public DateTime Attribute46
        {
            get { return _Attribute46.Value; }
            set { _Attribute46 = value; }
        }
        public bool ShouldSerializeAttribute46()
        {
            return (_Attribute46.HasValue);
        }

        private DateTime? _Attribute47;
        public DateTime Attribute47
        {
            get { return _Attribute47.Value; }
            set { _Attribute47 = value; }
        }
        public bool ShouldSerializeAttribute47()
        {
            return (_Attribute47.HasValue);
        }

        private decimal? _Attribute48;
        public decimal Attribute48
        {
            get { return _Attribute48.Value; }
            set { _Attribute48 = value; }
        }
        public bool ShouldSerializeAttribute48()
        {
            return (_Attribute48.HasValue);
        }

        private decimal? _Attribute49;
        public decimal Attribute49
        {
            get { return _Attribute49.Value; }
            set { _Attribute49 = value; }
        }
        public bool ShouldSerializeAttribute49()
        {
            return (_Attribute49.HasValue);
        }

        private decimal? _Attribute50;
        public decimal Attribute50
        {
            get { return _Attribute50.Value; }
            set { _Attribute50 = value; }
        }
        public bool ShouldSerializeAttribute50()
        {
            return (_Attribute50.HasValue);
        }

        private decimal? _Attribute51;
        public decimal Attribute51
        {
            get { return _Attribute51.Value; }
            set { _Attribute51 = value; }
        }
        public bool ShouldSerializeAttribute51()
        {
            return (_Attribute51.HasValue);
        }

        private decimal? _Attribute52;
        public decimal Attribute52
        {
            get { return _Attribute52.Value; }
            set { _Attribute52 = value; }
        }
        public bool ShouldSerializeAttribute52()
        {
            return (_Attribute52.HasValue);
        }

        private decimal? _Attribute53;
        public decimal Attribute53
        {
            get { return _Attribute53.Value; }
            set { _Attribute53 = value; }
        }
        public bool ShouldSerializeAttribute53()
        {
            return (_Attribute53.HasValue);
        }

        private decimal? _Attribute54;
        public decimal Attribute54
        {
            get { return _Attribute54.Value; }
            set { _Attribute54 = value; }
        }
        public bool ShouldSerializeAttribute54()
        {
            return (_Attribute54.HasValue);
        }

        private decimal? _Attribute55;
        public decimal Attribute55
        {
            get { return _Attribute55.Value; }
            set { _Attribute55 = value; }
        }
        public bool ShouldSerializeAttribute55()
        {
            return (_Attribute55.HasValue);
        }

        private decimal? _Attribute56;
        public decimal Attribute56
        {
            get { return _Attribute56.Value; }
            set { _Attribute56 = value; }
        }
        public bool ShouldSerializeAttribute56()
        {
            return (_Attribute56.HasValue);
        }

        private decimal? _Attribute57;
        public decimal Attribute57
        {
            get { return _Attribute57.Value; }
            set { _Attribute57 = value; }
        }
        public bool ShouldSerializeAttribute57()
        {
            return (_Attribute57.HasValue);
        }

        private decimal? _Attribute58;
        public decimal Attribute58
        {
            get { return _Attribute58.Value; }
            set { _Attribute58 = value; }
        }
        public bool ShouldSerializeAttribute58()
        {
            return (_Attribute58.HasValue);
        }

        private decimal? _Attribute59;
        public decimal Attribute59
        {
            get { return _Attribute59.Value; }
            set { _Attribute59 = value; }
        }
        public bool ShouldSerializeAttribute59()
        {
            return (_Attribute59.HasValue);
        }

        private decimal? _Attribute60;
        public decimal Attribute60
        {
            get { return _Attribute60.Value; }
            set { _Attribute60 = value; }
        }
        public bool ShouldSerializeAttribute60()
        {
            return (_Attribute60.HasValue);
        }

        private decimal? _Attribute61;
        public decimal Attribute61
        {
            get { return _Attribute61.Value; }
            set { _Attribute61 = value; }
        }
        public bool ShouldSerializeAttribute61()
        {
            return (_Attribute61.HasValue);
        }

        private decimal? _Attribute62;
        public decimal Attribute62
        {
            get { return _Attribute62.Value; }
            set { _Attribute62 = value; }
        }
        public bool ShouldSerializeAttribute62()
        {
            return (_Attribute62.HasValue);
        }

        private decimal? _Attribute63;
        public decimal Attribute63
        {
            get { return _Attribute63.Value; }
            set { _Attribute63 = value; }
        }
        public bool ShouldSerializeAttribute63()
        {
            return (_Attribute63.HasValue);
        }

        private decimal? _Attribute64;
        public decimal Attribute64
        {
            get { return _Attribute64.Value; }
            set { _Attribute64 = value; }
        }
        public bool ShouldSerializeAttribute64()
        {
            return (_Attribute64.HasValue);
        }

    }

    public class ItemDepreciationParameter
    {
        public string FiscalYear { get; set; }
        public string DepreciationArea { get; set; }
        private DateTime? _DepreciationStartDate;
        public DateTime DepreciationStartDate
        {
            get { return _DepreciationStartDate.Value; }
            set { _DepreciationStartDate = value; }
        }
        public bool ShouldSerializeDepreciationStartDate()
        {
            return (_DepreciationStartDate.HasValue);
        }

        private DateTime? _DepreciationEndDate;
        public DateTime DepreciationEndDate
        {
            get { return _DepreciationEndDate.Value; }
            set { _DepreciationEndDate = value; }
        }
        public bool ShouldSerializeDepreciationEndDate()
        {
            return (_DepreciationEndDate.HasValue);
        }

        private int? _UsefulLife;
        public int UsefulLife
        {
            get { return _UsefulLife.Value; }
            set { _UsefulLife = value; }
        }
        public bool ShouldSerializeUsefulLife()
        {
            return (_UsefulLife.HasValue);
        }

        private decimal? _RemainingLife;
        public decimal RemainingLife
        {
            get { return _RemainingLife.Value; }
            set { _RemainingLife = value; }
        }
        public bool ShouldSerializeRemainingLife()
        {
            return (_RemainingLife.HasValue);
        }

        public string DepreciationType { get; set; }
        private int? _TotalUnitsInUsefulLife;
        public int TotalUnitsInUsefulLife
        {
            get { return _TotalUnitsInUsefulLife.Value; }
            set { _TotalUnitsInUsefulLife = value; }
        }
        public bool ShouldSerializeTotalUnitsInUsefulLife()
        {
            return (_TotalUnitsInUsefulLife.HasValue);
        }

        private int? _RemainingUnits;
        public int RemainingUnits
        {
            get { return _RemainingUnits.Value; }
            set { _RemainingUnits = value; }
        }
        public bool ShouldSerializeRemainingUnits()
        {
            return (_RemainingUnits.HasValue);
        }

        private int? _StandardUnits;
        public int StandardUnits
        {
            get { return _StandardUnits.Value; }
            set { _StandardUnits = value; }
        }
        public bool ShouldSerializeStandardUnits()
        {
            return (_StandardUnits.HasValue);
        }

    }

    public class ItemPeriodControl
    {
        public string FiscalYear { get; set; }
        public string DepreciationArea { get; set; }
        private int? _SubPeriod;
        public int SubPeriod
        {
            get { return _SubPeriod.Value; }
            set { _SubPeriod = value; }
        }
        public bool ShouldSerializeSubPeriod()
        {
            return (_SubPeriod.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DepreciationStatus;
        public SAPB1.BoYesNoEnum DepreciationStatus
        {
            get { return _DepreciationStatus.Value; }
            set { _DepreciationStatus = value; }
        }
        public bool ShouldSerializeDepreciationStatus()
        {
            return (_DepreciationStatus.HasValue);
        }

        private decimal? _Factor;
        public decimal Factor
        {
            get { return _Factor.Value; }
            set { _Factor = value; }
        }
        public bool ShouldSerializeFactor()
        {
            return (_Factor.HasValue);
        }

        private int? _ActualUnits;
        public int ActualUnits
        {
            get { return _ActualUnits.Value; }
            set { _ActualUnits = value; }
        }
        public bool ShouldSerializeActualUnits()
        {
            return (_ActualUnits.HasValue);
        }

    }

    public class ItemUnitOfMeasurement
    {
        private SAPB1.ItemUoMTypeEnum? _UoMType;
        public SAPB1.ItemUoMTypeEnum UoMType
        {
            get { return _UoMType.Value; }
            set { _UoMType = value; }
        }
        public bool ShouldSerializeUoMType()
        {
            return (_UoMType.HasValue);
        }

        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

        private int? _DefaultBarcode;
        public int DefaultBarcode
        {
            get { return _DefaultBarcode.Value; }
            set { _DefaultBarcode = value; }
        }
        public bool ShouldSerializeDefaultBarcode()
        {
            return (_DefaultBarcode.HasValue);
        }

        private int? _DefaultPackage;
        public int DefaultPackage
        {
            get { return _DefaultPackage.Value; }
            set { _DefaultPackage = value; }
        }
        public bool ShouldSerializeDefaultPackage()
        {
            return (_DefaultPackage.HasValue);
        }

        private decimal? _Length1;
        public decimal Length1
        {
            get { return _Length1.Value; }
            set { _Length1 = value; }
        }
        public bool ShouldSerializeLength1()
        {
            return (_Length1.HasValue);
        }

        private int? _Length1Unit;
        public int Length1Unit
        {
            get { return _Length1Unit.Value; }
            set { _Length1Unit = value; }
        }
        public bool ShouldSerializeLength1Unit()
        {
            return (_Length1Unit.HasValue);
        }

        private decimal? _Length2;
        public decimal Length2
        {
            get { return _Length2.Value; }
            set { _Length2 = value; }
        }
        public bool ShouldSerializeLength2()
        {
            return (_Length2.HasValue);
        }

        private int? _Length2Unit;
        public int Length2Unit
        {
            get { return _Length2Unit.Value; }
            set { _Length2Unit = value; }
        }
        public bool ShouldSerializeLength2Unit()
        {
            return (_Length2Unit.HasValue);
        }

        private decimal? _Width1;
        public decimal Width1
        {
            get { return _Width1.Value; }
            set { _Width1 = value; }
        }
        public bool ShouldSerializeWidth1()
        {
            return (_Width1.HasValue);
        }

        private int? _Width1Unit;
        public int Width1Unit
        {
            get { return _Width1Unit.Value; }
            set { _Width1Unit = value; }
        }
        public bool ShouldSerializeWidth1Unit()
        {
            return (_Width1Unit.HasValue);
        }

        private decimal? _Width2;
        public decimal Width2
        {
            get { return _Width2.Value; }
            set { _Width2 = value; }
        }
        public bool ShouldSerializeWidth2()
        {
            return (_Width2.HasValue);
        }

        private int? _Width2Unit;
        public int Width2Unit
        {
            get { return _Width2Unit.Value; }
            set { _Width2Unit = value; }
        }
        public bool ShouldSerializeWidth2Unit()
        {
            return (_Width2Unit.HasValue);
        }

        private decimal? _Height1;
        public decimal Height1
        {
            get { return _Height1.Value; }
            set { _Height1 = value; }
        }
        public bool ShouldSerializeHeight1()
        {
            return (_Height1.HasValue);
        }

        private int? _Height1Unit;
        public int Height1Unit
        {
            get { return _Height1Unit.Value; }
            set { _Height1Unit = value; }
        }
        public bool ShouldSerializeHeight1Unit()
        {
            return (_Height1Unit.HasValue);
        }

        private decimal? _Height2;
        public decimal Height2
        {
            get { return _Height2.Value; }
            set { _Height2 = value; }
        }
        public bool ShouldSerializeHeight2()
        {
            return (_Height2.HasValue);
        }

        private int? _Height2Unit;
        public int Height2Unit
        {
            get { return _Height2Unit.Value; }
            set { _Height2Unit = value; }
        }
        public bool ShouldSerializeHeight2Unit()
        {
            return (_Height2Unit.HasValue);
        }

        private decimal? _Volume;
        public decimal Volume
        {
            get { return _Volume.Value; }
            set { _Volume = value; }
        }
        public bool ShouldSerializeVolume()
        {
            return (_Volume.HasValue);
        }

        private int? _VolumeUnit;
        public int VolumeUnit
        {
            get { return _VolumeUnit.Value; }
            set { _VolumeUnit = value; }
        }
        public bool ShouldSerializeVolumeUnit()
        {
            return (_VolumeUnit.HasValue);
        }

        private decimal? _Weight1;
        public decimal Weight1
        {
            get { return _Weight1.Value; }
            set { _Weight1 = value; }
        }
        public bool ShouldSerializeWeight1()
        {
            return (_Weight1.HasValue);
        }

        private int? _Weight1Unit;
        public int Weight1Unit
        {
            get { return _Weight1Unit.Value; }
            set { _Weight1Unit = value; }
        }
        public bool ShouldSerializeWeight1Unit()
        {
            return (_Weight1Unit.HasValue);
        }

        private decimal? _Weight2;
        public decimal Weight2
        {
            get { return _Weight2.Value; }
            set { _Weight2 = value; }
        }
        public bool ShouldSerializeWeight2()
        {
            return (_Weight2.HasValue);
        }

        private int? _Weight2Unit;
        public int Weight2Unit
        {
            get { return _Weight2Unit.Value; }
            set { _Weight2Unit = value; }
        }
        public bool ShouldSerializeWeight2Unit()
        {
            return (_Weight2Unit.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ItemUoMPackage> ItemUoMPackageCollection { get; set; }
    }

    public class ItemUoMPackage
    {
        private SAPB1.ItemUoMTypeEnum? _UoMType;
        public SAPB1.ItemUoMTypeEnum UoMType
        {
            get { return _UoMType.Value; }
            set { _UoMType = value; }
        }
        public bool ShouldSerializeUoMType()
        {
            return (_UoMType.HasValue);
        }

        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

        private int? _PackageTypeEntry;
        public int PackageTypeEntry
        {
            get { return _PackageTypeEntry.Value; }
            set { _PackageTypeEntry = value; }
        }
        public bool ShouldSerializePackageTypeEntry()
        {
            return (_PackageTypeEntry.HasValue);
        }

        private decimal? _Length1;
        public decimal Length1
        {
            get { return _Length1.Value; }
            set { _Length1 = value; }
        }
        public bool ShouldSerializeLength1()
        {
            return (_Length1.HasValue);
        }

        private int? _Length1Unit;
        public int Length1Unit
        {
            get { return _Length1Unit.Value; }
            set { _Length1Unit = value; }
        }
        public bool ShouldSerializeLength1Unit()
        {
            return (_Length1Unit.HasValue);
        }

        private decimal? _Length2;
        public decimal Length2
        {
            get { return _Length2.Value; }
            set { _Length2 = value; }
        }
        public bool ShouldSerializeLength2()
        {
            return (_Length2.HasValue);
        }

        private int? _Length2Unit;
        public int Length2Unit
        {
            get { return _Length2Unit.Value; }
            set { _Length2Unit = value; }
        }
        public bool ShouldSerializeLength2Unit()
        {
            return (_Length2Unit.HasValue);
        }

        private decimal? _Width1;
        public decimal Width1
        {
            get { return _Width1.Value; }
            set { _Width1 = value; }
        }
        public bool ShouldSerializeWidth1()
        {
            return (_Width1.HasValue);
        }

        private int? _Width1Unit;
        public int Width1Unit
        {
            get { return _Width1Unit.Value; }
            set { _Width1Unit = value; }
        }
        public bool ShouldSerializeWidth1Unit()
        {
            return (_Width1Unit.HasValue);
        }

        private decimal? _Width2;
        public decimal Width2
        {
            get { return _Width2.Value; }
            set { _Width2 = value; }
        }
        public bool ShouldSerializeWidth2()
        {
            return (_Width2.HasValue);
        }

        private int? _Width2Unit;
        public int Width2Unit
        {
            get { return _Width2Unit.Value; }
            set { _Width2Unit = value; }
        }
        public bool ShouldSerializeWidth2Unit()
        {
            return (_Width2Unit.HasValue);
        }

        private decimal? _Height1;
        public decimal Height1
        {
            get { return _Height1.Value; }
            set { _Height1 = value; }
        }
        public bool ShouldSerializeHeight1()
        {
            return (_Height1.HasValue);
        }

        private int? _Height1Unit;
        public int Height1Unit
        {
            get { return _Height1Unit.Value; }
            set { _Height1Unit = value; }
        }
        public bool ShouldSerializeHeight1Unit()
        {
            return (_Height1Unit.HasValue);
        }

        private decimal? _Height2;
        public decimal Height2
        {
            get { return _Height2.Value; }
            set { _Height2 = value; }
        }
        public bool ShouldSerializeHeight2()
        {
            return (_Height2.HasValue);
        }

        private int? _Height2Unit;
        public int Height2Unit
        {
            get { return _Height2Unit.Value; }
            set { _Height2Unit = value; }
        }
        public bool ShouldSerializeHeight2Unit()
        {
            return (_Height2Unit.HasValue);
        }

        private decimal? _Volume;
        public decimal Volume
        {
            get { return _Volume.Value; }
            set { _Volume = value; }
        }
        public bool ShouldSerializeVolume()
        {
            return (_Volume.HasValue);
        }

        private int? _VolumeUnit;
        public int VolumeUnit
        {
            get { return _VolumeUnit.Value; }
            set { _VolumeUnit = value; }
        }
        public bool ShouldSerializeVolumeUnit()
        {
            return (_VolumeUnit.HasValue);
        }

        private decimal? _Weight1;
        public decimal Weight1
        {
            get { return _Weight1.Value; }
            set { _Weight1 = value; }
        }
        public bool ShouldSerializeWeight1()
        {
            return (_Weight1.HasValue);
        }

        private int? _Weight1Unit;
        public int Weight1Unit
        {
            get { return _Weight1Unit.Value; }
            set { _Weight1Unit = value; }
        }
        public bool ShouldSerializeWeight1Unit()
        {
            return (_Weight1Unit.HasValue);
        }

        private decimal? _Weight2;
        public decimal Weight2
        {
            get { return _Weight2.Value; }
            set { _Weight2 = value; }
        }
        public bool ShouldSerializeWeight2()
        {
            return (_Weight2.HasValue);
        }

        private int? _Weight2Unit;
        public int Weight2Unit
        {
            get { return _Weight2Unit.Value; }
            set { _Weight2Unit = value; }
        }
        public bool ShouldSerializeWeight2Unit()
        {
            return (_Weight2Unit.HasValue);
        }

        private decimal? _QuantityPerPackage;
        public decimal QuantityPerPackage
        {
            get { return _QuantityPerPackage.Value; }
            set { _QuantityPerPackage = value; }
        }
        public bool ShouldSerializeQuantityPerPackage()
        {
            return (_QuantityPerPackage.HasValue);
        }

    }

    public class ItemBarCode
    {
        private int? _AbsEntry;
        public int AbsEntry
        {
            get { return _AbsEntry.Value; }
            set { _AbsEntry = value; }
        }
        public bool ShouldSerializeAbsEntry()
        {
            return (_AbsEntry.HasValue);
        }

        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

        public string Barcode { get; set; }
        public string FreeText { get; set; }
    }

    public class ItemIntrastatExtension
    {
        public string ItemCode { get; set; }
        private int? _CommodityCode;
        public int CommodityCode
        {
            get { return _CommodityCode.Value; }
            set { _CommodityCode = value; }
        }
        public bool ShouldSerializeCommodityCode()
        {
            return (_CommodityCode.HasValue);
        }

        private int? _SupplementaryUnit;
        public int SupplementaryUnit
        {
            get { return _SupplementaryUnit.Value; }
            set { _SupplementaryUnit = value; }
        }
        public bool ShouldSerializeSupplementaryUnit()
        {
            return (_SupplementaryUnit.HasValue);
        }

        private decimal? _FactorOfSupplementaryUnit;
        public decimal FactorOfSupplementaryUnit
        {
            get { return _FactorOfSupplementaryUnit.Value; }
            set { _FactorOfSupplementaryUnit = value; }
        }
        public bool ShouldSerializeFactorOfSupplementaryUnit()
        {
            return (_FactorOfSupplementaryUnit.HasValue);
        }

        private int? _ImportRegionState;
        public int ImportRegionState
        {
            get { return _ImportRegionState.Value; }
            set { _ImportRegionState = value; }
        }
        public bool ShouldSerializeImportRegionState()
        {
            return (_ImportRegionState.HasValue);
        }

        private int? _ExportRegionState;
        public int ExportRegionState
        {
            get { return _ExportRegionState.Value; }
            set { _ExportRegionState = value; }
        }
        public bool ShouldSerializeExportRegionState()
        {
            return (_ExportRegionState.HasValue);
        }

        private int? _ImportNatureOfTransaction;
        public int ImportNatureOfTransaction
        {
            get { return _ImportNatureOfTransaction.Value; }
            set { _ImportNatureOfTransaction = value; }
        }
        public bool ShouldSerializeImportNatureOfTransaction()
        {
            return (_ImportNatureOfTransaction.HasValue);
        }

        private int? _ExportNatureOfTransaction;
        public int ExportNatureOfTransaction
        {
            get { return _ExportNatureOfTransaction.Value; }
            set { _ExportNatureOfTransaction = value; }
        }
        public bool ShouldSerializeExportNatureOfTransaction()
        {
            return (_ExportNatureOfTransaction.HasValue);
        }

        private int? _ImportStatisticalProcedure;
        public int ImportStatisticalProcedure
        {
            get { return _ImportStatisticalProcedure.Value; }
            set { _ImportStatisticalProcedure = value; }
        }
        public bool ShouldSerializeImportStatisticalProcedure()
        {
            return (_ImportStatisticalProcedure.HasValue);
        }

        private int? _ExportStatisticalProcedure;
        public int ExportStatisticalProcedure
        {
            get { return _ExportStatisticalProcedure.Value; }
            set { _ExportStatisticalProcedure = value; }
        }
        public bool ShouldSerializeExportStatisticalProcedure()
        {
            return (_ExportStatisticalProcedure.HasValue);
        }

        public string CountryOfOrigin { get; set; }
        private int? _ServiceCode;
        public int ServiceCode
        {
            get { return _ServiceCode.Value; }
            set { _ServiceCode = value; }
        }
        public bool ShouldSerializeServiceCode()
        {
            return (_ServiceCode.HasValue);
        }

        private SAPB1.BoDocumentTypes? _Type;
        public SAPB1.BoDocumentTypes Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

        private SAPB1.BoServiceSupplyMethods? _ServiceSupplyMethod;
        public SAPB1.BoServiceSupplyMethods ServiceSupplyMethod
        {
            get { return _ServiceSupplyMethod.Value; }
            set { _ServiceSupplyMethod = value; }
        }
        public bool ShouldSerializeServiceSupplyMethod()
        {
            return (_ServiceSupplyMethod.HasValue);
        }

        private SAPB1.BoServicePaymentMethods? _ServicePaymentMethod;
        public SAPB1.BoServicePaymentMethods ServicePaymentMethod
        {
            get { return _ServicePaymentMethod.Value; }
            set { _ServicePaymentMethod = value; }
        }
        public bool ShouldSerializeServicePaymentMethod()
        {
            return (_ServicePaymentMethod.HasValue);
        }

        public string ImportRegionCountry { get; set; }
        public string ExportRegionCountry { get; set; }
        private SAPB1.BoYesNoEnum? _UseWeightInCalculation;
        public SAPB1.BoYesNoEnum UseWeightInCalculation
        {
            get { return _UseWeightInCalculation.Value; }
            set { _UseWeightInCalculation = value; }
        }
        public bool ShouldSerializeUseWeightInCalculation()
        {
            return (_UseWeightInCalculation.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IntrastatRelevant;
        public SAPB1.BoYesNoEnum IntrastatRelevant
        {
            get { return _IntrastatRelevant.Value; }
            set { _IntrastatRelevant = value; }
        }
        public bool ShouldSerializeIntrastatRelevant()
        {
            return (_IntrastatRelevant.HasValue);
        }

        public string StatisticalCode { get; set; }
    }

    public class PaymentTermsType
    {
        private int? _GroupNumber;
        public int GroupNumber
        {
            get { return _GroupNumber.Value; }
            set { _GroupNumber = value; }
        }
        public bool ShouldSerializeGroupNumber()
        {
            return (_GroupNumber.HasValue);
        }

        public string PaymentTermsGroupName { get; set; }
        private SAPB1.BoPayTermDueTypes? _StartFrom;
        public SAPB1.BoPayTermDueTypes StartFrom
        {
            get { return _StartFrom.Value; }
            set { _StartFrom = value; }
        }
        public bool ShouldSerializeStartFrom()
        {
            return (_StartFrom.HasValue);
        }

        private int? _NumberOfAdditionalMonths;
        public int NumberOfAdditionalMonths
        {
            get { return _NumberOfAdditionalMonths.Value; }
            set { _NumberOfAdditionalMonths = value; }
        }
        public bool ShouldSerializeNumberOfAdditionalMonths()
        {
            return (_NumberOfAdditionalMonths.HasValue);
        }

        private int? _NumberOfAdditionalDays;
        public int NumberOfAdditionalDays
        {
            get { return _NumberOfAdditionalDays.Value; }
            set { _NumberOfAdditionalDays = value; }
        }
        public bool ShouldSerializeNumberOfAdditionalDays()
        {
            return (_NumberOfAdditionalDays.HasValue);
        }

        private decimal? _CreditLimit;
        public decimal CreditLimit
        {
            get { return _CreditLimit.Value; }
            set { _CreditLimit = value; }
        }
        public bool ShouldSerializeCreditLimit()
        {
            return (_CreditLimit.HasValue);
        }

        private decimal? _GeneralDiscount;
        public decimal GeneralDiscount
        {
            get { return _GeneralDiscount.Value; }
            set { _GeneralDiscount = value; }
        }
        public bool ShouldSerializeGeneralDiscount()
        {
            return (_GeneralDiscount.HasValue);
        }

        private decimal? _InterestOnArrears;
        public decimal InterestOnArrears
        {
            get { return _InterestOnArrears.Value; }
            set { _InterestOnArrears = value; }
        }
        public bool ShouldSerializeInterestOnArrears()
        {
            return (_InterestOnArrears.HasValue);
        }

        private int? _PriceListNo;
        public int PriceListNo
        {
            get { return _PriceListNo.Value; }
            set { _PriceListNo = value; }
        }
        public bool ShouldSerializePriceListNo()
        {
            return (_PriceListNo.HasValue);
        }

        private decimal? _LoadLimit;
        public decimal LoadLimit
        {
            get { return _LoadLimit.Value; }
            set { _LoadLimit = value; }
        }
        public bool ShouldSerializeLoadLimit()
        {
            return (_LoadLimit.HasValue);
        }

        private SAPB1.BoOpenIncPayment? _OpenReceipt;
        public SAPB1.BoOpenIncPayment OpenReceipt
        {
            get { return _OpenReceipt.Value; }
            set { _OpenReceipt = value; }
        }
        public bool ShouldSerializeOpenReceipt()
        {
            return (_OpenReceipt.HasValue);
        }

        public string DiscountCode { get; set; }
        public string DunningCode { get; set; }
        private SAPB1.BoBaselineDate? _BaselineDate;
        public SAPB1.BoBaselineDate BaselineDate
        {
            get { return _BaselineDate.Value; }
            set { _BaselineDate = value; }
        }
        public bool ShouldSerializeBaselineDate()
        {
            return (_BaselineDate.HasValue);
        }

        private int? _NumberOfInstallments;
        public int NumberOfInstallments
        {
            get { return _NumberOfInstallments.Value; }
            set { _NumberOfInstallments = value; }
        }
        public bool ShouldSerializeNumberOfInstallments()
        {
            return (_NumberOfInstallments.HasValue);
        }

        private int? _NumberOfToleranceDays;
        public int NumberOfToleranceDays
        {
            get { return _NumberOfToleranceDays.Value; }
            set { _NumberOfToleranceDays = value; }
        }
        public bool ShouldSerializeNumberOfToleranceDays()
        {
            return (_NumberOfToleranceDays.HasValue);
        }

    }

    public class BankPage
    {
        public string AccountCode { get; set; }
        private int? _Sequence;
        public int Sequence
        {
            get { return _Sequence.Value; }
            set { _Sequence = value; }
        }
        public bool ShouldSerializeSequence()
        {
            return (_Sequence.HasValue);
        }

        public string AccountName { get; set; }
        public string Reference { get; set; }
        private DateTime? _DueDate;
        public DateTime DueDate
        {
            get { return _DueDate.Value; }
            set { _DueDate = value; }
        }
        public bool ShouldSerializeDueDate()
        {
            return (_DueDate.HasValue);
        }

        public string Memo { get; set; }
        private decimal? _DebitAmount;
        public decimal DebitAmount
        {
            get { return _DebitAmount.Value; }
            set { _DebitAmount = value; }
        }
        public bool ShouldSerializeDebitAmount()
        {
            return (_DebitAmount.HasValue);
        }

        private decimal? _CreditAmount;
        public decimal CreditAmount
        {
            get { return _CreditAmount.Value; }
            set { _CreditAmount = value; }
        }
        public bool ShouldSerializeCreditAmount()
        {
            return (_CreditAmount.HasValue);
        }

        private int? _BankMatch;
        public int BankMatch
        {
            get { return _BankMatch.Value; }
            set { _BankMatch = value; }
        }
        public bool ShouldSerializeBankMatch()
        {
            return (_BankMatch.HasValue);
        }

        public string DataSource { get; set; }
        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        public string ExternalCode { get; set; }
        public string CardCode { get; set; }
        public string CardName { get; set; }
        private int? _StatementNumber;
        public int StatementNumber
        {
            get { return _StatementNumber.Value; }
            set { _StatementNumber = value; }
        }
        public bool ShouldSerializeStatementNumber()
        {
            return (_StatementNumber.HasValue);
        }

        public string InvoiceNumber { get; set; }
        private SAPB1.BoYesNoEnum? _PaymentCreated;
        public SAPB1.BoYesNoEnum PaymentCreated
        {
            get { return _PaymentCreated.Value; }
            set { _PaymentCreated = value; }
        }
        public bool ShouldSerializePaymentCreated()
        {
            return (_PaymentCreated.HasValue);
        }

        private int? _VisualOrder;
        public int VisualOrder
        {
            get { return _VisualOrder.Value; }
            set { _VisualOrder = value; }
        }
        public bool ShouldSerializeVisualOrder()
        {
            return (_VisualOrder.HasValue);
        }

        private SAPB1.BoBpsDocTypes? _DocNumberType;
        public SAPB1.BoBpsDocTypes DocNumberType
        {
            get { return _DocNumberType.Value; }
            set { _DocNumberType = value; }
        }
        public bool ShouldSerializeDocNumberType()
        {
            return (_DocNumberType.HasValue);
        }

        public string PaymentReference { get; set; }
        public string InvoiceNumberEx { get; set; }
        public string BICSwiftCode { get; set; }
    }

    public class BankPageKey
    {
        public string AccountCode { get; set; }
        private int? _Sequence;
        public int Sequence
        {
            get { return _Sequence.Value; }
            set { _Sequence = value; }
        }
        public bool ShouldSerializeSequence()
        {
            return (_Sequence.HasValue);
        }

    }

    public class Manufacturer
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string ManufacturerName { get; set; }
    }

    public class LandedCostsCode
    {
        public string Code { get; set; }
        public string Name { get; set; }
        private SAPB1.BoAllocationByEnum? _AllocationBy;
        public SAPB1.BoAllocationByEnum AllocationBy
        {
            get { return _AllocationBy.Value; }
            set { _AllocationBy = value; }
        }
        public bool ShouldSerializeAllocationBy()
        {
            return (_AllocationBy.HasValue);
        }

        public string LandedCostsAllocationAccount { get; set; }
    }

    public class ShippingType
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
        public string Website { get; set; }
    }

    public class VatGroup
    {
        public string Code { get; set; }
        public string Name { get; set; }
        private SAPB1.BoVatCategoryEnum? _Category;
        public SAPB1.BoVatCategoryEnum Category
        {
            get { return _Category.Value; }
            set { _Category = value; }
        }
        public bool ShouldSerializeCategory()
        {
            return (_Category.HasValue);
        }

        public string TaxAccount { get; set; }
        private SAPB1.BoYesNoEnum? _EU;
        public SAPB1.BoYesNoEnum EU
        {
            get { return _EU.Value; }
            set { _EU = value; }
        }
        public bool ShouldSerializeEU()
        {
            return (_EU.HasValue);
        }

        public string TriangularDeal { get; set; }
        private SAPB1.BoYesNoEnum? _AcquisitionReverse;
        public SAPB1.BoYesNoEnum AcquisitionReverse
        {
            get { return _AcquisitionReverse.Value; }
            set { _AcquisitionReverse = value; }
        }
        public bool ShouldSerializeAcquisitionReverse()
        {
            return (_AcquisitionReverse.HasValue);
        }

        private decimal? _NonDeduct;
        public decimal NonDeduct
        {
            get { return _NonDeduct.Value; }
            set { _NonDeduct = value; }
        }
        public bool ShouldSerializeNonDeduct()
        {
            return (_NonDeduct.HasValue);
        }

        public string AcquisitionTax { get; set; }
        public string GoodsShipment { get; set; }
        public string NonDeductAcc { get; set; }
        public string DeferredTaxAcc { get; set; }
        private SAPB1.BoYesNoEnum? _Correction;
        public SAPB1.BoYesNoEnum Correction
        {
            get { return _Correction.Value; }
            set { _Correction = value; }
        }
        public bool ShouldSerializeCorrection()
        {
            return (_Correction.HasValue);
        }

        public string VatCorrection { get; set; }
        public string EqualizationTaxAccount { get; set; }
        public string ServiceSupply { get; set; }
        private SAPB1.BoYesNoEnum? _Inactive;
        public SAPB1.BoYesNoEnum Inactive
        {
            get { return _Inactive.Value; }
            set { _Inactive = value; }
        }
        public bool ShouldSerializeInactive()
        {
            return (_Inactive.HasValue);
        }

        private SAPB1.TaxTypeBlackListEnum? _TaxTypeBlackList;
        public SAPB1.TaxTypeBlackListEnum TaxTypeBlackList
        {
            get { return _TaxTypeBlackList.Value; }
            set { _TaxTypeBlackList = value; }
        }
        public bool ShouldSerializeTaxTypeBlackList()
        {
            return (_TaxTypeBlackList.HasValue);
        }

        private SAPB1.Report349CodeListEnum? _Report349Code;
        public SAPB1.Report349CodeListEnum Report349Code
        {
            get { return _Report349Code.Value; }
            set { _Report349Code = value; }
        }
        public bool ShouldSerializeReport349Code()
        {
            return (_Report349Code.HasValue);
        }

        public string VATInRevenueAccount { get; set; }
        public string DownPaymentTaxOffsetAccount { get; set; }
        public string CashDiscountAccount { get; set; }
        public string VATDeductibleAccount { get; set; }
        private SAPB1.VatGroupsTaxRegionEnum? _TaxRegion;
        public SAPB1.VatGroupsTaxRegionEnum TaxRegion
        {
            get { return _TaxRegion.Value; }
            set { _TaxRegion = value; }
        }
        public bool ShouldSerializeTaxRegion()
        {
            return (_TaxRegion.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.VatGroups_Line> VatGroups_Lines { get; set; }
    }

    public class VatGroups_Line
    {
        private DateTime? _Effectivefrom;
        public DateTime Effectivefrom
        {
            get { return _Effectivefrom.Value; }
            set { _Effectivefrom = value; }
        }
        public bool ShouldSerializeEffectivefrom()
        {
            return (_Effectivefrom.HasValue);
        }

        private decimal? _Rate;
        public decimal Rate
        {
            get { return _Rate.Value; }
            set { _Rate = value; }
        }
        public bool ShouldSerializeRate()
        {
            return (_Rate.HasValue);
        }

        private decimal? _EqualizationTax;
        public decimal EqualizationTax
        {
            get { return _EqualizationTax.Value; }
            set { _EqualizationTax = value; }
        }
        public bool ShouldSerializeEqualizationTax()
        {
            return (_EqualizationTax.HasValue);
        }

        private int? _DatevCode;
        public int DatevCode
        {
            get { return _DatevCode.Value; }
            set { _DatevCode = value; }
        }
        public bool ShouldSerializeDatevCode()
        {
            return (_DatevCode.HasValue);
        }

    }

    public class LengthMeasure
    {
        private int? _UnitCode;
        public int UnitCode
        {
            get { return _UnitCode.Value; }
            set { _UnitCode = value; }
        }
        public bool ShouldSerializeUnitCode()
        {
            return (_UnitCode.HasValue);
        }

        public string UnitDisplay { get; set; }
        public string UnitName { get; set; }
        public string UnitCodeforQuantityDisplay { get; set; }
        private decimal? _UnitLengthinmm;
        public decimal UnitLengthinmm
        {
            get { return _UnitLengthinmm.Value; }
            set { _UnitLengthinmm = value; }
        }
        public bool ShouldSerializeUnitLengthinmm()
        {
            return (_UnitLengthinmm.HasValue);
        }

    }

    public class WeightMeasure
    {
        private int? _UnitCode;
        public int UnitCode
        {
            get { return _UnitCode.Value; }
            set { _UnitCode = value; }
        }
        public bool ShouldSerializeUnitCode()
        {
            return (_UnitCode.HasValue);
        }

        public string UnitDisplay { get; set; }
        public string UnitName { get; set; }
        private decimal? _UnitWeightinmg;
        public decimal UnitWeightinmg
        {
            get { return _UnitWeightinmg.Value; }
            set { _UnitWeightinmg = value; }
        }
        public bool ShouldSerializeUnitWeightinmg()
        {
            return (_UnitWeightinmg.HasValue);
        }

    }

    public class ItemGroupParams
    {
        private int? _Number;
        public int Number
        {
            get { return _Number.Value; }
            set { _Number = value; }
        }
        public bool ShouldSerializeNumber()
        {
            return (_Number.HasValue);
        }

    }

    public class ItemGroups
    {
        public string PriceDifferencesAccount { get; set; }
        public string StockInflationAdjustAccount { get; set; }
        private decimal? _MinimumOrderQuantity;
        public decimal MinimumOrderQuantity
        {
            get { return _MinimumOrderQuantity.Value; }
            set { _MinimumOrderQuantity = value; }
        }
        public bool ShouldSerializeMinimumOrderQuantity()
        {
            return (_MinimumOrderQuantity.HasValue);
        }

        private int? _OrderInterval;
        public int OrderInterval
        {
            get { return _OrderInterval.Value; }
            set { _OrderInterval = value; }
        }
        public bool ShouldSerializeOrderInterval()
        {
            return (_OrderInterval.HasValue);
        }

        public string ExchangeRateDifferencesAccount { get; set; }
        public string IncreasingAccount { get; set; }
        public string StockInflationOffsetAccount { get; set; }
        private SAPB1.BoProcurementMethod? _ProcurementMethod;
        public SAPB1.BoProcurementMethod ProcurementMethod
        {
            get { return _ProcurementMethod.Value; }
            set { _ProcurementMethod = value; }
        }
        public bool ShouldSerializeProcurementMethod()
        {
            return (_ProcurementMethod.HasValue);
        }

        private SAPB1.BoMRPComponentWarehouse? _ComponentWarehouse;
        public SAPB1.BoMRPComponentWarehouse ComponentWarehouse
        {
            get { return _ComponentWarehouse.Value; }
            set { _ComponentWarehouse = value; }
        }
        public bool ShouldSerializeComponentWarehouse()
        {
            return (_ComponentWarehouse.HasValue);
        }

        public string PurchaseOffsetAccount { get; set; }
        private SAPB1.BoInventorySystem? _InventorySystem;
        public SAPB1.BoInventorySystem InventorySystem
        {
            get { return _InventorySystem.Value; }
            set { _InventorySystem = value; }
        }
        public bool ShouldSerializeInventorySystem()
        {
            return (_InventorySystem.HasValue);
        }

        public string WIPMaterialVarianceAccount { get; set; }
        private SAPB1.BoPlanningSystem? _PlanningSystem;
        public SAPB1.BoPlanningSystem PlanningSystem
        {
            get { return _PlanningSystem.Value; }
            set { _PlanningSystem = value; }
        }
        public bool ShouldSerializePlanningSystem()
        {
            return (_PlanningSystem.HasValue);
        }

        public string PurchaseAccount { get; set; }
        public string ReturningAccount { get; set; }
        public string CostInflationAccount { get; set; }
        public string ExpensesAccount { get; set; }
        public string RevenuesAccount { get; set; }
        public string TransfersAccount { get; set; }
        private int? _LeadTime;
        public int LeadTime
        {
            get { return _LeadTime.Value; }
            set { _LeadTime = value; }
        }
        public bool ShouldSerializeLeadTime()
        {
            return (_LeadTime.HasValue);
        }

        private decimal? _OrderMultiple;
        public decimal OrderMultiple
        {
            get { return _OrderMultiple.Value; }
            set { _OrderMultiple = value; }
        }
        public bool ShouldSerializeOrderMultiple()
        {
            return (_OrderMultiple.HasValue);
        }

        public string CostInflationOffsetAccount { get; set; }
        public string InventoryAccount { get; set; }
        public string DecreaseGLAccount { get; set; }
        private int? _Number;
        public int Number
        {
            get { return _Number.Value; }
            set { _Number = value; }
        }
        public bool ShouldSerializeNumber()
        {
            return (_Number.HasValue);
        }

        public string GoodsClearingAccount { get; set; }
        public string IncreaseGLAccount { get; set; }
        public string ForeignRevenuesAccount { get; set; }
        private SAPB1.BoYesNoEnum? _Alert;
        public SAPB1.BoYesNoEnum Alert
        {
            get { return _Alert.Value; }
            set { _Alert = value; }
        }
        public bool ShouldSerializeAlert()
        {
            return (_Alert.HasValue);
        }

        public string WIPMaterialAccount { get; set; }
        public string ShippedGoodsAccount { get; set; }
        public string ExemptRevenuesAccount { get; set; }
        public string DecreasingAccount { get; set; }
        public string VATInRevenueAccount { get; set; }
        public string VarianceAccount { get; set; }
        public string EUExpensesAccount { get; set; }
        public string ForeignExpensesAccount { get; set; }
        private int? _CycleCode;
        public int CycleCode
        {
            get { return _CycleCode.Value; }
            set { _CycleCode = value; }
        }
        public bool ShouldSerializeCycleCode()
        {
            return (_CycleCode.HasValue);
        }

        public string CostAccount { get; set; }
        public string EURevenuesAccount { get; set; }
        public string PAReturnAccount { get; set; }
        public string GroupName { get; set; }
        public string ExpenseClearingAct { get; set; }
        public string PurchaseCreditAcc { get; set; }
        public string EUPurchaseCreditAcc { get; set; }
        public string ForeignPurchaseCreditAcc { get; set; }
        public string SalesCreditAcc { get; set; }
        public string SalesCreditEUAcc { get; set; }
        public string ExemptedCredits { get; set; }
        public string SalesCreditForeignAcc { get; set; }
        public string ExpenseOffsetAccount { get; set; }
        public string NegativeInventoryAdjustmentAccount { get; set; }
        public string WHIncomingCenvatAccount { get; set; }
        public string WHOutgoingCenvatAccount { get; set; }
        public string StockInTransitAccount { get; set; }
        public string WipOffsetProfitAndLossAccount { get; set; }
        public string InventoryOffsetProfitAndLossAccount { get; set; }
        private int? _ToleranceDays;
        public int ToleranceDays
        {
            get { return _ToleranceDays.Value; }
            set { _ToleranceDays = value; }
        }
        public bool ShouldSerializeToleranceDays()
        {
            return (_ToleranceDays.HasValue);
        }

        private int? _DefaultUoMGroup;
        public int DefaultUoMGroup
        {
            get { return _DefaultUoMGroup.Value; }
            set { _DefaultUoMGroup = value; }
        }
        public bool ShouldSerializeDefaultUoMGroup()
        {
            return (_DefaultUoMGroup.HasValue);
        }

        private int? _DefaultInventoryUoM;
        public int DefaultInventoryUoM
        {
            get { return _DefaultInventoryUoM.Value; }
            set { _DefaultInventoryUoM = value; }
        }
        public bool ShouldSerializeDefaultInventoryUoM()
        {
            return (_DefaultInventoryUoM.HasValue);
        }

        public string PurchaseBalanceAccount { get; set; }
        public System.Collections.Generic.List<SAPB1.ItemGroupsWarehouseInfo> ItemGroupsWarehouseInfos { get; set; }
    }

    public class ItemGroupsWarehouseInfo
    {
        private int? _ItmsGrpCod;
        public int ItmsGrpCod
        {
            get { return _ItmsGrpCod.Value; }
            set { _ItmsGrpCod = value; }
        }
        public bool ShouldSerializeItmsGrpCod()
        {
            return (_ItmsGrpCod.HasValue);
        }

        public string WarehouseCode { get; set; }
        private int? _DefaultBin;
        public int DefaultBin
        {
            get { return _DefaultBin.Value; }
            set { _DefaultBin = value; }
        }
        public bool ShouldSerializeDefaultBin()
        {
            return (_DefaultBin.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DefaultBinEnforced;
        public SAPB1.BoYesNoEnum DefaultBinEnforced
        {
            get { return _DefaultBinEnforced.Value; }
            set { _DefaultBinEnforced = value; }
        }
        public bool ShouldSerializeDefaultBinEnforced()
        {
            return (_DefaultBinEnforced.HasValue);
        }

    }

    public class SalesPerson
    {
        private int? _SalesEmployeeCode;
        public int SalesEmployeeCode
        {
            get { return _SalesEmployeeCode.Value; }
            set { _SalesEmployeeCode = value; }
        }
        public bool ShouldSerializeSalesEmployeeCode()
        {
            return (_SalesEmployeeCode.HasValue);
        }

        public string SalesEmployeeName { get; set; }
        public string Remarks { get; set; }
        private decimal? _CommissionForSalesEmployee;
        public decimal CommissionForSalesEmployee
        {
            get { return _CommissionForSalesEmployee.Value; }
            set { _CommissionForSalesEmployee = value; }
        }
        public bool ShouldSerializeCommissionForSalesEmployee()
        {
            return (_CommissionForSalesEmployee.HasValue);
        }

        private int? _CommissionGroup;
        public int CommissionGroup
        {
            get { return _CommissionGroup.Value; }
            set { _CommissionGroup = value; }
        }
        public bool ShouldSerializeCommissionGroup()
        {
            return (_CommissionGroup.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Locked;
        public SAPB1.BoYesNoEnum Locked
        {
            get { return _Locked.Value; }
            set { _Locked = value; }
        }
        public bool ShouldSerializeLocked()
        {
            return (_Locked.HasValue);
        }

        private int? _EmployeeID;
        public int EmployeeID
        {
            get { return _EmployeeID.Value; }
            set { _EmployeeID = value; }
        }
        public bool ShouldSerializeEmployeeID()
        {
            return (_EmployeeID.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Active;
        public SAPB1.BoYesNoEnum Active
        {
            get { return _Active.Value; }
            set { _Active = value; }
        }
        public bool ShouldSerializeActive()
        {
            return (_Active.HasValue);
        }

    }

    public class CustomsGroup
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
        public string Number { get; set; }
        private decimal? _Customs;
        public decimal Customs
        {
            get { return _Customs.Value; }
            set { _Customs = value; }
        }
        public bool ShouldSerializeCustoms()
        {
            return (_Customs.HasValue);
        }

        private decimal? _Purchase;
        public decimal Purchase
        {
            get { return _Purchase.Value; }
            set { _Purchase = value; }
        }
        public bool ShouldSerializePurchase()
        {
            return (_Purchase.HasValue);
        }

        private decimal? _Other;
        public decimal Other
        {
            get { return _Other.Value; }
            set { _Other = value; }
        }
        public bool ShouldSerializeOther()
        {
            return (_Other.HasValue);
        }

        private decimal? _Total;
        public decimal Total
        {
            get { return _Total.Value; }
            set { _Total = value; }
        }
        public bool ShouldSerializeTotal()
        {
            return (_Total.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Locked;
        public SAPB1.BoYesNoEnum Locked
        {
            get { return _Locked.Value; }
            set { _Locked = value; }
        }
        public bool ShouldSerializeLocked()
        {
            return (_Locked.HasValue);
        }

        public string CustomsAllocationAccount { get; set; }
        public string CustomsExpenseAccount { get; set; }
        public string PortAddress { get; set; }
        public string PortState { get; set; }
    }

    public class ChecksforPayment
    {
        private int? _CheckKey;
        public int CheckKey
        {
            get { return _CheckKey.Value; }
            set { _CheckKey = value; }
        }
        public bool ShouldSerializeCheckKey()
        {
            return (_CheckKey.HasValue);
        }

        private int? _CheckNumber;
        public int CheckNumber
        {
            get { return _CheckNumber.Value; }
            set { _CheckNumber = value; }
        }
        public bool ShouldSerializeCheckNumber()
        {
            return (_CheckNumber.HasValue);
        }

        public string BankCode { get; set; }
        public string Branch { get; set; }
        public string BankName { get; set; }
        private DateTime? _CheckDate;
        public DateTime CheckDate
        {
            get { return _CheckDate.Value; }
            set { _CheckDate = value; }
        }
        public bool ShouldSerializeCheckDate()
        {
            return (_CheckDate.HasValue);
        }

        public string AccountNumber { get; set; }
        public string Details { get; set; }
        public string JournalEntryReference { get; set; }
        private DateTime? _PaymentDate;
        public DateTime PaymentDate
        {
            get { return _PaymentDate.Value; }
            set { _PaymentDate = value; }
        }
        public bool ShouldSerializePaymentDate()
        {
            return (_PaymentDate.HasValue);
        }

        private int? _PaymentNo;
        public int PaymentNo
        {
            get { return _PaymentNo.Value; }
            set { _PaymentNo = value; }
        }
        public bool ShouldSerializePaymentNo()
        {
            return (_PaymentNo.HasValue);
        }

        private decimal? _CheckAmount;
        public decimal CheckAmount
        {
            get { return _CheckAmount.Value; }
            set { _CheckAmount = value; }
        }
        public bool ShouldSerializeCheckAmount()
        {
            return (_CheckAmount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Transferable;
        public SAPB1.BoYesNoEnum Transferable
        {
            get { return _Transferable.Value; }
            set { _Transferable = value; }
        }
        public bool ShouldSerializeTransferable()
        {
            return (_Transferable.HasValue);
        }

        public string VendorCode { get; set; }
        public string CheckCurrency { get; set; }
        private SAPB1.BoYesNoEnum? _Canceled;
        public SAPB1.BoYesNoEnum Canceled
        {
            get { return _Canceled.Value; }
            set { _Canceled = value; }
        }
        public bool ShouldSerializeCanceled()
        {
            return (_Canceled.HasValue);
        }

        private SAPB1.BoCpCardAcct? _CardOrAccount;
        public SAPB1.BoCpCardAcct CardOrAccount
        {
            get { return _CardOrAccount.Value; }
            set { _CardOrAccount = value; }
        }
        public bool ShouldSerializeCardOrAccount()
        {
            return (_CardOrAccount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Printed;
        public SAPB1.BoYesNoEnum Printed
        {
            get { return _Printed.Value; }
            set { _Printed = value; }
        }
        public bool ShouldSerializePrinted()
        {
            return (_Printed.HasValue);
        }

        public string VendorName { get; set; }
        public string Signature { get; set; }
        public string CustomerAccountCode { get; set; }
        private int? _TransactionNumber;
        public int TransactionNumber
        {
            get { return _TransactionNumber.Value; }
            set { _TransactionNumber = value; }
        }
        public bool ShouldSerializeTransactionNumber()
        {
            return (_TransactionNumber.HasValue);
        }

        public string Address { get; set; }
        private SAPB1.BoYesNoEnum? _CreateJournalEntry;
        public SAPB1.BoYesNoEnum CreateJournalEntry
        {
            get { return _CreateJournalEntry.Value; }
            set { _CreateJournalEntry = value; }
        }
        public bool ShouldSerializeCreateJournalEntry()
        {
            return (_CreateJournalEntry.HasValue);
        }

        private DateTime? _UpdateDate;
        public DateTime UpdateDate
        {
            get { return _UpdateDate.Value; }
            set { _UpdateDate = value; }
        }
        public bool ShouldSerializeUpdateDate()
        {
            return (_UpdateDate.HasValue);
        }

        private DateTime? _CreationDate;
        public DateTime CreationDate
        {
            get { return _CreationDate.Value; }
            set { _CreationDate = value; }
        }
        public bool ShouldSerializeCreationDate()
        {
            return (_CreationDate.HasValue);
        }

        private decimal? _TaxTotal;
        public decimal TaxTotal
        {
            get { return _TaxTotal.Value; }
            set { _TaxTotal = value; }
        }
        public bool ShouldSerializeTaxTotal()
        {
            return (_TaxTotal.HasValue);
        }

        private DateTime? _TaxDate;
        public DateTime TaxDate
        {
            get { return _TaxDate.Value; }
            set { _TaxDate = value; }
        }
        public bool ShouldSerializeTaxDate()
        {
            return (_TaxDate.HasValue);
        }

        private decimal? _DeductionRefundAmount;
        public decimal DeductionRefundAmount
        {
            get { return _DeductionRefundAmount.Value; }
            set { _DeductionRefundAmount = value; }
        }
        public bool ShouldSerializeDeductionRefundAmount()
        {
            return (_DeductionRefundAmount.HasValue);
        }

        private int? _PrintedBy;
        public int PrintedBy
        {
            get { return _PrintedBy.Value; }
            set { _PrintedBy = value; }
        }
        public bool ShouldSerializePrintedBy()
        {
            return (_PrintedBy.HasValue);
        }

        public string CountryCode { get; set; }
        public string TotalinWords { get; set; }
        public string AddressName { get; set; }
        private SAPB1.BoYesNoEnum? _ManualCheck;
        public SAPB1.BoYesNoEnum ManualCheck
        {
            get { return _ManualCheck.Value; }
            set { _ManualCheck = value; }
        }
        public bool ShouldSerializeManualCheck()
        {
            return (_ManualCheck.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ChecksforPaymentLine> ChecksforPaymentLines { get; set; }
    }

    public class ChecksforPaymentLine
    {
        private int? _RowNumber;
        public int RowNumber
        {
            get { return _RowNumber.Value; }
            set { _RowNumber = value; }
        }
        public bool ShouldSerializeRowNumber()
        {
            return (_RowNumber.HasValue);
        }

        public string RowDetails { get; set; }
        private decimal? _RowTotal;
        public decimal RowTotal
        {
            get { return _RowTotal.Value; }
            set { _RowTotal = value; }
        }
        public bool ShouldSerializeRowTotal()
        {
            return (_RowTotal.HasValue);
        }

        public string RowCurrency { get; set; }
        public string TaxDefinition { get; set; }
        private decimal? _TaxPercent;
        public decimal TaxPercent
        {
            get { return _TaxPercent.Value; }
            set { _TaxPercent = value; }
        }
        public bool ShouldSerializeTaxPercent()
        {
            return (_TaxPercent.HasValue);
        }

        public string CreditedAccount { get; set; }
        private decimal? _LineTotal;
        public decimal LineTotal
        {
            get { return _LineTotal.Value; }
            set { _LineTotal = value; }
        }
        public bool ShouldSerializeLineTotal()
        {
            return (_LineTotal.HasValue);
        }

    }

    public class PriceListParams
    {
        private int? _PriceListNo;
        public int PriceListNo
        {
            get { return _PriceListNo.Value; }
            set { _PriceListNo = value; }
        }
        public bool ShouldSerializePriceListNo()
        {
            return (_PriceListNo.HasValue);
        }

    }

    public class PriceList
    {
        private SAPB1.BoRoundingMethod? _RoundingMethod;
        public SAPB1.BoRoundingMethod RoundingMethod
        {
            get { return _RoundingMethod.Value; }
            set { _RoundingMethod = value; }
        }
        public bool ShouldSerializeRoundingMethod()
        {
            return (_RoundingMethod.HasValue);
        }

        private SAPB1.BoPriceListGroupNum? _GroupNum;
        public SAPB1.BoPriceListGroupNum GroupNum
        {
            get { return _GroupNum.Value; }
            set { _GroupNum = value; }
        }
        public bool ShouldSerializeGroupNum()
        {
            return (_GroupNum.HasValue);
        }

        private int? _BasePriceList;
        public int BasePriceList
        {
            get { return _BasePriceList.Value; }
            set { _BasePriceList = value; }
        }
        public bool ShouldSerializeBasePriceList()
        {
            return (_BasePriceList.HasValue);
        }

        private decimal? _Factor;
        public decimal Factor
        {
            get { return _Factor.Value; }
            set { _Factor = value; }
        }
        public bool ShouldSerializeFactor()
        {
            return (_Factor.HasValue);
        }

        private int? _PriceListNo;
        public int PriceListNo
        {
            get { return _PriceListNo.Value; }
            set { _PriceListNo = value; }
        }
        public bool ShouldSerializePriceListNo()
        {
            return (_PriceListNo.HasValue);
        }

        public string PriceListName { get; set; }
        private SAPB1.BoYesNoEnum? _IsGrossPrice;
        public SAPB1.BoYesNoEnum IsGrossPrice
        {
            get { return _IsGrossPrice.Value; }
            set { _IsGrossPrice = value; }
        }
        public bool ShouldSerializeIsGrossPrice()
        {
            return (_IsGrossPrice.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Active;
        public SAPB1.BoYesNoEnum Active
        {
            get { return _Active.Value; }
            set { _Active = value; }
        }
        public bool ShouldSerializeActive()
        {
            return (_Active.HasValue);
        }

        private DateTime? _ValidFrom;
        public DateTime ValidFrom
        {
            get { return _ValidFrom.Value; }
            set { _ValidFrom = value; }
        }
        public bool ShouldSerializeValidFrom()
        {
            return (_ValidFrom.HasValue);
        }

        private DateTime? _ValidTo;
        public DateTime ValidTo
        {
            get { return _ValidTo.Value; }
            set { _ValidTo = value; }
        }
        public bool ShouldSerializeValidTo()
        {
            return (_ValidTo.HasValue);
        }

        public string DefaultPrimeCurrency { get; set; }
        public string DefaultAdditionalCurrency1 { get; set; }
        public string DefaultAdditionalCurrency2 { get; set; }
        private SAPB1.BoRoundingRule? _RoundingRule;
        public SAPB1.BoRoundingRule RoundingRule
        {
            get { return _RoundingRule.Value; }
            set { _RoundingRule = value; }
        }
        public bool ShouldSerializeRoundingRule()
        {
            return (_RoundingRule.HasValue);
        }

        private decimal? _FixedAmount;
        public decimal FixedAmount
        {
            get { return _FixedAmount.Value; }
            set { _FixedAmount = value; }
        }
        public bool ShouldSerializeFixedAmount()
        {
            return (_FixedAmount.HasValue);
        }

    }

    public class ProfitCenter
    {
        public string CenterCode { get; set; }
        public string CenterName { get; set; }
        public string GroupCode { get; set; }
        private int? _InWhichDimension;
        public int InWhichDimension
        {
            get { return _InWhichDimension.Value; }
            set { _InWhichDimension = value; }
        }
        public bool ShouldSerializeInWhichDimension()
        {
            return (_InWhichDimension.HasValue);
        }

        public string CostCenterType { get; set; }
        private DateTime? _EffectiveFrom;
        public DateTime EffectiveFrom
        {
            get { return _EffectiveFrom.Value; }
            set { _EffectiveFrom = value; }
        }
        public bool ShouldSerializeEffectiveFrom()
        {
            return (_EffectiveFrom.HasValue);
        }

        private DateTime? _EffectiveTo;
        public DateTime EffectiveTo
        {
            get { return _EffectiveTo.Value; }
            set { _EffectiveTo = value; }
        }
        public bool ShouldSerializeEffectiveTo()
        {
            return (_EffectiveTo.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Active;
        public SAPB1.BoYesNoEnum Active
        {
            get { return _Active.Value; }
            set { _Active = value; }
        }
        public bool ShouldSerializeActive()
        {
            return (_Active.HasValue);
        }

    }

    public class ProfitCenterParams
    {
        public string CenterCode { get; set; }
        public string CenterName { get; set; }
    }

    public class Project
    {
        public string Code { get; set; }
        public string Name { get; set; }
        private DateTime? _ValidFrom;
        public DateTime ValidFrom
        {
            get { return _ValidFrom.Value; }
            set { _ValidFrom = value; }
        }
        public bool ShouldSerializeValidFrom()
        {
            return (_ValidFrom.HasValue);
        }

        private DateTime? _ValidTo;
        public DateTime ValidTo
        {
            get { return _ValidTo.Value; }
            set { _ValidTo = value; }
        }
        public bool ShouldSerializeValidTo()
        {
            return (_ValidTo.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Active;
        public SAPB1.BoYesNoEnum Active
        {
            get { return _Active.Value; }
            set { _Active = value; }
        }
        public bool ShouldSerializeActive()
        {
            return (_Active.HasValue);
        }

    }

    public class ProjectParams
    {
        public string Code { get; set; }
        public string Name { get; set; }
    }

    public class Warehouse
    {
        public string Street { get; set; }
        public string StockInflationOffsetAccount { get; set; }
        public string ZipCode { get; set; }
        public string DecreasingAccount { get; set; }
        public string PurchaseAccount { get; set; }
        public string EURevenuesAccount { get; set; }
        public string ReturningAccount { get; set; }
        public string ShippedGoodsAccount { get; set; }
        public string StockInflationAdjustAccount { get; set; }
        private SAPB1.BoYesNoEnum? _AllowUseTax;
        public SAPB1.BoYesNoEnum AllowUseTax
        {
            get { return _AllowUseTax.Value; }
            set { _AllowUseTax = value; }
        }
        public bool ShouldSerializeAllowUseTax()
        {
            return (_AllowUseTax.HasValue);
        }

        public string CostInflationAccount { get; set; }
        public string ForeignExpensesAccount { get; set; }
        public string EUExpensesAccount { get; set; }
        public string CostInflationOffsetAccount { get; set; }
        public string ExpensesClearingAccount { get; set; }
        public string PurchaseReturningAccount { get; set; }
        public string VATInRevenueAccount { get; set; }
        public string FederalTaxID { get; set; }
        private int? _Location;
        public int Location
        {
            get { return _Location.Value; }
            set { _Location = value; }
        }
        public bool ShouldSerializeLocation()
        {
            return (_Location.HasValue);
        }

        public string Block { get; set; }
        public string ExpenseAccount { get; set; }
        public string DecreaseGLAccount { get; set; }
        public string RevenuesAccount { get; set; }
        public string TaxGroup { get; set; }
        public string ExemptRevenuesAccount { get; set; }
        public string PurchaseOffsetAccount { get; set; }
        public string CostOfGoodsSold { get; set; }
        public string WarehouseCode { get; set; }
        public string State { get; set; }
        public string City { get; set; }
        public string PriceDifferencesAccount { get; set; }
        public string VarianceAccount { get; set; }
        public string Country { get; set; }
        public string IncreaseGLAccount { get; set; }
        public string ExchangeRateDifferencesAccount { get; set; }
        public string WIPMaterialAccount { get; set; }
        public string WarehouseName { get; set; }
        private SAPB1.BoYesNoEnum? _DropShip;
        public SAPB1.BoYesNoEnum DropShip
        {
            get { return _DropShip.Value; }
            set { _DropShip = value; }
        }
        public bool ShouldSerializeDropShip()
        {
            return (_DropShip.HasValue);
        }

        public string WIPMaterialVarianceAccount { get; set; }
        public string TransfersAcc { get; set; }
        private int? _InternalKey;
        public int InternalKey
        {
            get { return _InternalKey.Value; }
            set { _InternalKey = value; }
        }
        public bool ShouldSerializeInternalKey()
        {
            return (_InternalKey.HasValue);
        }

        public string ForeignRevenuesAcc { get; set; }
        public string BuildingFloorRoom { get; set; }
        public string County { get; set; }
        private SAPB1.BoYesNoEnum? _Nettable;
        public SAPB1.BoYesNoEnum Nettable
        {
            get { return _Nettable.Value; }
            set { _Nettable = value; }
        }
        public bool ShouldSerializeNettable()
        {
            return (_Nettable.HasValue);
        }

        public string IncreasingAcc { get; set; }
        public string ExpenseOffsetingAct { get; set; }
        public string GoodsClearingAcc { get; set; }
        public string StockAccount { get; set; }
        private int? _BusinessPlaceID;
        public int BusinessPlaceID
        {
            get { return _BusinessPlaceID.Value; }
            set { _BusinessPlaceID = value; }
        }
        public bool ShouldSerializeBusinessPlaceID()
        {
            return (_BusinessPlaceID.HasValue);
        }

        public string PurchaseCreditAcc { get; set; }
        public string EUPurchaseCreditAcc { get; set; }
        public string ForeignPurchaseCreditAcc { get; set; }
        public string SalesCreditAcc { get; set; }
        public string SalesCreditEUAcc { get; set; }
        public string ExemptedCredits { get; set; }
        public string SalesCreditForeignAcc { get; set; }
        public string NegativeInventoryAdjustmentAccount { get; set; }
        public string WHShipToName { get; set; }
        private SAPB1.BoYesNoEnum? _Excisable;
        public SAPB1.BoYesNoEnum Excisable
        {
            get { return _Excisable.Value; }
            set { _Excisable = value; }
        }
        public bool ShouldSerializeExcisable()
        {
            return (_Excisable.HasValue);
        }

        public string WHIncomingCenvatAccount { get; set; }
        public string WHOutgoingCenvatAccount { get; set; }
        public string StockInTransitAccount { get; set; }
        public string WipOffsetProfitAndLossAccount { get; set; }
        public string InventoryOffsetProfitAndLossAccount { get; set; }
        public string AddressType { get; set; }
        public string StreetNo { get; set; }
        private int? _Storekeeper;
        public int Storekeeper
        {
            get { return _Storekeeper.Value; }
            set { _Storekeeper = value; }
        }
        public bool ShouldSerializeStorekeeper()
        {
            return (_Storekeeper.HasValue);
        }

        public string Shipper { get; set; }
        private SAPB1.BoYesNoEnum? _ManageSerialAndBatchNumbers;
        public SAPB1.BoYesNoEnum ManageSerialAndBatchNumbers
        {
            get { return _ManageSerialAndBatchNumbers.Value; }
            set { _ManageSerialAndBatchNumbers = value; }
        }
        public bool ShouldSerializeManageSerialAndBatchNumbers()
        {
            return (_ManageSerialAndBatchNumbers.HasValue);
        }

        public string GlobalLocationNumber { get; set; }
        private SAPB1.BoYesNoEnum? _EnableBinLocations;
        public SAPB1.BoYesNoEnum EnableBinLocations
        {
            get { return _EnableBinLocations.Value; }
            set { _EnableBinLocations = value; }
        }
        public bool ShouldSerializeEnableBinLocations()
        {
            return (_EnableBinLocations.HasValue);
        }

        public string BinLocCodeSeparator { get; set; }
        private int? _DefaultBin;
        public int DefaultBin
        {
            get { return _DefaultBin.Value; }
            set { _DefaultBin = value; }
        }
        public bool ShouldSerializeDefaultBin()
        {
            return (_DefaultBin.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DefaultBinEnforced;
        public SAPB1.BoYesNoEnum DefaultBinEnforced
        {
            get { return _DefaultBinEnforced.Value; }
            set { _DefaultBinEnforced = value; }
        }
        public bool ShouldSerializeDefaultBinEnforced()
        {
            return (_DefaultBinEnforced.HasValue);
        }

        private SAPB1.BoDocWhsAutoIssueMethod? _AutoAllocOnIssue;
        public SAPB1.BoDocWhsAutoIssueMethod AutoAllocOnIssue
        {
            get { return _AutoAllocOnIssue.Value; }
            set { _AutoAllocOnIssue = value; }
        }
        public bool ShouldSerializeAutoAllocOnIssue()
        {
            return (_AutoAllocOnIssue.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableReceivingBinLocations;
        public SAPB1.BoYesNoEnum EnableReceivingBinLocations
        {
            get { return _EnableReceivingBinLocations.Value; }
            set { _EnableReceivingBinLocations = value; }
        }
        public bool ShouldSerializeEnableReceivingBinLocations()
        {
            return (_EnableReceivingBinLocations.HasValue);
        }

        private SAPB1.ReceivingBinLocationsMethodEnum? _ReceivingBinLocationsBy;
        public SAPB1.ReceivingBinLocationsMethodEnum ReceivingBinLocationsBy
        {
            get { return _ReceivingBinLocationsBy.Value; }
            set { _ReceivingBinLocationsBy = value; }
        }
        public bool ShouldSerializeReceivingBinLocationsBy()
        {
            return (_ReceivingBinLocationsBy.HasValue);
        }

        public string PurchaseBalanceAccount { get; set; }
        private SAPB1.BoYesNoEnum? _Inactive;
        public SAPB1.BoYesNoEnum Inactive
        {
            get { return _Inactive.Value; }
            set { _Inactive = value; }
        }
        public bool ShouldSerializeInactive()
        {
            return (_Inactive.HasValue);
        }

        private SAPB1.BoYesNoEnum? _RestrictReceiptToEmptyBinLocation;
        public SAPB1.BoYesNoEnum RestrictReceiptToEmptyBinLocation
        {
            get { return _RestrictReceiptToEmptyBinLocation.Value; }
            set { _RestrictReceiptToEmptyBinLocation = value; }
        }
        public bool ShouldSerializeRestrictReceiptToEmptyBinLocation()
        {
            return (_RestrictReceiptToEmptyBinLocation.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReceiveUpToMaxQuantity;
        public SAPB1.BoYesNoEnum ReceiveUpToMaxQuantity
        {
            get { return _ReceiveUpToMaxQuantity.Value; }
            set { _ReceiveUpToMaxQuantity = value; }
        }
        public bool ShouldSerializeReceiveUpToMaxQuantity()
        {
            return (_ReceiveUpToMaxQuantity.HasValue);
        }

        private SAPB1.AutoAllocOnReceiptMethodEnum? _AutoAllocOnReceipt;
        public SAPB1.AutoAllocOnReceiptMethodEnum AutoAllocOnReceipt
        {
            get { return _AutoAllocOnReceipt.Value; }
            set { _AutoAllocOnReceipt = value; }
        }
        public bool ShouldSerializeAutoAllocOnReceipt()
        {
            return (_AutoAllocOnReceipt.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReceiveUpToMaxWeight;
        public SAPB1.BoYesNoEnum ReceiveUpToMaxWeight
        {
            get { return _ReceiveUpToMaxWeight.Value; }
            set { _ReceiveUpToMaxWeight = value; }
        }
        public bool ShouldSerializeReceiveUpToMaxWeight()
        {
            return (_ReceiveUpToMaxWeight.HasValue);
        }

        private SAPB1.ReceivingUpToMethodEnum? _ReceiveUpToMethod;
        public SAPB1.ReceivingUpToMethodEnum ReceiveUpToMethod
        {
            get { return _ReceiveUpToMethod.Value; }
            set { _ReceiveUpToMethod = value; }
        }
        public bool ShouldSerializeReceiveUpToMethod()
        {
            return (_ReceiveUpToMethod.HasValue);
        }

    }

    public class CommissionGroup
    {
        private int? _CommissionGroupCode;
        public int CommissionGroupCode
        {
            get { return _CommissionGroupCode.Value; }
            set { _CommissionGroupCode = value; }
        }
        public bool ShouldSerializeCommissionGroupCode()
        {
            return (_CommissionGroupCode.HasValue);
        }

        public string CommissionGroupName { get; set; }
        private decimal? _CommissionPercentage;
        public decimal CommissionPercentage
        {
            get { return _CommissionPercentage.Value; }
            set { _CommissionPercentage = value; }
        }
        public bool ShouldSerializeCommissionPercentage()
        {
            return (_CommissionPercentage.HasValue);
        }

    }

    public class ProductTreeParams
    {
        public string TreeCode { get; set; }
    }

    public class ProductTree
    {
        public string TreeCode { get; set; }
        private SAPB1.BoItemTreeTypes? _TreeType;
        public SAPB1.BoItemTreeTypes TreeType
        {
            get { return _TreeType.Value; }
            set { _TreeType = value; }
        }
        public bool ShouldSerializeTreeType()
        {
            return (_TreeType.HasValue);
        }

        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        public string DistributionRule { get; set; }
        public string Project { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
        private int? _PriceList;
        public int PriceList
        {
            get { return _PriceList.Value; }
            set { _PriceList = value; }
        }
        public bool ShouldSerializePriceList()
        {
            return (_PriceList.HasValue);
        }

        public string Warehouse { get; set; }
        private decimal? _PlanAvgProdSize;
        public decimal PlanAvgProdSize
        {
            get { return _PlanAvgProdSize.Value; }
            set { _PlanAvgProdSize = value; }
        }
        public bool ShouldSerializePlanAvgProdSize()
        {
            return (_PlanAvgProdSize.HasValue);
        }

        private SAPB1.BoYesNoEnum? _HideBOMComponentsInPrintout;
        public SAPB1.BoYesNoEnum HideBOMComponentsInPrintout
        {
            get { return _HideBOMComponentsInPrintout.Value; }
            set { _HideBOMComponentsInPrintout = value; }
        }
        public bool ShouldSerializeHideBOMComponentsInPrintout()
        {
            return (_HideBOMComponentsInPrintout.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.ProductTreeLine> ProductTreeLines { get; set; }
    }

    public class ProductTreeLine
    {
        public string ItemCode { get; set; }
        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        public string Warehouse { get; set; }
        private decimal? _Price;
        public decimal Price
        {
            get { return _Price.Value; }
            set { _Price = value; }
        }
        public bool ShouldSerializePrice()
        {
            return (_Price.HasValue);
        }

        public string Currency { get; set; }
        private SAPB1.BoIssueMethod? _IssueMethod;
        public SAPB1.BoIssueMethod IssueMethod
        {
            get { return _IssueMethod.Value; }
            set { _IssueMethod = value; }
        }
        public bool ShouldSerializeIssueMethod()
        {
            return (_IssueMethod.HasValue);
        }

        public string InventoryUOM { get; set; }
        public string Comment { get; set; }
        public string ParentItem { get; set; }
        private int? _PriceList;
        public int PriceList
        {
            get { return _PriceList.Value; }
            set { _PriceList = value; }
        }
        public bool ShouldSerializePriceList()
        {
            return (_PriceList.HasValue);
        }

        public string DistributionRule { get; set; }
        public string Project { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
        public string WipAccount { get; set; }
        private SAPB1.ProductionItemType? _ItemType;
        public SAPB1.ProductionItemType ItemType
        {
            get { return _ItemType.Value; }
            set { _ItemType = value; }
        }
        public bool ShouldSerializeItemType()
        {
            return (_ItemType.HasValue);
        }

        public string LineText { get; set; }
        private decimal? _AdditionalQuantity;
        public decimal AdditionalQuantity
        {
            get { return _AdditionalQuantity.Value; }
            set { _AdditionalQuantity = value; }
        }
        public bool ShouldSerializeAdditionalQuantity()
        {
            return (_AdditionalQuantity.HasValue);
        }

    }

    public class WorkOrder
    {
        private SAPB1.BoWorkOrderStat? _Status;
        public SAPB1.BoWorkOrderStat Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Canceled;
        public SAPB1.BoYesNoEnum Canceled
        {
            get { return _Canceled.Value; }
            set { _Canceled = value; }
        }
        public bool ShouldSerializeCanceled()
        {
            return (_Canceled.HasValue);
        }

        private DateTime? _OrderDate;
        public DateTime OrderDate
        {
            get { return _OrderDate.Value; }
            set { _OrderDate = value; }
        }
        public bool ShouldSerializeOrderDate()
        {
            return (_OrderDate.HasValue);
        }

        private DateTime? _WorkStartDate;
        public DateTime WorkStartDate
        {
            get { return _WorkStartDate.Value; }
            set { _WorkStartDate = value; }
        }
        public bool ShouldSerializeWorkStartDate()
        {
            return (_WorkStartDate.HasValue);
        }

        private DateTime? _ExpectedCompletionDate;
        public DateTime ExpectedCompletionDate
        {
            get { return _ExpectedCompletionDate.Value; }
            set { _ExpectedCompletionDate = value; }
        }
        public bool ShouldSerializeExpectedCompletionDate()
        {
            return (_ExpectedCompletionDate.HasValue);
        }

        private DateTime? _WorkFinishDate;
        public DateTime WorkFinishDate
        {
            get { return _WorkFinishDate.Value; }
            set { _WorkFinishDate = value; }
        }
        public bool ShouldSerializeWorkFinishDate()
        {
            return (_WorkFinishDate.HasValue);
        }

        public string ReceiverName { get; set; }
        public string OrdererCode { get; set; }
        public string OrdererName { get; set; }
        public string CustomerRefNo { get; set; }
        private decimal? _OrderTotal;
        public decimal OrderTotal
        {
            get { return _OrderTotal.Value; }
            set { _OrderTotal = value; }
        }
        public bool ShouldSerializeOrderTotal()
        {
            return (_OrderTotal.HasValue);
        }

        public string TotalCurrency { get; set; }
        private int? _GenerationTime;
        public int GenerationTime
        {
            get { return _GenerationTime.Value; }
            set { _GenerationTime = value; }
        }
        public bool ShouldSerializeGenerationTime()
        {
            return (_GenerationTime.HasValue);
        }

        public string Comment { get; set; }
        private int? _InstructionNumber;
        public int InstructionNumber
        {
            get { return _InstructionNumber.Value; }
            set { _InstructionNumber = value; }
        }
        public bool ShouldSerializeInstructionNumber()
        {
            return (_InstructionNumber.HasValue);
        }

        private int? _ContactPerson;
        public int ContactPerson
        {
            get { return _ContactPerson.Value; }
            set { _ContactPerson = value; }
        }
        public bool ShouldSerializeContactPerson()
        {
            return (_ContactPerson.HasValue);
        }

        private int? _Series;
        public int Series
        {
            get { return _Series.Value; }
            set { _Series = value; }
        }
        public bool ShouldSerializeSeries()
        {
            return (_Series.HasValue);
        }

        public string ActiveAccountCode { get; set; }
        private decimal? _WorkSum;
        public decimal WorkSum
        {
            get { return _WorkSum.Value; }
            set { _WorkSum = value; }
        }
        public bool ShouldSerializeWorkSum()
        {
            return (_WorkSum.HasValue);
        }

        public string JournalRemarks { get; set; }
        private int? _PriceListNum;
        public int PriceListNum
        {
            get { return _PriceListNum.Value; }
            set { _PriceListNum = value; }
        }
        public bool ShouldSerializePriceListNum()
        {
            return (_PriceListNum.HasValue);
        }

        private int? _FinancialPeriod;
        public int FinancialPeriod
        {
            get { return _FinancialPeriod.Value; }
            set { _FinancialPeriod = value; }
        }
        public bool ShouldSerializeFinancialPeriod()
        {
            return (_FinancialPeriod.HasValue);
        }

        private int? _OrderNum;
        public int OrderNum
        {
            get { return _OrderNum.Value; }
            set { _OrderNum = value; }
        }
        public bool ShouldSerializeOrderNum()
        {
            return (_OrderNum.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.WorkOrder_Line> WorkOrder_Lines { get; set; }
    }

    public class WorkOrder_Line
    {
        private int? _RowNumber;
        public int RowNumber
        {
            get { return _RowNumber.Value; }
            set { _RowNumber = value; }
        }
        public bool ShouldSerializeRowNumber()
        {
            return (_RowNumber.HasValue);
        }

        public string ItemCode { get; set; }
        public string ItemDescription { get; set; }
        private decimal? _ItemQuantity;
        public decimal ItemQuantity
        {
            get { return _ItemQuantity.Value; }
            set { _ItemQuantity = value; }
        }
        public bool ShouldSerializeItemQuantity()
        {
            return (_ItemQuantity.HasValue);
        }

        private decimal? _ItemPrice;
        public decimal ItemPrice
        {
            get { return _ItemPrice.Value; }
            set { _ItemPrice = value; }
        }
        public bool ShouldSerializeItemPrice()
        {
            return (_ItemPrice.HasValue);
        }

        public string PriceCurrency { get; set; }
        public string ItemWarehouse { get; set; }
        public string ActiveAccountCode { get; set; }
        private decimal? _WorkSum;
        public decimal WorkSum
        {
            get { return _WorkSum.Value; }
            set { _WorkSum = value; }
        }
        public bool ShouldSerializeWorkSum()
        {
            return (_WorkSum.HasValue);
        }

    }

    public class SpecialPriceParams
    {
        public string ItemCode { get; set; }
        public string CardCode { get; set; }
        private int? _PriceListNum;
        public int PriceListNum
        {
            get { return _PriceListNum.Value; }
            set { _PriceListNum = value; }
        }
        public bool ShouldSerializePriceListNum()
        {
            return (_PriceListNum.HasValue);
        }

    }

    public class SpecialPrice
    {
        public string ItemCode { get; set; }
        public string CardCode { get; set; }
        private decimal? _Price;
        public decimal Price
        {
            get { return _Price.Value; }
            set { _Price = value; }
        }
        public bool ShouldSerializePrice()
        {
            return (_Price.HasValue);
        }

        public string Currency { get; set; }
        private decimal? _DiscountPercent;
        public decimal DiscountPercent
        {
            get { return _DiscountPercent.Value; }
            set { _DiscountPercent = value; }
        }
        public bool ShouldSerializeDiscountPercent()
        {
            return (_DiscountPercent.HasValue);
        }

        private int? _PriceListNum;
        public int PriceListNum
        {
            get { return _PriceListNum.Value; }
            set { _PriceListNum = value; }
        }
        public bool ShouldSerializePriceListNum()
        {
            return (_PriceListNum.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AutoUpdate;
        public SAPB1.BoYesNoEnum AutoUpdate
        {
            get { return _AutoUpdate.Value; }
            set { _AutoUpdate = value; }
        }
        public bool ShouldSerializeAutoUpdate()
        {
            return (_AutoUpdate.HasValue);
        }

        private SAPB1.SourceCurrencyEnum? _SourcePrice;
        public SAPB1.SourceCurrencyEnum SourcePrice
        {
            get { return _SourcePrice.Value; }
            set { _SourcePrice = value; }
        }
        public bool ShouldSerializeSourcePrice()
        {
            return (_SourcePrice.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.SpecialPriceDataArea> SpecialPriceDataAreas { get; set; }
    }

    public class SpecialPriceKey
    {
        public string ItemCode { get; set; }
        public string CardCode { get; set; }
    }

    public class SpecialPriceDataArea
    {
        public string PriceCurrency { get; set; }
        private SAPB1.BoYesNoEnum? _AutoUpdate;
        public SAPB1.BoYesNoEnum AutoUpdate
        {
            get { return _AutoUpdate.Value; }
            set { _AutoUpdate = value; }
        }
        public bool ShouldSerializeAutoUpdate()
        {
            return (_AutoUpdate.HasValue);
        }

        private DateTime? _Dateto;
        public DateTime Dateto
        {
            get { return _Dateto.Value; }
            set { _Dateto = value; }
        }
        public bool ShouldSerializeDateto()
        {
            return (_Dateto.HasValue);
        }

        private decimal? _Discount;
        public decimal Discount
        {
            get { return _Discount.Value; }
            set { _Discount = value; }
        }
        public bool ShouldSerializeDiscount()
        {
            return (_Discount.HasValue);
        }

        private decimal? _SpecialPrice;
        public decimal SpecialPrice
        {
            get { return _SpecialPrice.Value; }
            set { _SpecialPrice = value; }
        }
        public bool ShouldSerializeSpecialPrice()
        {
            return (_SpecialPrice.HasValue);
        }

        private DateTime? _DateFrom;
        public DateTime DateFrom
        {
            get { return _DateFrom.Value; }
            set { _DateFrom = value; }
        }
        public bool ShouldSerializeDateFrom()
        {
            return (_DateFrom.HasValue);
        }

        public string BPCode { get; set; }
        private int? _PriceListNo;
        public int PriceListNo
        {
            get { return _PriceListNo.Value; }
            set { _PriceListNo = value; }
        }
        public bool ShouldSerializePriceListNo()
        {
            return (_PriceListNo.HasValue);
        }

        public string ItemNo { get; set; }
        private int? _RowNumber;
        public int RowNumber
        {
            get { return _RowNumber.Value; }
            set { _RowNumber = value; }
        }
        public bool ShouldSerializeRowNumber()
        {
            return (_RowNumber.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.SpecialPriceQuantityArea> SpecialPriceQuantityAreas { get; set; }
    }

    public class SpecialPriceQuantityArea
    {
        private decimal? _Quantity;
        public decimal Quantity
        {
            get { return _Quantity.Value; }
            set { _Quantity = value; }
        }
        public bool ShouldSerializeQuantity()
        {
            return (_Quantity.HasValue);
        }

        private int? _SPDARowNumber;
        public int SPDARowNumber
        {
            get { return _SPDARowNumber.Value; }
            set { _SPDARowNumber = value; }
        }
        public bool ShouldSerializeSPDARowNumber()
        {
            return (_SPDARowNumber.HasValue);
        }

        private decimal? _SpecialPrice;
        public decimal SpecialPrice
        {
            get { return _SpecialPrice.Value; }
            set { _SpecialPrice = value; }
        }
        public bool ShouldSerializeSpecialPrice()
        {
            return (_SpecialPrice.HasValue);
        }

        public string ItemNo { get; set; }
        public string BPCode { get; set; }
        private int? _RowNumber;
        public int RowNumber
        {
            get { return _RowNumber.Value; }
            set { _RowNumber = value; }
        }
        public bool ShouldSerializeRowNumber()
        {
            return (_RowNumber.HasValue);
        }

        public string PriceCurrency { get; set; }
        private decimal? _Discountin;
        public decimal Discountin
        {
            get { return _Discountin.Value; }
            set { _Discountin = value; }
        }
        public bool ShouldSerializeDiscountin()
        {
            return (_Discountin.HasValue);
        }

        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

    }

    public class CreditPaymentMethod
    {
        private int? _PaymentMethodCode;
        public int PaymentMethodCode
        {
            get { return _PaymentMethodCode.Value; }
            set { _PaymentMethodCode = value; }
        }
        public bool ShouldSerializePaymentMethodCode()
        {
            return (_PaymentMethodCode.HasValue);
        }

        public string Name { get; set; }
        private int? _AssignedtoCreditCard;
        public int AssignedtoCreditCard
        {
            get { return _AssignedtoCreditCard.Value; }
            set { _AssignedtoCreditCard = value; }
        }
        public bool ShouldSerializeAssignedtoCreditCard()
        {
            return (_AssignedtoCreditCard.HasValue);
        }

        public string PaymentCode { get; set; }
        private decimal? _MinimumCreditAmount;
        public decimal MinimumCreditAmount
        {
            get { return _MinimumCreditAmount.Value; }
            set { _MinimumCreditAmount = value; }
        }
        public bool ShouldSerializeMinimumCreditAmount()
        {
            return (_MinimumCreditAmount.HasValue);
        }

        private decimal? _MinimumPaymentAmount;
        public decimal MinimumPaymentAmount
        {
            get { return _MinimumPaymentAmount.Value; }
            set { _MinimumPaymentAmount = value; }
        }
        public bool ShouldSerializeMinimumPaymentAmount()
        {
            return (_MinimumPaymentAmount.HasValue);
        }

        private decimal? _MaxQtyWithoutApproval;
        public decimal MaxQtyWithoutApproval
        {
            get { return _MaxQtyWithoutApproval.Value; }
            set { _MaxQtyWithoutApproval = value; }
        }
        public bool ShouldSerializeMaxQtyWithoutApproval()
        {
            return (_MaxQtyWithoutApproval.HasValue);
        }

        private SAPB1.InstallmentPaymentsPossiblityEnum? _InstallmentPaymentsPossible;
        public SAPB1.InstallmentPaymentsPossiblityEnum InstallmentPaymentsPossible
        {
            get { return _InstallmentPaymentsPossible.Value; }
            set { _InstallmentPaymentsPossible = value; }
        }
        public bool ShouldSerializeInstallmentPaymentsPossible()
        {
            return (_InstallmentPaymentsPossible.HasValue);
        }

    }

    public class CreditCardPayment
    {
        public string DueDateCode { get; set; }
        public string DueDateName { get; set; }
        private SAPB1.DueDateTypesEnum? _DueDatesType;
        public SAPB1.DueDateTypesEnum DueDatesType
        {
            get { return _DueDatesType.Value; }
            set { _DueDatesType = value; }
        }
        public bool ShouldSerializeDueDatesType()
        {
            return (_DueDatesType.HasValue);
        }

        private int? _PaymentAfterDays;
        public int PaymentAfterDays
        {
            get { return _PaymentAfterDays.Value; }
            set { _PaymentAfterDays = value; }
        }
        public bool ShouldSerializePaymentAfterDays()
        {
            return (_PaymentAfterDays.HasValue);
        }

        private int? _PaymentAfterMonths;
        public int PaymentAfterMonths
        {
            get { return _PaymentAfterMonths.Value; }
            set { _PaymentAfterMonths = value; }
        }
        public bool ShouldSerializePaymentAfterMonths()
        {
            return (_PaymentAfterMonths.HasValue);
        }

        private int? _FromDay1;
        public int FromDay1
        {
            get { return _FromDay1.Value; }
            set { _FromDay1 = value; }
        }
        public bool ShouldSerializeFromDay1()
        {
            return (_FromDay1.HasValue);
        }

        private int? _ToDay1;
        public int ToDay1
        {
            get { return _ToDay1.Value; }
            set { _ToDay1 = value; }
        }
        public bool ShouldSerializeToDay1()
        {
            return (_ToDay1.HasValue);
        }

        private int? _PaymentDay1;
        public int PaymentDay1
        {
            get { return _PaymentDay1.Value; }
            set { _PaymentDay1 = value; }
        }
        public bool ShouldSerializePaymentDay1()
        {
            return (_PaymentDay1.HasValue);
        }

        private int? _NoOfMonths1;
        public int NoOfMonths1
        {
            get { return _NoOfMonths1.Value; }
            set { _NoOfMonths1 = value; }
        }
        public bool ShouldSerializeNoOfMonths1()
        {
            return (_NoOfMonths1.HasValue);
        }

        private int? _FromDay2;
        public int FromDay2
        {
            get { return _FromDay2.Value; }
            set { _FromDay2 = value; }
        }
        public bool ShouldSerializeFromDay2()
        {
            return (_FromDay2.HasValue);
        }

        private int? _ToDay2;
        public int ToDay2
        {
            get { return _ToDay2.Value; }
            set { _ToDay2 = value; }
        }
        public bool ShouldSerializeToDay2()
        {
            return (_ToDay2.HasValue);
        }

        private int? _PaymentDay2;
        public int PaymentDay2
        {
            get { return _PaymentDay2.Value; }
            set { _PaymentDay2 = value; }
        }
        public bool ShouldSerializePaymentDay2()
        {
            return (_PaymentDay2.HasValue);
        }

        private int? _NoOfMonths2;
        public int NoOfMonths2
        {
            get { return _NoOfMonths2.Value; }
            set { _NoOfMonths2 = value; }
        }
        public bool ShouldSerializeNoOfMonths2()
        {
            return (_NoOfMonths2.HasValue);
        }

        private int? _FromDay3;
        public int FromDay3
        {
            get { return _FromDay3.Value; }
            set { _FromDay3 = value; }
        }
        public bool ShouldSerializeFromDay3()
        {
            return (_FromDay3.HasValue);
        }

        private int? _ToDay3;
        public int ToDay3
        {
            get { return _ToDay3.Value; }
            set { _ToDay3 = value; }
        }
        public bool ShouldSerializeToDay3()
        {
            return (_ToDay3.HasValue);
        }

        private int? _PaymentDay3;
        public int PaymentDay3
        {
            get { return _PaymentDay3.Value; }
            set { _PaymentDay3 = value; }
        }
        public bool ShouldSerializePaymentDay3()
        {
            return (_PaymentDay3.HasValue);
        }

        private int? _NoOfMonths3;
        public int NoOfMonths3
        {
            get { return _NoOfMonths3.Value; }
            set { _NoOfMonths3 = value; }
        }
        public bool ShouldSerializeNoOfMonths3()
        {
            return (_NoOfMonths3.HasValue);
        }

        private int? _FromDay4;
        public int FromDay4
        {
            get { return _FromDay4.Value; }
            set { _FromDay4 = value; }
        }
        public bool ShouldSerializeFromDay4()
        {
            return (_FromDay4.HasValue);
        }

        private int? _ToDay4;
        public int ToDay4
        {
            get { return _ToDay4.Value; }
            set { _ToDay4 = value; }
        }
        public bool ShouldSerializeToDay4()
        {
            return (_ToDay4.HasValue);
        }

        private int? _PaymentDay4;
        public int PaymentDay4
        {
            get { return _PaymentDay4.Value; }
            set { _PaymentDay4 = value; }
        }
        public bool ShouldSerializePaymentDay4()
        {
            return (_PaymentDay4.HasValue);
        }

        private int? _NoOfMonths4;
        public int NoOfMonths4
        {
            get { return _NoOfMonths4.Value; }
            set { _NoOfMonths4 = value; }
        }
        public bool ShouldSerializeNoOfMonths4()
        {
            return (_NoOfMonths4.HasValue);
        }

    }

    public class AlternateCatNum
    {
        public string ItemCode { get; set; }
        public string CardCode { get; set; }
        public string Substitute { get; set; }
        private SAPB1.BoYesNoEnum? _DisplayBPCatalogNumber;
        public SAPB1.BoYesNoEnum DisplayBPCatalogNumber
        {
            get { return _DisplayBPCatalogNumber.Value; }
            set { _DisplayBPCatalogNumber = value; }
        }
        public bool ShouldSerializeDisplayBPCatalogNumber()
        {
            return (_DisplayBPCatalogNumber.HasValue);
        }

    }

    public class AlternateCatNumKey
    {
        public string ItemCode { get; set; }
        public string CardCode { get; set; }
        public string Substitute { get; set; }
    }

    public class BudgetParams
    {
        private int? _Numerator;
        public int Numerator
        {
            get { return _Numerator.Value; }
            set { _Numerator = value; }
        }
        public bool ShouldSerializeNumerator()
        {
            return (_Numerator.HasValue);
        }

    }

    public class Budget
    {
        private decimal? _FutureAnnualExpensesCreditSys;
        public decimal FutureAnnualExpensesCreditSys
        {
            get { return _FutureAnnualExpensesCreditSys.Value; }
            set { _FutureAnnualExpensesCreditSys = value; }
        }
        public bool ShouldSerializeFutureAnnualExpensesCreditSys()
        {
            return (_FutureAnnualExpensesCreditSys.HasValue);
        }

        private decimal? _FutureAnnualExpensesCreditLoc;
        public decimal FutureAnnualExpensesCreditLoc
        {
            get { return _FutureAnnualExpensesCreditLoc.Value; }
            set { _FutureAnnualExpensesCreditLoc = value; }
        }
        public bool ShouldSerializeFutureAnnualExpensesCreditLoc()
        {
            return (_FutureAnnualExpensesCreditLoc.HasValue);
        }

        private decimal? _FutureAnnualExpensesDebitSys;
        public decimal FutureAnnualExpensesDebitSys
        {
            get { return _FutureAnnualExpensesDebitSys.Value; }
            set { _FutureAnnualExpensesDebitSys = value; }
        }
        public bool ShouldSerializeFutureAnnualExpensesDebitSys()
        {
            return (_FutureAnnualExpensesDebitSys.HasValue);
        }

        private decimal? _FutureAnnualExpensesDebitLoc;
        public decimal FutureAnnualExpensesDebitLoc
        {
            get { return _FutureAnnualExpensesDebitLoc.Value; }
            set { _FutureAnnualExpensesDebitLoc = value; }
        }
        public bool ShouldSerializeFutureAnnualExpensesDebitLoc()
        {
            return (_FutureAnnualExpensesDebitLoc.HasValue);
        }

        private decimal? _FutureAnnualRevenuesCredit;
        public decimal FutureAnnualRevenuesCredit
        {
            get { return _FutureAnnualRevenuesCredit.Value; }
            set { _FutureAnnualRevenuesCredit = value; }
        }
        public bool ShouldSerializeFutureAnnualRevenuesCredit()
        {
            return (_FutureAnnualRevenuesCredit.HasValue);
        }

        private decimal? _FutureAnnualRevenuesDebit;
        public decimal FutureAnnualRevenuesDebit
        {
            get { return _FutureAnnualRevenuesDebit.Value; }
            set { _FutureAnnualRevenuesDebit = value; }
        }
        public bool ShouldSerializeFutureAnnualRevenuesDebit()
        {
            return (_FutureAnnualRevenuesDebit.HasValue);
        }

        private decimal? _FutureRevenuesDebitSys;
        public decimal FutureRevenuesDebitSys
        {
            get { return _FutureRevenuesDebitSys.Value; }
            set { _FutureRevenuesDebitSys = value; }
        }
        public bool ShouldSerializeFutureRevenuesDebitSys()
        {
            return (_FutureRevenuesDebitSys.HasValue);
        }

        private decimal? _FutureRevenuesDebitLoc;
        public decimal FutureRevenuesDebitLoc
        {
            get { return _FutureRevenuesDebitLoc.Value; }
            set { _FutureRevenuesDebitLoc = value; }
        }
        public bool ShouldSerializeFutureRevenuesDebitLoc()
        {
            return (_FutureRevenuesDebitLoc.HasValue);
        }

        private decimal? _ParentAccPercent;
        public decimal ParentAccPercent
        {
            get { return _ParentAccPercent.Value; }
            set { _ParentAccPercent = value; }
        }
        public bool ShouldSerializeParentAccPercent()
        {
            return (_ParentAccPercent.HasValue);
        }

        private DateTime? _StartofFiscalYear;
        public DateTime StartofFiscalYear
        {
            get { return _StartofFiscalYear.Value; }
            set { _StartofFiscalYear = value; }
        }
        public bool ShouldSerializeStartofFiscalYear()
        {
            return (_StartofFiscalYear.HasValue);
        }

        public string ParentAccountKey { get; set; }
        private decimal? _TotalAnnualBudgetDebitSys;
        public decimal TotalAnnualBudgetDebitSys
        {
            get { return _TotalAnnualBudgetDebitSys.Value; }
            set { _TotalAnnualBudgetDebitSys = value; }
        }
        public bool ShouldSerializeTotalAnnualBudgetDebitSys()
        {
            return (_TotalAnnualBudgetDebitSys.HasValue);
        }

        private decimal? _BudgetBalanceDebitSys;
        public decimal BudgetBalanceDebitSys
        {
            get { return _BudgetBalanceDebitSys.Value; }
            set { _BudgetBalanceDebitSys = value; }
        }
        public bool ShouldSerializeBudgetBalanceDebitSys()
        {
            return (_BudgetBalanceDebitSys.HasValue);
        }

        private decimal? _BudgetBalanceDebitLoc;
        public decimal BudgetBalanceDebitLoc
        {
            get { return _BudgetBalanceDebitLoc.Value; }
            set { _BudgetBalanceDebitLoc = value; }
        }
        public bool ShouldSerializeBudgetBalanceDebitLoc()
        {
            return (_BudgetBalanceDebitLoc.HasValue);
        }

        private decimal? _TotalAnnualBudgetDebitLoc;
        public decimal TotalAnnualBudgetDebitLoc
        {
            get { return _TotalAnnualBudgetDebitLoc.Value; }
            set { _TotalAnnualBudgetDebitLoc = value; }
        }
        public bool ShouldSerializeTotalAnnualBudgetDebitLoc()
        {
            return (_TotalAnnualBudgetDebitLoc.HasValue);
        }

        private decimal? _TotalAnnualBudgetCreditSys;
        public decimal TotalAnnualBudgetCreditSys
        {
            get { return _TotalAnnualBudgetCreditSys.Value; }
            set { _TotalAnnualBudgetCreditSys = value; }
        }
        public bool ShouldSerializeTotalAnnualBudgetCreditSys()
        {
            return (_TotalAnnualBudgetCreditSys.HasValue);
        }

        private decimal? _TotalAnnualBudgetCreditLoc;
        public decimal TotalAnnualBudgetCreditLoc
        {
            get { return _TotalAnnualBudgetCreditLoc.Value; }
            set { _TotalAnnualBudgetCreditLoc = value; }
        }
        public bool ShouldSerializeTotalAnnualBudgetCreditLoc()
        {
            return (_TotalAnnualBudgetCreditLoc.HasValue);
        }

        private decimal? _BudgetBalanceCreditSys;
        public decimal BudgetBalanceCreditSys
        {
            get { return _BudgetBalanceCreditSys.Value; }
            set { _BudgetBalanceCreditSys = value; }
        }
        public bool ShouldSerializeBudgetBalanceCreditSys()
        {
            return (_BudgetBalanceCreditSys.HasValue);
        }

        private decimal? _BudgetBalanceCreditLoc;
        public decimal BudgetBalanceCreditLoc
        {
            get { return _BudgetBalanceCreditLoc.Value; }
            set { _BudgetBalanceCreditLoc = value; }
        }
        public bool ShouldSerializeBudgetBalanceCreditLoc()
        {
            return (_BudgetBalanceCreditLoc.HasValue);
        }

        private int? _DivisionCode;
        public int DivisionCode
        {
            get { return _DivisionCode.Value; }
            set { _DivisionCode = value; }
        }
        public bool ShouldSerializeDivisionCode()
        {
            return (_DivisionCode.HasValue);
        }

        public string AccountCode { get; set; }
        private int? _Numerator;
        public int Numerator
        {
            get { return _Numerator.Value; }
            set { _Numerator = value; }
        }
        public bool ShouldSerializeNumerator()
        {
            return (_Numerator.HasValue);
        }

        private int? _BudgetScenario;
        public int BudgetScenario
        {
            get { return _BudgetScenario.Value; }
            set { _BudgetScenario = value; }
        }
        public bool ShouldSerializeBudgetScenario()
        {
            return (_BudgetScenario.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.BudgetLine> BudgetLines { get; set; }
        public System.Collections.Generic.List<SAPB1.BudgetCostAccountingLine> BudgetCostAccountingLines { get; set; }
    }

    public class BudgetLine
    {
        private decimal? _PrecentOfAnnualBudgetAmount;
        public decimal PrecentOfAnnualBudgetAmount
        {
            get { return _PrecentOfAnnualBudgetAmount.Value; }
            set { _PrecentOfAnnualBudgetAmount = value; }
        }
        public bool ShouldSerializePrecentOfAnnualBudgetAmount()
        {
            return (_PrecentOfAnnualBudgetAmount.HasValue);
        }

        public string RowDetails { get; set; }
        private int? _RowNumber;
        public int RowNumber
        {
            get { return _RowNumber.Value; }
            set { _RowNumber = value; }
        }
        public bool ShouldSerializeRowNumber()
        {
            return (_RowNumber.HasValue);
        }

        private decimal? _FutExpenSysDebit;
        public decimal FutExpenSysDebit
        {
            get { return _FutExpenSysDebit.Value; }
            set { _FutExpenSysDebit = value; }
        }
        public bool ShouldSerializeFutExpenSysDebit()
        {
            return (_FutExpenSysDebit.HasValue);
        }

        private decimal? _FutExpenDebit;
        public decimal FutExpenDebit
        {
            get { return _FutExpenDebit.Value; }
            set { _FutExpenDebit = value; }
        }
        public bool ShouldSerializeFutExpenDebit()
        {
            return (_FutExpenDebit.HasValue);
        }

        private decimal? _FutExpenSysCredit;
        public decimal FutExpenSysCredit
        {
            get { return _FutExpenSysCredit.Value; }
            set { _FutExpenSysCredit = value; }
        }
        public bool ShouldSerializeFutExpenSysCredit()
        {
            return (_FutExpenSysCredit.HasValue);
        }

        private decimal? _FutExpenCredit;
        public decimal FutExpenCredit
        {
            get { return _FutExpenCredit.Value; }
            set { _FutExpenCredit = value; }
        }
        public bool ShouldSerializeFutExpenCredit()
        {
            return (_FutExpenCredit.HasValue);
        }

        private decimal? _FutIncomesSysCredit;
        public decimal FutIncomesSysCredit
        {
            get { return _FutIncomesSysCredit.Value; }
            set { _FutIncomesSysCredit = value; }
        }
        public bool ShouldSerializeFutIncomesSysCredit()
        {
            return (_FutIncomesSysCredit.HasValue);
        }

        private decimal? _FutIncomesSysDebit;
        public decimal FutIncomesSysDebit
        {
            get { return _FutIncomesSysDebit.Value; }
            set { _FutIncomesSysDebit = value; }
        }
        public bool ShouldSerializeFutIncomesSysDebit()
        {
            return (_FutIncomesSysDebit.HasValue);
        }

        private decimal? _FutIncomesCredit;
        public decimal FutIncomesCredit
        {
            get { return _FutIncomesCredit.Value; }
            set { _FutIncomesCredit = value; }
        }
        public bool ShouldSerializeFutIncomesCredit()
        {
            return (_FutIncomesCredit.HasValue);
        }

        private decimal? _BudgetSysTotDebit;
        public decimal BudgetSysTotDebit
        {
            get { return _BudgetSysTotDebit.Value; }
            set { _BudgetSysTotDebit = value; }
        }
        public bool ShouldSerializeBudgetSysTotDebit()
        {
            return (_BudgetSysTotDebit.HasValue);
        }

        private decimal? _BalSysTotDebit;
        public decimal BalSysTotDebit
        {
            get { return _BalSysTotDebit.Value; }
            set { _BalSysTotDebit = value; }
        }
        public bool ShouldSerializeBalSysTotDebit()
        {
            return (_BalSysTotDebit.HasValue);
        }

        private decimal? _BalTotDebit;
        public decimal BalTotDebit
        {
            get { return _BalTotDebit.Value; }
            set { _BalTotDebit = value; }
        }
        public bool ShouldSerializeBalTotDebit()
        {
            return (_BalTotDebit.HasValue);
        }

        private decimal? _BudgetTotCredit;
        public decimal BudgetTotCredit
        {
            get { return _BudgetTotCredit.Value; }
            set { _BudgetTotCredit = value; }
        }
        public bool ShouldSerializeBudgetTotCredit()
        {
            return (_BudgetTotCredit.HasValue);
        }

        private decimal? _BudgetSysTotCredit;
        public decimal BudgetSysTotCredit
        {
            get { return _BudgetSysTotCredit.Value; }
            set { _BudgetSysTotCredit = value; }
        }
        public bool ShouldSerializeBudgetSysTotCredit()
        {
            return (_BudgetSysTotCredit.HasValue);
        }

        private decimal? _BudgetTotDebit;
        public decimal BudgetTotDebit
        {
            get { return _BudgetTotDebit.Value; }
            set { _BudgetTotDebit = value; }
        }
        public bool ShouldSerializeBudgetTotDebit()
        {
            return (_BudgetTotDebit.HasValue);
        }

        private decimal? _BalSysTotCredit;
        public decimal BalSysTotCredit
        {
            get { return _BalSysTotCredit.Value; }
            set { _BalSysTotCredit = value; }
        }
        public bool ShouldSerializeBalSysTotCredit()
        {
            return (_BalSysTotCredit.HasValue);
        }

        private decimal? _BalTotCredit;
        public decimal BalTotCredit
        {
            get { return _BalTotCredit.Value; }
            set { _BalTotCredit = value; }
        }
        public bool ShouldSerializeBalTotCredit()
        {
            return (_BalTotCredit.HasValue);
        }

        private int? _BudgetKey;
        public int BudgetKey
        {
            get { return _BudgetKey.Value; }
            set { _BudgetKey = value; }
        }
        public bool ShouldSerializeBudgetKey()
        {
            return (_BudgetKey.HasValue);
        }

        public string AccountCode { get; set; }
        private decimal? _FutureIncomeDeb;
        public decimal FutureIncomeDeb
        {
            get { return _FutureIncomeDeb.Value; }
            set { _FutureIncomeDeb = value; }
        }
        public bool ShouldSerializeFutureIncomeDeb()
        {
            return (_FutureIncomeDeb.HasValue);
        }

    }

    public class BudgetCostAccountingLine
    {
        public string DistrRuleCode { get; set; }
        private int? _Dimension;
        public int Dimension
        {
            get { return _Dimension.Value; }
            set { _Dimension = value; }
        }
        public bool ShouldSerializeDimension()
        {
            return (_Dimension.HasValue);
        }

        private decimal? _DistrRuleDebitLC;
        public decimal DistrRuleDebitLC
        {
            get { return _DistrRuleDebitLC.Value; }
            set { _DistrRuleDebitLC = value; }
        }
        public bool ShouldSerializeDistrRuleDebitLC()
        {
            return (_DistrRuleDebitLC.HasValue);
        }

        private decimal? _DistrRuleDebitSC;
        public decimal DistrRuleDebitSC
        {
            get { return _DistrRuleDebitSC.Value; }
            set { _DistrRuleDebitSC = value; }
        }
        public bool ShouldSerializeDistrRuleDebitSC()
        {
            return (_DistrRuleDebitSC.HasValue);
        }

        private decimal? _DistrRuleCreditLC;
        public decimal DistrRuleCreditLC
        {
            get { return _DistrRuleCreditLC.Value; }
            set { _DistrRuleCreditLC = value; }
        }
        public bool ShouldSerializeDistrRuleCreditLC()
        {
            return (_DistrRuleCreditLC.HasValue);
        }

        private decimal? _DistrRuleCreditSC;
        public decimal DistrRuleCreditSC
        {
            get { return _DistrRuleCreditSC.Value; }
            set { _DistrRuleCreditSC = value; }
        }
        public bool ShouldSerializeDistrRuleCreditSC()
        {
            return (_DistrRuleCreditSC.HasValue);
        }

    }

    public class BudgetDistribution
    {
        private decimal? _September;
        public decimal September
        {
            get { return _September.Value; }
            set { _September = value; }
        }
        public bool ShouldSerializeSeptember()
        {
            return (_September.HasValue);
        }

        private decimal? _August;
        public decimal August
        {
            get { return _August.Value; }
            set { _August = value; }
        }
        public bool ShouldSerializeAugust()
        {
            return (_August.HasValue);
        }

        private decimal? _July;
        public decimal July
        {
            get { return _July.Value; }
            set { _July = value; }
        }
        public bool ShouldSerializeJuly()
        {
            return (_July.HasValue);
        }

        private decimal? _June;
        public decimal June
        {
            get { return _June.Value; }
            set { _June = value; }
        }
        public bool ShouldSerializeJune()
        {
            return (_June.HasValue);
        }

        private decimal? _May;
        public decimal May
        {
            get { return _May.Value; }
            set { _May = value; }
        }
        public bool ShouldSerializeMay()
        {
            return (_May.HasValue);
        }

        private decimal? _April;
        public decimal April
        {
            get { return _April.Value; }
            set { _April = value; }
        }
        public bool ShouldSerializeApril()
        {
            return (_April.HasValue);
        }

        private decimal? _March;
        public decimal March
        {
            get { return _March.Value; }
            set { _March = value; }
        }
        public bool ShouldSerializeMarch()
        {
            return (_March.HasValue);
        }

        private decimal? _February;
        public decimal February
        {
            get { return _February.Value; }
            set { _February = value; }
        }
        public bool ShouldSerializeFebruary()
        {
            return (_February.HasValue);
        }

        private decimal? _December;
        public decimal December
        {
            get { return _December.Value; }
            set { _December = value; }
        }
        public bool ShouldSerializeDecember()
        {
            return (_December.HasValue);
        }

        private decimal? _November;
        public decimal November
        {
            get { return _November.Value; }
            set { _November = value; }
        }
        public bool ShouldSerializeNovember()
        {
            return (_November.HasValue);
        }

        private decimal? _October;
        public decimal October
        {
            get { return _October.Value; }
            set { _October = value; }
        }
        public bool ShouldSerializeOctober()
        {
            return (_October.HasValue);
        }

        private decimal? _January;
        public decimal January
        {
            get { return _January.Value; }
            set { _January = value; }
        }
        public bool ShouldSerializeJanuary()
        {
            return (_January.HasValue);
        }

        private decimal? _BudgetAmount;
        public decimal BudgetAmount
        {
            get { return _BudgetAmount.Value; }
            set { _BudgetAmount = value; }
        }
        public bool ShouldSerializeBudgetAmount()
        {
            return (_BudgetAmount.HasValue);
        }

        public string Description { get; set; }
        private int? _DivisionCode;
        public int DivisionCode
        {
            get { return _DivisionCode.Value; }
            set { _DivisionCode = value; }
        }
        public bool ShouldSerializeDivisionCode()
        {
            return (_DivisionCode.HasValue);
        }

    }

    public class ItemProperty
    {
        private int? _Number;
        public int Number
        {
            get { return _Number.Value; }
            set { _Number = value; }
        }
        public bool ShouldSerializeNumber()
        {
            return (_Number.HasValue);
        }

        public string PropertyName { get; set; }
    }

    public class AlertManagement
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string Name { get; set; }
        private SAPB1.AlertManagementTypeEnum? _Type;
        public SAPB1.AlertManagementTypeEnum Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

        private SAPB1.AlertManagementPriorityEnum? _Priority;
        public SAPB1.AlertManagementPriorityEnum Priority
        {
            get { return _Priority.Value; }
            set { _Priority = value; }
        }
        public bool ShouldSerializePriority()
        {
            return (_Priority.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Active;
        public SAPB1.BoYesNoEnum Active
        {
            get { return _Active.Value; }
            set { _Active = value; }
        }
        public bool ShouldSerializeActive()
        {
            return (_Active.HasValue);
        }

        public string Param { get; set; }
        private int? _QueryID;
        public int QueryID
        {
            get { return _QueryID.Value; }
            set { _QueryID = value; }
        }
        public bool ShouldSerializeQueryID()
        {
            return (_QueryID.HasValue);
        }

        private SAPB1.AlertManagementFrequencyType? _FrequencyType;
        public SAPB1.AlertManagementFrequencyType FrequencyType
        {
            get { return _FrequencyType.Value; }
            set { _FrequencyType = value; }
        }
        public bool ShouldSerializeFrequencyType()
        {
            return (_FrequencyType.HasValue);
        }

        private int? _DayOfExecution;
        public int DayOfExecution
        {
            get { return _DayOfExecution.Value; }
            set { _DayOfExecution = value; }
        }
        public bool ShouldSerializeDayOfExecution()
        {
            return (_DayOfExecution.HasValue);
        }

        private TimeSpan? _ExecutionTime;
        public TimeSpan ExecutionTime
        {
            get { return _ExecutionTime.Value; }
            set { _ExecutionTime = value; }
        }
        public bool ShouldSerializeExecutionTime()
        {
            return (_ExecutionTime.HasValue);
        }

        private DateTime? _LastExecutionDate;
        public DateTime LastExecutionDate
        {
            get { return _LastExecutionDate.Value; }
            set { _LastExecutionDate = value; }
        }
        public bool ShouldSerializeLastExecutionDate()
        {
            return (_LastExecutionDate.HasValue);
        }

        private int? _LastExecutionTime;
        public int LastExecutionTime
        {
            get { return _LastExecutionTime.Value; }
            set { _LastExecutionTime = value; }
        }
        public bool ShouldSerializeLastExecutionTime()
        {
            return (_LastExecutionTime.HasValue);
        }

        private DateTime? _NextExecutionDate;
        public DateTime NextExecutionDate
        {
            get { return _NextExecutionDate.Value; }
            set { _NextExecutionDate = value; }
        }
        public bool ShouldSerializeNextExecutionDate()
        {
            return (_NextExecutionDate.HasValue);
        }

        private TimeSpan? _NextExecutionTime;
        public TimeSpan NextExecutionTime
        {
            get { return _NextExecutionTime.Value; }
            set { _NextExecutionTime = value; }
        }
        public bool ShouldSerializeNextExecutionTime()
        {
            return (_NextExecutionTime.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SaveHistory;
        public SAPB1.BoYesNoEnum SaveHistory
        {
            get { return _SaveHistory.Value; }
            set { _SaveHistory = value; }
        }
        public bool ShouldSerializeSaveHistory()
        {
            return (_SaveHistory.HasValue);
        }

        private int? _FrequencyInterval;
        public int FrequencyInterval
        {
            get { return _FrequencyInterval.Value; }
            set { _FrequencyInterval = value; }
        }
        public bool ShouldSerializeFrequencyInterval()
        {
            return (_FrequencyInterval.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.AlertManagementRecipient> AlertManagementRecipients { get; set; }
        public System.Collections.Generic.List<SAPB1.AlertManagementDocument> AlertManagementDocuments { get; set; }
    }

    public class AlertManagementRecipient
    {
        private int? _UserCode;
        public int UserCode
        {
            get { return _UserCode.Value; }
            set { _UserCode = value; }
        }
        public bool ShouldSerializeUserCode()
        {
            return (_UserCode.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SendEMail;
        public SAPB1.BoYesNoEnum SendEMail
        {
            get { return _SendEMail.Value; }
            set { _SendEMail = value; }
        }
        public bool ShouldSerializeSendEMail()
        {
            return (_SendEMail.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SendSMS;
        public SAPB1.BoYesNoEnum SendSMS
        {
            get { return _SendSMS.Value; }
            set { _SendSMS = value; }
        }
        public bool ShouldSerializeSendSMS()
        {
            return (_SendSMS.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SendFax;
        public SAPB1.BoYesNoEnum SendFax
        {
            get { return _SendFax.Value; }
            set { _SendFax = value; }
        }
        public bool ShouldSerializeSendFax()
        {
            return (_SendFax.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SendInternal;
        public SAPB1.BoYesNoEnum SendInternal
        {
            get { return _SendInternal.Value; }
            set { _SendInternal = value; }
        }
        public bool ShouldSerializeSendInternal()
        {
            return (_SendInternal.HasValue);
        }

    }

    public class AlertManagementDocument
    {
        private SAPB1.AlertManagementDocumentEnum? _Document;
        public SAPB1.AlertManagementDocumentEnum Document
        {
            get { return _Document.Value; }
            set { _Document = value; }
        }
        public bool ShouldSerializeDocument()
        {
            return (_Document.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Active;
        public SAPB1.BoYesNoEnum Active
        {
            get { return _Active.Value; }
            set { _Active = value; }
        }
        public bool ShouldSerializeActive()
        {
            return (_Active.HasValue);
        }

    }

    public class AlertManagementParams
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        private SAPB1.AlertManagementTypeEnum? _Type;
        public SAPB1.AlertManagementTypeEnum Type
        {
            get { return _Type.Value; }
            set { _Type = value; }
        }
        public bool ShouldSerializeType()
        {
            return (_Type.HasValue);
        }

        public string Name { get; set; }
    }

    public class Message
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        private int? _User;
        public int User
        {
            get { return _User.Value; }
            set { _User = value; }
        }
        public bool ShouldSerializeUser()
        {
            return (_User.HasValue);
        }

        private SAPB1.BoMsgPriorities? _Priority;
        public SAPB1.BoMsgPriorities Priority
        {
            get { return _Priority.Value; }
            set { _Priority = value; }
        }
        public bool ShouldSerializePriority()
        {
            return (_Priority.HasValue);
        }

        public string Subject { get; set; }
        public string Text { get; set; }
        private int? _Attachment;
        public int Attachment
        {
            get { return _Attachment.Value; }
            set { _Attachment = value; }
        }
        public bool ShouldSerializeAttachment()
        {
            return (_Attachment.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.MessageDataColumn> MessageDataColumns { get; set; }
        public System.Collections.Generic.List<SAPB1.Recipient> RecipientCollection { get; set; }
    }

    public class MessageDataColumn
    {
        public string ColumnName { get; set; }
        private SAPB1.BoYesNoEnum? _Link;
        public SAPB1.BoYesNoEnum Link
        {
            get { return _Link.Value; }
            set { _Link = value; }
        }
        public bool ShouldSerializeLink()
        {
            return (_Link.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.MessageDataLine> MessageDataLines { get; set; }
    }

    public class MessageDataLine
    {
        public string Value { get; set; }
        public string Object { get; set; }
        public string ObjectKey { get; set; }
    }

    public class Recipient
    {
        public string UserCode { get; set; }
        private SAPB1.BoMsgRcpTypes? _UserType;
        public SAPB1.BoMsgRcpTypes UserType
        {
            get { return _UserType.Value; }
            set { _UserType = value; }
        }
        public bool ShouldSerializeUserType()
        {
            return (_UserType.HasValue);
        }

        public string NameTo { get; set; }
        private SAPB1.BoYesNoEnum? _SendEmail;
        public SAPB1.BoYesNoEnum SendEmail
        {
            get { return _SendEmail.Value; }
            set { _SendEmail = value; }
        }
        public bool ShouldSerializeSendEmail()
        {
            return (_SendEmail.HasValue);
        }

        public string EmailAddress { get; set; }
        private SAPB1.BoYesNoEnum? _SendSMS;
        public SAPB1.BoYesNoEnum SendSMS
        {
            get { return _SendSMS.Value; }
            set { _SendSMS = value; }
        }
        public bool ShouldSerializeSendSMS()
        {
            return (_SendSMS.HasValue);
        }

        public string CellularNumber { get; set; }
        private SAPB1.BoYesNoEnum? _SendFax;
        public SAPB1.BoYesNoEnum SendFax
        {
            get { return _SendFax.Value; }
            set { _SendFax = value; }
        }
        public bool ShouldSerializeSendFax()
        {
            return (_SendFax.HasValue);
        }

        public string FaxNumber { get; set; }
        private SAPB1.BoYesNoEnum? _SendInternal;
        public SAPB1.BoYesNoEnum SendInternal
        {
            get { return _SendInternal.Value; }
            set { _SendInternal = value; }
        }
        public bool ShouldSerializeSendInternal()
        {
            return (_SendInternal.HasValue);
        }

    }

    public class MessageHeader
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Received;
        public SAPB1.BoYesNoEnum Received
        {
            get { return _Received.Value; }
            set { _Received = value; }
        }
        public bool ShouldSerializeReceived()
        {
            return (_Received.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Read;
        public SAPB1.BoYesNoEnum Read
        {
            get { return _Read.Value; }
            set { _Read = value; }
        }
        public bool ShouldSerializeRead()
        {
            return (_Read.HasValue);
        }

        private DateTime? _ReceivedDate;
        public DateTime ReceivedDate
        {
            get { return _ReceivedDate.Value; }
            set { _ReceivedDate = value; }
        }
        public bool ShouldSerializeReceivedDate()
        {
            return (_ReceivedDate.HasValue);
        }

        private TimeSpan? _ReceivedTime;
        public TimeSpan ReceivedTime
        {
            get { return _ReceivedTime.Value; }
            set { _ReceivedTime = value; }
        }
        public bool ShouldSerializeReceivedTime()
        {
            return (_ReceivedTime.HasValue);
        }

        private DateTime? _SentDate;
        public DateTime SentDate
        {
            get { return _SentDate.Value; }
            set { _SentDate = value; }
        }
        public bool ShouldSerializeSentDate()
        {
            return (_SentDate.HasValue);
        }

        private TimeSpan? _SentTime;
        public TimeSpan SentTime
        {
            get { return _SentTime.Value; }
            set { _SentTime = value; }
        }
        public bool ShouldSerializeSentTime()
        {
            return (_SentTime.HasValue);
        }

    }

    public class BudgetScenario
    {
        public string Name { get; set; }
        private decimal? _InitialRatioPercentage;
        public decimal InitialRatioPercentage
        {
            get { return _InitialRatioPercentage.Value; }
            set { _InitialRatioPercentage = value; }
        }
        public bool ShouldSerializeInitialRatioPercentage()
        {
            return (_InitialRatioPercentage.HasValue);
        }

        private DateTime? _StartofFiscalYear;
        public DateTime StartofFiscalYear
        {
            get { return _StartofFiscalYear.Value; }
            set { _StartofFiscalYear = value; }
        }
        public bool ShouldSerializeStartofFiscalYear()
        {
            return (_StartofFiscalYear.HasValue);
        }

        private int? _BasicBudget;
        public int BasicBudget
        {
            get { return _BasicBudget.Value; }
            set { _BasicBudget = value; }
        }
        public bool ShouldSerializeBasicBudget()
        {
            return (_BasicBudget.HasValue);
        }

        private int? _Numerator;
        public int Numerator
        {
            get { return _Numerator.Value; }
            set { _Numerator = value; }
        }
        public bool ShouldSerializeNumerator()
        {
            return (_Numerator.HasValue);
        }

        private SAPB1.BoRoundingMethod? _RoundingMethod;
        public SAPB1.BoRoundingMethod RoundingMethod
        {
            get { return _RoundingMethod.Value; }
            set { _RoundingMethod = value; }
        }
        public bool ShouldSerializeRoundingMethod()
        {
            return (_RoundingMethod.HasValue);
        }

        public string Project { get; set; }
        public string DistributionRule { get; set; }
        public string DistributionRule2 { get; set; }
        public string DistributionRule3 { get; set; }
        public string DistributionRule4 { get; set; }
        public string DistributionRule5 { get; set; }
    }

    public class UserDefaultGroup
    {
        public string Code { get; set; }
        public string Name { get; set; }
        public string Warehouse { get; set; }
        private int? _SalesEmployee;
        public int SalesEmployee
        {
            get { return _SalesEmployee.Value; }
            set { _SalesEmployee = value; }
        }
        public bool ShouldSerializeSalesEmployee()
        {
            return (_SalesEmployee.HasValue);
        }

        public string BPforInvoicePayment { get; set; }
        public string CashAccount { get; set; }
        public string CheckingAcct { get; set; }
        private SAPB1.BoPrintReceiptEnum? _PrintReceipt;
        public SAPB1.BoPrintReceiptEnum PrintReceipt
        {
            get { return _PrintReceipt.Value; }
            set { _PrintReceipt = value; }
        }
        public bool ShouldSerializePrintReceipt()
        {
            return (_PrintReceipt.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PrintInvoiceandPaymentinS;
        public SAPB1.BoYesNoEnum PrintInvoiceandPaymentinS
        {
            get { return _PrintInvoiceandPaymentinS.Value; }
            set { _PrintInvoiceandPaymentinS = value; }
        }
        public bool ShouldSerializePrintInvoiceandPaymentinS()
        {
            return (_PrintInvoiceandPaymentinS.HasValue);
        }

        private int? _WindowsColor;
        public int WindowsColor
        {
            get { return _WindowsColor.Value; }
            set { _WindowsColor = value; }
        }
        public bool ShouldSerializeWindowsColor()
        {
            return (_WindowsColor.HasValue);
        }

        public string Address { get; set; }
        public string Country { get; set; }
        public string PrintingHeader { get; set; }
        public string PhoneNumber1 { get; set; }
        public string PhoneNumber2 { get; set; }
        public string FaxNumber { get; set; }
        public string eMail { get; set; }
        public string AddressinForeignLanguage { get; set; }
        public string PrintingHeaderInForeignLangu { get; set; }
        public string PhoneNumber1ForeignLang { get; set; }
        public string PhoneNumber2ForeignLang { get; set; }
        public string FaxNumberForeignLang { get; set; }
        public string DefaultTaxCode { get; set; }
        public string AdditionalIdNumber { get; set; }
        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        private SAPB1.BoYesNoEnum? _UseTax;
        public SAPB1.BoYesNoEnum UseTax
        {
            get { return _UseTax.Value; }
            set { _UseTax = value; }
        }
        public bool ShouldSerializeUseTax()
        {
            return (_UseTax.HasValue);
        }

        private SAPB1.BoYesNoEnum? _UseWarehouseAddressinAPD;
        public SAPB1.BoYesNoEnum UseWarehouseAddressinAPD
        {
            get { return _UseWarehouseAddressinAPD.Value; }
            set { _UseWarehouseAddressinAPD = value; }
        }
        public bool ShouldSerializeUseWarehouseAddressinAPD()
        {
            return (_UseWarehouseAddressinAPD.HasValue);
        }

        private int? _BPLID;
        public int BPLID
        {
            get { return _BPLID.Value; }
            set { _BPLID = value; }
        }
        public bool ShouldSerializeBPLID()
        {
            return (_BPLID.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AssetInDoc;
        public SAPB1.BoYesNoEnum AssetInDoc
        {
            get { return _AssetInDoc.Value; }
            set { _AssetInDoc = value; }
        }
        public bool ShouldSerializeAssetInDoc()
        {
            return (_AssetInDoc.HasValue);
        }

    }

    public class SalesOpportunitiesParams
    {
        private int? _SequentialNo;
        public int SequentialNo
        {
            get { return _SequentialNo.Value; }
            set { _SequentialNo = value; }
        }
        public bool ShouldSerializeSequentialNo()
        {
            return (_SequentialNo.HasValue);
        }

    }

    public class SalesOpportunities
    {
        private int? _SequentialNo;
        public int SequentialNo
        {
            get { return _SequentialNo.Value; }
            set { _SequentialNo = value; }
        }
        public bool ShouldSerializeSequentialNo()
        {
            return (_SequentialNo.HasValue);
        }

        public string CardCode { get; set; }
        private int? _SalesPerson;
        public int SalesPerson
        {
            get { return _SalesPerson.Value; }
            set { _SalesPerson = value; }
        }
        public bool ShouldSerializeSalesPerson()
        {
            return (_SalesPerson.HasValue);
        }

        private int? _ContactPerson;
        public int ContactPerson
        {
            get { return _ContactPerson.Value; }
            set { _ContactPerson = value; }
        }
        public bool ShouldSerializeContactPerson()
        {
            return (_ContactPerson.HasValue);
        }

        private int? _Source;
        public int Source
        {
            get { return _Source.Value; }
            set { _Source = value; }
        }
        public bool ShouldSerializeSource()
        {
            return (_Source.HasValue);
        }

        private int? _InterestField1;
        public int InterestField1
        {
            get { return _InterestField1.Value; }
            set { _InterestField1 = value; }
        }
        public bool ShouldSerializeInterestField1()
        {
            return (_InterestField1.HasValue);
        }

        private int? _InterestField2;
        public int InterestField2
        {
            get { return _InterestField2.Value; }
            set { _InterestField2 = value; }
        }
        public bool ShouldSerializeInterestField2()
        {
            return (_InterestField2.HasValue);
        }

        private int? _InterestField3;
        public int InterestField3
        {
            get { return _InterestField3.Value; }
            set { _InterestField3 = value; }
        }
        public bool ShouldSerializeInterestField3()
        {
            return (_InterestField3.HasValue);
        }

        private int? _InterestLevel;
        public int InterestLevel
        {
            get { return _InterestLevel.Value; }
            set { _InterestLevel = value; }
        }
        public bool ShouldSerializeInterestLevel()
        {
            return (_InterestLevel.HasValue);
        }

        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private DateTime? _PredictedClosingDate;
        public DateTime PredictedClosingDate
        {
            get { return _PredictedClosingDate.Value; }
            set { _PredictedClosingDate = value; }
        }
        public bool ShouldSerializePredictedClosingDate()
        {
            return (_PredictedClosingDate.HasValue);
        }

        private decimal? _MaxLocalTotal;
        public decimal MaxLocalTotal
        {
            get { return _MaxLocalTotal.Value; }
            set { _MaxLocalTotal = value; }
        }
        public bool ShouldSerializeMaxLocalTotal()
        {
            return (_MaxLocalTotal.HasValue);
        }

        private decimal? _MaxSystemTotal;
        public decimal MaxSystemTotal
        {
            get { return _MaxSystemTotal.Value; }
            set { _MaxSystemTotal = value; }
        }
        public bool ShouldSerializeMaxSystemTotal()
        {
            return (_MaxSystemTotal.HasValue);
        }

        private decimal? _WeightedSumLC;
        public decimal WeightedSumLC
        {
            get { return _WeightedSumLC.Value; }
            set { _WeightedSumLC = value; }
        }
        public bool ShouldSerializeWeightedSumLC()
        {
            return (_WeightedSumLC.HasValue);
        }

        private decimal? _WeightedSumSC;
        public decimal WeightedSumSC
        {
            get { return _WeightedSumSC.Value; }
            set { _WeightedSumSC = value; }
        }
        public bool ShouldSerializeWeightedSumSC()
        {
            return (_WeightedSumSC.HasValue);
        }

        private decimal? _GrossProfit;
        public decimal GrossProfit
        {
            get { return _GrossProfit.Value; }
            set { _GrossProfit = value; }
        }
        public bool ShouldSerializeGrossProfit()
        {
            return (_GrossProfit.HasValue);
        }

        private decimal? _GrossProfitTotalLocal;
        public decimal GrossProfitTotalLocal
        {
            get { return _GrossProfitTotalLocal.Value; }
            set { _GrossProfitTotalLocal = value; }
        }
        public bool ShouldSerializeGrossProfitTotalLocal()
        {
            return (_GrossProfitTotalLocal.HasValue);
        }

        private decimal? _GrossProfitTotalSystem;
        public decimal GrossProfitTotalSystem
        {
            get { return _GrossProfitTotalSystem.Value; }
            set { _GrossProfitTotalSystem = value; }
        }
        public bool ShouldSerializeGrossProfitTotalSystem()
        {
            return (_GrossProfitTotalSystem.HasValue);
        }

        public string Remarks { get; set; }
        private SAPB1.BoSoOsStatus? _Status;
        public SAPB1.BoSoOsStatus Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private int? _ReasonForClosing;
        public int ReasonForClosing
        {
            get { return _ReasonForClosing.Value; }
            set { _ReasonForClosing = value; }
        }
        public bool ShouldSerializeReasonForClosing()
        {
            return (_ReasonForClosing.HasValue);
        }

        private decimal? _TotalAmountLocal;
        public decimal TotalAmountLocal
        {
            get { return _TotalAmountLocal.Value; }
            set { _TotalAmountLocal = value; }
        }
        public bool ShouldSerializeTotalAmountLocal()
        {
            return (_TotalAmountLocal.HasValue);
        }

        private decimal? _TotalAmounSystem;
        public decimal TotalAmounSystem
        {
            get { return _TotalAmounSystem.Value; }
            set { _TotalAmounSystem = value; }
        }
        public bool ShouldSerializeTotalAmounSystem()
        {
            return (_TotalAmounSystem.HasValue);
        }

        private decimal? _ClosingGrossProfitLocal;
        public decimal ClosingGrossProfitLocal
        {
            get { return _ClosingGrossProfitLocal.Value; }
            set { _ClosingGrossProfitLocal = value; }
        }
        public bool ShouldSerializeClosingGrossProfitLocal()
        {
            return (_ClosingGrossProfitLocal.HasValue);
        }

        private decimal? _ClosingGrossProfitSystem;
        public decimal ClosingGrossProfitSystem
        {
            get { return _ClosingGrossProfitSystem.Value; }
            set { _ClosingGrossProfitSystem = value; }
        }
        public bool ShouldSerializeClosingGrossProfitSystem()
        {
            return (_ClosingGrossProfitSystem.HasValue);
        }

        private decimal? _ClosingPercentage;
        public decimal ClosingPercentage
        {
            get { return _ClosingPercentage.Value; }
            set { _ClosingPercentage = value; }
        }
        public bool ShouldSerializeClosingPercentage()
        {
            return (_ClosingPercentage.HasValue);
        }

        private int? _CurrentStageNo;
        public int CurrentStageNo
        {
            get { return _CurrentStageNo.Value; }
            set { _CurrentStageNo = value; }
        }
        public bool ShouldSerializeCurrentStageNo()
        {
            return (_CurrentStageNo.HasValue);
        }

        private int? _CurrentStageNumber;
        public int CurrentStageNumber
        {
            get { return _CurrentStageNumber.Value; }
            set { _CurrentStageNumber = value; }
        }
        public bool ShouldSerializeCurrentStageNumber()
        {
            return (_CurrentStageNumber.HasValue);
        }

        public string OpportunityName { get; set; }
        private int? _Industry;
        public int Industry
        {
            get { return _Industry.Value; }
            set { _Industry = value; }
        }
        public bool ShouldSerializeIndustry()
        {
            return (_Industry.HasValue);
        }

        public string LinkedDocumentType { get; set; }
        private int? _DataOwnershipfield;
        public int DataOwnershipfield
        {
            get { return _DataOwnershipfield.Value; }
            set { _DataOwnershipfield = value; }
        }
        public bool ShouldSerializeDataOwnershipfield()
        {
            return (_DataOwnershipfield.HasValue);
        }

        public string StatusRemarks { get; set; }
        public string ProjectCode { get; set; }
        public string BPChanelName { get; set; }
        private int? _UserSignature;
        public int UserSignature
        {
            get { return _UserSignature.Value; }
            set { _UserSignature = value; }
        }
        public bool ShouldSerializeUserSignature()
        {
            return (_UserSignature.HasValue);
        }

        public string CustomerName { get; set; }
        public string DocumentCheckbox { get; set; }
        private int? _LinkedDocumentNumber;
        public int LinkedDocumentNumber
        {
            get { return _LinkedDocumentNumber.Value; }
            set { _LinkedDocumentNumber = value; }
        }
        public bool ShouldSerializeLinkedDocumentNumber()
        {
            return (_LinkedDocumentNumber.HasValue);
        }

        private int? _Territory;
        public int Territory
        {
            get { return _Territory.Value; }
            set { _Territory = value; }
        }
        public bool ShouldSerializeTerritory()
        {
            return (_Territory.HasValue);
        }

        private DateTime? _ClosingDate;
        public DateTime ClosingDate
        {
            get { return _ClosingDate.Value; }
            set { _ClosingDate = value; }
        }
        public bool ShouldSerializeClosingDate()
        {
            return (_ClosingDate.HasValue);
        }

        private int? _BPChannelContact;
        public int BPChannelContact
        {
            get { return _BPChannelContact.Value; }
            set { _BPChannelContact = value; }
        }
        public bool ShouldSerializeBPChannelContact()
        {
            return (_BPChannelContact.HasValue);
        }

        public string BPChanelCode { get; set; }
        private SAPB1.BoSoClosedInTypes? _ClosingType;
        public SAPB1.BoSoClosedInTypes ClosingType
        {
            get { return _ClosingType.Value; }
            set { _ClosingType = value; }
        }
        public bool ShouldSerializeClosingType()
        {
            return (_ClosingType.HasValue);
        }

        private int? _AttachmentEntry;
        public int AttachmentEntry
        {
            get { return _AttachmentEntry.Value; }
            set { _AttachmentEntry = value; }
        }
        public bool ShouldSerializeAttachmentEntry()
        {
            return (_AttachmentEntry.HasValue);
        }

        private SAPB1.OpportunityTypeEnum? _OpportunityType;
        public SAPB1.OpportunityTypeEnum OpportunityType
        {
            get { return _OpportunityType.Value; }
            set { _OpportunityType = value; }
        }
        public bool ShouldSerializeOpportunityType()
        {
            return (_OpportunityType.HasValue);
        }

        public System.Collections.Generic.List<SAPB1.SalesOpportunitiesLine> SalesOpportunitiesLines { get; set; }
        public System.Collections.Generic.List<SAPB1.SalesOpportunitiesCompetitionItem> SalesOpportunitiesCompetition { get; set; }
        public System.Collections.Generic.List<SAPB1.SalesOpportunitiesPartner> SalesOpportunitiesPartners { get; set; }
        public System.Collections.Generic.List<SAPB1.SalesOpportunitiesInterest> SalesOpportunitiesInterests { get; set; }
        public System.Collections.Generic.List<SAPB1.SalesOpportunitiesReason> SalesOpportunitiesReasons { get; set; }
    }

    public class SalesOpportunitiesLine
    {
        private int? _LineNum;
        public int LineNum
        {
            get { return _LineNum.Value; }
            set { _LineNum = value; }
        }
        public bool ShouldSerializeLineNum()
        {
            return (_LineNum.HasValue);
        }

        private int? _SalesPerson;
        public int SalesPerson
        {
            get { return _SalesPerson.Value; }
            set { _SalesPerson = value; }
        }
        public bool ShouldSerializeSalesPerson()
        {
            return (_SalesPerson.HasValue);
        }

        private DateTime? _StartDate;
        public DateTime StartDate
        {
            get { return _StartDate.Value; }
            set { _StartDate = value; }
        }
        public bool ShouldSerializeStartDate()
        {
            return (_StartDate.HasValue);
        }

        private DateTime? _ClosingDate;
        public DateTime ClosingDate
        {
            get { return _ClosingDate.Value; }
            set { _ClosingDate = value; }
        }
        public bool ShouldSerializeClosingDate()
        {
            return (_ClosingDate.HasValue);
        }

        private int? _StageKey;
        public int StageKey
        {
            get { return _StageKey.Value; }
            set { _StageKey = value; }
        }
        public bool ShouldSerializeStageKey()
        {
            return (_StageKey.HasValue);
        }

        private decimal? _PercentageRate;
        public decimal PercentageRate
        {
            get { return _PercentageRate.Value; }
            set { _PercentageRate = value; }
        }
        public bool ShouldSerializePercentageRate()
        {
            return (_PercentageRate.HasValue);
        }

        private decimal? _MaxLocalTotal;
        public decimal MaxLocalTotal
        {
            get { return _MaxLocalTotal.Value; }
            set { _MaxLocalTotal = value; }
        }
        public bool ShouldSerializeMaxLocalTotal()
        {
            return (_MaxLocalTotal.HasValue);
        }

        private decimal? _MaxSystemTotal;
        public decimal MaxSystemTotal
        {
            get { return _MaxSystemTotal.Value; }
            set { _MaxSystemTotal = value; }
        }
        public bool ShouldSerializeMaxSystemTotal()
        {
            return (_MaxSystemTotal.HasValue);
        }

        public string Remarks { get; set; }
        private SAPB1.BoYesNoEnum? _Contact;
        public SAPB1.BoYesNoEnum Contact
        {
            get { return _Contact.Value; }
            set { _Contact = value; }
        }
        public bool ShouldSerializeContact()
        {
            return (_Contact.HasValue);
        }

        private SAPB1.BoSoStatus? _Status;
        public SAPB1.BoSoStatus Status
        {
            get { return _Status.Value; }
            set { _Status = value; }
        }
        public bool ShouldSerializeStatus()
        {
            return (_Status.HasValue);
        }

        private decimal? _WeightedAmountLocal;
        public decimal WeightedAmountLocal
        {
            get { return _WeightedAmountLocal.Value; }
            set { _WeightedAmountLocal = value; }
        }
        public bool ShouldSerializeWeightedAmountLocal()
        {
            return (_WeightedAmountLocal.HasValue);
        }

        private decimal? _WeightedAmountSystem;
        public decimal WeightedAmountSystem
        {
            get { return _WeightedAmountSystem.Value; }
            set { _WeightedAmountSystem = value; }
        }
        public bool ShouldSerializeWeightedAmountSystem()
        {
            return (_WeightedAmountSystem.HasValue);
        }

        private int? _DocumentNumber;
        public int DocumentNumber
        {
            get { return _DocumentNumber.Value; }
            set { _DocumentNumber = value; }
        }
        public bool ShouldSerializeDocumentNumber()
        {
            return (_DocumentNumber.HasValue);
        }

        private SAPB1.BoAPARDocumentTypes? _DocumentType;
        public SAPB1.BoAPARDocumentTypes DocumentType
        {
            get { return _DocumentType.Value; }
            set { _DocumentType = value; }
        }
        public bool ShouldSerializeDocumentType()
        {
            return (_DocumentType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DocumentCheckbox;
        public SAPB1.BoYesNoEnum DocumentCheckbox
        {
            get { return _DocumentCheckbox.Value; }
            set { _DocumentCheckbox = value; }
        }
        public bool ShouldSerializeDocumentCheckbox()
        {
            return (_DocumentCheckbox.HasValue);
        }

        private int? _ContactPerson;
        public int ContactPerson
        {
            get { return _ContactPerson.Value; }
            set { _ContactPerson = value; }
        }
        public bool ShouldSerializeContactPerson()
        {
            return (_ContactPerson.HasValue);
        }

        public string BPChanelName { get; set; }
        public string BPChanelCode { get; set; }
        private int? _SequenceNo;
        public int SequenceNo
        {
            get { return _SequenceNo.Value; }
            set { _SequenceNo = value; }
        }
        public bool ShouldSerializeSequenceNo()
        {
            return (_SequenceNo.HasValue);
        }

        private int? _DataOwnershipfield;
        public int DataOwnershipfield
        {
            get { return _DataOwnershipfield.Value; }
            set { _DataOwnershipfield = value; }
        }
        public bool ShouldSerializeDataOwnershipfield()
        {
            return (_DataOwnershipfield.HasValue);
        }

        private int? _BPChannelContact;
        public int BPChannelContact
        {
            get { return _BPChannelContact.Value; }
            set { _BPChannelContact = value; }
        }
        public bool ShouldSerializeBPChannelContact()
        {
            return (_BPChannelContact.HasValue);
        }

    }

    public class SalesOpportunitiesCompetitionItem
    {
        private int? _RowNo;
        public int RowNo
        {
            get { return _RowNo.Value; }
            set { _RowNo = value; }
        }
        public bool ShouldSerializeRowNo()
        {
            return (_RowNo.HasValue);
        }

        private int? _Competition;
        public int Competition
        {
            get { return _Competition.Value; }
            set { _Competition = value; }
        }
        public bool ShouldSerializeCompetition()
        {
            return (_Competition.HasValue);
        }

        public string Details { get; set; }
        private int? _SequenceNo;
        public int SequenceNo
        {
            get { return _SequenceNo.Value; }
            set { _SequenceNo = value; }
        }
        public bool ShouldSerializeSequenceNo()
        {
            return (_SequenceNo.HasValue);
        }

        public string WonOrLost { get; set; }
    }

    public class SalesOpportunitiesPartner
    {
        private int? _RowNo;
        public int RowNo
        {
            get { return _RowNo.Value; }
            set { _RowNo = value; }
        }
        public bool ShouldSerializeRowNo()
        {
            return (_RowNo.HasValue);
        }

        private int? _Partners;
        public int Partners
        {
            get { return _Partners.Value; }
            set { _Partners = value; }
        }
        public bool ShouldSerializePartners()
        {
            return (_Partners.HasValue);
        }

        public string Details { get; set; }
        private int? _RelationshipCode;
        public int RelationshipCode
        {
            get { return _RelationshipCode.Value; }
            set { _RelationshipCode = value; }
        }
        public bool ShouldSerializeRelationshipCode()
        {
            return (_RelationshipCode.HasValue);
        }

        private int? _SequenceNo;
        public int SequenceNo
        {
            get { return _SequenceNo.Value; }
            set { _SequenceNo = value; }
        }
        public bool ShouldSerializeSequenceNo()
        {
            return (_SequenceNo.HasValue);
        }

    }

    public class SalesOpportunitiesInterest
    {
        private int? _RowNo;
        public int RowNo
        {
            get { return _RowNo.Value; }
            set { _RowNo = value; }
        }
        public bool ShouldSerializeRowNo()
        {
            return (_RowNo.HasValue);
        }

        private int? _SequenceNo;
        public int SequenceNo
        {
            get { return _SequenceNo.Value; }
            set { _SequenceNo = value; }
        }
        public bool ShouldSerializeSequenceNo()
        {
            return (_SequenceNo.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PrimaryInterest;
        public SAPB1.BoYesNoEnum PrimaryInterest
        {
            get { return _PrimaryInterest.Value; }
            set { _PrimaryInterest = value; }
        }
        public bool ShouldSerializePrimaryInterest()
        {
            return (_PrimaryInterest.HasValue);
        }

        private int? _InterestId;
        public int InterestId
        {
            get { return _InterestId.Value; }
            set { _InterestId = value; }
        }
        public bool ShouldSerializeInterestId()
        {
            return (_InterestId.HasValue);
        }

    }

    public class SalesOpportunitiesReason
    {
        private int? _RowNo;
        public int RowNo
        {
            get { return _RowNo.Value; }
            set { _RowNo = value; }
        }
        public bool ShouldSerializeRowNo()
        {
            return (_RowNo.HasValue);
        }

        private int? _SequenceNo;
        public int SequenceNo
        {
            get { return _SequenceNo.Value; }
            set { _SequenceNo = value; }
        }
        public bool ShouldSerializeSequenceNo()
        {
            return (_SequenceNo.HasValue);
        }

        private int? _Reason;
        public int Reason
        {
            get { return _Reason.Value; }
            set { _Reason = value; }
        }
        public bool ShouldSerializeReason()
        {
            return (_Reason.HasValue);
        }

    }

    public class DMS_ROUTESETTING
    {
        public string Code { get; set; }
        public string Name { get; set; }
        private int? _DocEntry;
        public int DocEntry
        {
            get { return _DocEntry.Value; }
            set { _DocEntry = value; }
        }
        public bool ShouldSerializeDocEntry()
        {
            return (_DocEntry.HasValue);
        }

        public string Canceled { get; set; }
        public string Object { get; set; }
        private int? _LogInst;
        public int LogInst
        {
            get { return _LogInst.Value; }
            set { _LogInst = value; }
        }
        public bool ShouldSerializeLogInst()
        {
            return (_LogInst.HasValue);
        }

        private int? _UserSign;
        public int UserSign
        {
            get { return _UserSign.Value; }
            set { _UserSign = value; }
        }
        public bool ShouldSerializeUserSign()
        {
            return (_UserSign.HasValue);
        }

        public string Transfered { get; set; }
        private DateTime? _CreateDate;
        public DateTime CreateDate
        {
            get { return _CreateDate.Value; }
            set { _CreateDate = value; }
        }
        public bool ShouldSerializeCreateDate()
        {
            return (_CreateDate.HasValue);
        }

        private int? _CreateTime;
        public int CreateTime
        {
            get { return _CreateTime.Value; }
            set { _CreateTime = value; }
        }
        public bool ShouldSerializeCreateTime()
        {
            return (_CreateTime.HasValue);
        }

        private DateTime? _UpdateDate;
        public DateTime UpdateDate
        {
            get { return _UpdateDate.Value; }
            set { _UpdateDate = value; }
        }
        public bool ShouldSerializeUpdateDate()
        {
            return (_UpdateDate.HasValue);
        }

        private int? _UpdateTime;
        public int UpdateTime
        {
            get { return _UpdateTime.Value; }
            set { _UpdateTime = value; }
        }
        public bool ShouldSerializeUpdateTime()
        {
            return (_UpdateTime.HasValue);
        }

        public string DataSource { get; set; }
        public string U_RefNo { get; set; }
        public string U_Description { get; set; }
        public System.Collections.Generic.List<SAPB1.DMS_RS_LINES> DMS_RS_LINESCollection { get; set; }
    }

    public class DMS_RS_LINES
    {
        public string Code { get; set; }
        private int? _LineId;
        public int LineId
        {
            get { return _LineId.Value; }
            set { _LineId = value; }
        }
        public bool ShouldSerializeLineId()
        {
            return (_LineId.HasValue);
        }

        public string Object { get; set; }
        private int? _LogInst;
        public int LogInst
        {
            get { return _LogInst.Value; }
            set { _LogInst = value; }
        }
        public bool ShouldSerializeLogInst()
        {
            return (_LogInst.HasValue);
        }

        public string U_Monday { get; set; }
        private int? _U_StartWeek;
        public int U_StartWeek
        {
            get { return _U_StartWeek.Value; }
            set { _U_StartWeek = value; }
        }
        public bool ShouldSerializeU_StartWeek()
        {
            return (_U_StartWeek.HasValue);
        }

        public string U_Status { get; set; }
    }

    public class DMS_ROUTESETTINGParams
    {
        public string Code { get; set; }
    }

    public class InvokeParams
    {
        public string Value { get; set; }
    }

    public class B1Session
    {
        public string SessionId { get; set; }
        public string Version { get; set; }
        private int? _SessionTimeout;
        public int SessionTimeout
        {
            get { return _SessionTimeout.Value; }
            set { _SessionTimeout = value; }
        }
        public bool ShouldSerializeSessionTimeout()
        {
            return (_SessionTimeout.HasValue);
        }

    }

    public class ItemImage
    {
        public string ItemCode { get; set; }
        public string Picture { get; set; }
    }

    public class ItemPriceParams
    {
        private DateTime? _Date;
        public DateTime Date
        {
            get { return _Date.Value; }
            set { _Date = value; }
        }
        public bool ShouldSerializeDate()
        {
            return (_Date.HasValue);
        }

        private int? _UoMEntry;
        public int UoMEntry
        {
            get { return _UoMEntry.Value; }
            set { _UoMEntry = value; }
        }
        public bool ShouldSerializeUoMEntry()
        {
            return (_UoMEntry.HasValue);
        }

        private int? _BlanketAgreementNumber;
        public int BlanketAgreementNumber
        {
            get { return _BlanketAgreementNumber.Value; }
            set { _BlanketAgreementNumber = value; }
        }
        public bool ShouldSerializeBlanketAgreementNumber()
        {
            return (_BlanketAgreementNumber.HasValue);
        }

        private int? _BlanketAgreementLine;
        public int BlanketAgreementLine
        {
            get { return _BlanketAgreementLine.Value; }
            set { _BlanketAgreementLine = value; }
        }
        public bool ShouldSerializeBlanketAgreementLine()
        {
            return (_BlanketAgreementLine.HasValue);
        }

        private decimal? _UoMQuantity;
        public decimal UoMQuantity
        {
            get { return _UoMQuantity.Value; }
            set { _UoMQuantity = value; }
        }
        public bool ShouldSerializeUoMQuantity()
        {
            return (_UoMQuantity.HasValue);
        }

        private decimal? _InventoryQuantity;
        public decimal InventoryQuantity
        {
            get { return _InventoryQuantity.Value; }
            set { _InventoryQuantity = value; }
        }
        public bool ShouldSerializeInventoryQuantity()
        {
            return (_InventoryQuantity.HasValue);
        }

        public string Currency { get; set; }
        public string ItemCode { get; set; }
        public string CardCode { get; set; }
        private int? _PriceList;
        public int PriceList
        {
            get { return _PriceList.Value; }
            set { _PriceList = value; }
        }
        public bool ShouldSerializePriceList()
        {
            return (_PriceList.HasValue);
        }

    }

    public class ItemPriceReturnParams
    {
        private decimal? _Price;
        public decimal Price
        {
            get { return _Price.Value; }
            set { _Price = value; }
        }
        public bool ShouldSerializePrice()
        {
            return (_Price.HasValue);
        }

        public string Currency { get; set; }
        private decimal? _Discount;
        public decimal Discount
        {
            get { return _Discount.Value; }
            set { _Discount = value; }
        }
        public bool ShouldSerializeDiscount()
        {
            return (_Discount.HasValue);
        }

    }

    public class AdvancedGLAccountParams
    {
        public string ItemCode { get; set; }
        public string Warehouse { get; set; }
        public string BPCode { get; set; }
        public string FederalTaxID { get; set; }
        public string ShipToCountry { get; set; }
        public string ShipToState { get; set; }
        public string VatGroup { get; set; }
        private DateTime? _PostingDate;
        public DateTime PostingDate
        {
            get { return _PostingDate.Value; }
            set { _PostingDate = value; }
        }
        public bool ShouldSerializePostingDate()
        {
            return (_PostingDate.HasValue);
        }

        private SAPB1.InventoryAccountTypeEnum? _AccountType;
        public SAPB1.InventoryAccountTypeEnum AccountType
        {
            get { return _AccountType.Value; }
            set { _AccountType = value; }
        }
        public bool ShouldSerializeAccountType()
        {
            return (_AccountType.HasValue);
        }

        private int? _Usage;
        public int Usage
        {
            get { return _Usage.Value; }
            set { _Usage = value; }
        }
        public bool ShouldSerializeUsage()
        {
            return (_Usage.HasValue);
        }

    }

    public class AdvancedGLAccountReturnParams
    {
        public string AccountCode { get; set; }
    }

    public class CompanyInfo
    {
        private int? _Version;
        public int Version
        {
            get { return _Version.Value; }
            set { _Version = value; }
        }
        public bool ShouldSerializeVersion()
        {
            return (_Version.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableExpensesManagement;
        public SAPB1.BoYesNoEnum EnableExpensesManagement
        {
            get { return _EnableExpensesManagement.Value; }
            set { _EnableExpensesManagement = value; }
        }
        public bool ShouldSerializeEnableExpensesManagement()
        {
            return (_EnableExpensesManagement.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableAccountSegmentation;
        public SAPB1.BoYesNoEnum EnableAccountSegmentation
        {
            get { return _EnableAccountSegmentation.Value; }
            set { _EnableAccountSegmentation = value; }
        }
        public bool ShouldSerializeEnableAccountSegmentation()
        {
            return (_EnableAccountSegmentation.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableBillOfExchange;
        public SAPB1.BoYesNoEnum EnableBillOfExchange
        {
            get { return _EnableBillOfExchange.Value; }
            set { _EnableBillOfExchange = value; }
        }
        public bool ShouldSerializeEnableBillOfExchange()
        {
            return (_EnableBillOfExchange.HasValue);
        }

        private SAPB1.BoBaseDateRateEnum? _BaseDateForExchangeRate;
        public SAPB1.BoBaseDateRateEnum BaseDateForExchangeRate
        {
            get { return _BaseDateForExchangeRate.Value; }
            set { _BaseDateForExchangeRate = value; }
        }
        public bool ShouldSerializeBaseDateForExchangeRate()
        {
            return (_BaseDateForExchangeRate.HasValue);
        }

        private int? _BISRBankActKey;
        public int BISRBankActKey
        {
            get { return _BISRBankActKey.Value; }
            set { _BISRBankActKey = value; }
        }
        public bool ShouldSerializeBISRBankActKey()
        {
            return (_BISRBankActKey.HasValue);
        }

        public string BISRBankCountry { get; set; }
        public string BISRBankNo { get; set; }
        public string BISRBankAccount { get; set; }
        public string BISRBranch { get; set; }
        private int? _MaxRecordsInChooseFromList;
        public int MaxRecordsInChooseFromList
        {
            get { return _MaxRecordsInChooseFromList.Value; }
            set { _MaxRecordsInChooseFromList = value; }
        }
        public bool ShouldSerializeMaxRecordsInChooseFromList()
        {
            return (_MaxRecordsInChooseFromList.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableCheckQuantityInRDR;
        public SAPB1.BoYesNoEnum EnableCheckQuantityInRDR
        {
            get { return _EnableCheckQuantityInRDR.Value; }
            set { _EnableCheckQuantityInRDR = value; }
        }
        public bool ShouldSerializeEnableCheckQuantityInRDR()
        {
            return (_EnableCheckQuantityInRDR.HasValue);
        }

        private SAPB1.BoManageMethod? _SRIManagementSystem;
        public SAPB1.BoManageMethod SRIManagementSystem
        {
            get { return _SRIManagementSystem.Value; }
            set { _SRIManagementSystem = value; }
        }
        public bool ShouldSerializeSRIManagementSystem()
        {
            return (_SRIManagementSystem.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AutoSRICreationOnReceipt;
        public SAPB1.BoYesNoEnum AutoSRICreationOnReceipt
        {
            get { return _AutoSRICreationOnReceipt.Value; }
            set { _AutoSRICreationOnReceipt = value; }
        }
        public bool ShouldSerializeAutoSRICreationOnReceipt()
        {
            return (_AutoSRICreationOnReceipt.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IEPSPayer;
        public SAPB1.BoYesNoEnum IEPSPayer
        {
            get { return _IEPSPayer.Value; }
            set { _IEPSPayer = value; }
        }
        public bool ShouldSerializeIEPSPayer()
        {
            return (_IEPSPayer.HasValue);
        }

        private int? _DefaultDaysForOrdCanc;
        public int DefaultDaysForOrdCanc
        {
            get { return _DefaultDaysForOrdCanc.Value; }
            set { _DefaultDaysForOrdCanc = value; }
        }
        public bool ShouldSerializeDefaultDaysForOrdCanc()
        {
            return (_DefaultDaysForOrdCanc.HasValue);
        }

        private decimal? _PercentOfTotalAcquisition;
        public decimal PercentOfTotalAcquisition
        {
            get { return _PercentOfTotalAcquisition.Value; }
            set { _PercentOfTotalAcquisition = value; }
        }
        public bool ShouldSerializePercentOfTotalAcquisition()
        {
            return (_PercentOfTotalAcquisition.HasValue);
        }

        private decimal? _MinimumBaseAmountPerDoc;
        public decimal MinimumBaseAmountPerDoc
        {
            get { return _MinimumBaseAmountPerDoc.Value; }
            set { _MinimumBaseAmountPerDoc = value; }
        }
        public bool ShouldSerializeMinimumBaseAmountPerDoc()
        {
            return (_MinimumBaseAmountPerDoc.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableSharingSeries;
        public SAPB1.BoYesNoEnum EnableSharingSeries
        {
            get { return _EnableSharingSeries.Value; }
            set { _EnableSharingSeries = value; }
        }
        public bool ShouldSerializeEnableSharingSeries()
        {
            return (_EnableSharingSeries.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DataOwnershipIndication;
        public SAPB1.BoYesNoEnum DataOwnershipIndication
        {
            get { return _DataOwnershipIndication.Value; }
            set { _DataOwnershipIndication = value; }
        }
        public bool ShouldSerializeDataOwnershipIndication()
        {
            return (_DataOwnershipIndication.HasValue);
        }

        private decimal? _MinimumAmountForAppndixOP;
        public decimal MinimumAmountForAppndixOP
        {
            get { return _MinimumAmountForAppndixOP.Value; }
            set { _MinimumAmountForAppndixOP = value; }
        }
        public bool ShouldSerializeMinimumAmountForAppndixOP()
        {
            return (_MinimumAmountForAppndixOP.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DisplayTransactionsByDflt;
        public SAPB1.BoYesNoEnum DisplayTransactionsByDflt
        {
            get { return _DisplayTransactionsByDflt.Value; }
            set { _DisplayTransactionsByDflt = value; }
        }
        public bool ShouldSerializeDisplayTransactionsByDflt()
        {
            return (_DisplayTransactionsByDflt.HasValue);
        }

        public string DefaultStampTax { get; set; }
        private decimal? _MinimumAmountForAnnualList;
        public decimal MinimumAmountForAnnualList
        {
            get { return _MinimumAmountForAnnualList.Value; }
            set { _MinimumAmountForAnnualList = value; }
        }
        public bool ShouldSerializeMinimumAmountForAnnualList()
        {
            return (_MinimumAmountForAnnualList.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockStockNegativeQuantity;
        public SAPB1.BoYesNoEnum BlockStockNegativeQuantity
        {
            get { return _BlockStockNegativeQuantity.Value; }
            set { _BlockStockNegativeQuantity = value; }
        }
        public bool ShouldSerializeBlockStockNegativeQuantity()
        {
            return (_BlockStockNegativeQuantity.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AutoCreateCustomerEqCard;
        public SAPB1.BoYesNoEnum AutoCreateCustomerEqCard
        {
            get { return _AutoCreateCustomerEqCard.Value; }
            set { _AutoCreateCustomerEqCard = value; }
        }
        public bool ShouldSerializeAutoCreateCustomerEqCard()
        {
            return (_AutoCreateCustomerEqCard.HasValue);
        }

        private int? _MaxNumberOfDocumentsInPmt;
        public int MaxNumberOfDocumentsInPmt
        {
            get { return _MaxNumberOfDocumentsInPmt.Value; }
            set { _MaxNumberOfDocumentsInPmt = value; }
        }
        public bool ShouldSerializeMaxNumberOfDocumentsInPmt()
        {
            return (_MaxNumberOfDocumentsInPmt.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableStockRelNoCostPrice;
        public SAPB1.BoYesNoEnum EnableStockRelNoCostPrice
        {
            get { return _EnableStockRelNoCostPrice.Value; }
            set { _EnableStockRelNoCostPrice = value; }
        }
        public bool ShouldSerializeEnableStockRelNoCostPrice()
        {
            return (_EnableStockRelNoCostPrice.HasValue);
        }

        public string CompanyName { get; set; }
        private SAPB1.BoYesNoEnum? _GroupLinesInVATCalculation;
        public SAPB1.BoYesNoEnum GroupLinesInVATCalculation
        {
            get { return _GroupLinesInVATCalculation.Value; }
            set { _GroupLinesInVATCalculation = value; }
        }
        public bool ShouldSerializeGroupLinesInVATCalculation()
        {
            return (_GroupLinesInVATCalculation.HasValue);
        }

        private SAPB1.TaxCalcSysEnum? _TaxCalculationSystem;
        public SAPB1.TaxCalcSysEnum TaxCalculationSystem
        {
            get { return _TaxCalculationSystem.Value; }
            set { _TaxCalculationSystem = value; }
        }
        public bool ShouldSerializeTaxCalculationSystem()
        {
            return (_TaxCalculationSystem.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableTransactionNotification;
        public SAPB1.BoYesNoEnum EnableTransactionNotification
        {
            get { return _EnableTransactionNotification.Value; }
            set { _EnableTransactionNotification = value; }
        }
        public bool ShouldSerializeEnableTransactionNotification()
        {
            return (_EnableTransactionNotification.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableConversionDifferentAcct;
        public SAPB1.BoYesNoEnum EnableConversionDifferentAcct
        {
            get { return _EnableConversionDifferentAcct.Value; }
            set { _EnableConversionDifferentAcct = value; }
        }
        public bool ShouldSerializeEnableConversionDifferentAcct()
        {
            return (_EnableConversionDifferentAcct.HasValue);
        }

    }

    public class AdminInfo
    {
        private int? _Code;
        public int Code
        {
            get { return _Code.Value; }
            set { _Code = value; }
        }
        public bool ShouldSerializeCode()
        {
            return (_Code.HasValue);
        }

        public string CompanyName { get; set; }
        public string Address { get; set; }
        public string Country { get; set; }
        public string PrintingHeader { get; set; }
        public string PhoneNumber1 { get; set; }
        public string PhoneNumber2 { get; set; }
        public string FaxNumber { get; set; }
        public string eMail { get; set; }
        public string ManagingDirector { get; set; }
        public string ChartofAccountsTemplate { get; set; }
        public string LocalCurrency { get; set; }
        public string SystemCurrency { get; set; }
        private SAPB1.BoYesNoEnum? _CreditBalancewithMinusSign;
        public SAPB1.BoYesNoEnum CreditBalancewithMinusSign
        {
            get { return _CreditBalancewithMinusSign.Value; }
            set { _CreditBalancewithMinusSign = value; }
        }
        public bool ShouldSerializeCreditBalancewithMinusSign()
        {
            return (_CreditBalancewithMinusSign.HasValue);
        }

        private int? _StandardUnitofLength;
        public int StandardUnitofLength
        {
            get { return _StandardUnitofLength.Value; }
            set { _StandardUnitofLength = value; }
        }
        public bool ShouldSerializeStandardUnitofLength()
        {
            return (_StandardUnitofLength.HasValue);
        }

        private int? _WeightUnitDefault;
        public int WeightUnitDefault
        {
            get { return _WeightUnitDefault.Value; }
            set { _WeightUnitDefault = value; }
        }
        public bool ShouldSerializeWeightUnitDefault()
        {
            return (_WeightUnitDefault.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DirectIndirectRate;
        public SAPB1.BoYesNoEnum DirectIndirectRate
        {
            get { return _DirectIndirectRate.Value; }
            set { _DirectIndirectRate = value; }
        }
        public bool ShouldSerializeDirectIndirectRate()
        {
            return (_DirectIndirectRate.HasValue);
        }

        private decimal? _MinimumAmountfor347Report;
        public decimal MinimumAmountfor347Report
        {
            get { return _MinimumAmountfor347Report.Value; }
            set { _MinimumAmountfor347Report = value; }
        }
        public bool ShouldSerializeMinimumAmountfor347Report()
        {
            return (_MinimumAmountfor347Report.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SetItemsWarehouses;
        public SAPB1.BoYesNoEnum SetItemsWarehouses
        {
            get { return _SetItemsWarehouses.Value; }
            set { _SetItemsWarehouses = value; }
        }
        public bool ShouldSerializeSetItemsWarehouses()
        {
            return (_SetItemsWarehouses.HasValue);
        }

        public string BankCountry { get; set; }
        public string FederalTaxID { get; set; }
        public string TaxOffice { get; set; }
        public string DeductionFileNo { get; set; }
        private SAPB1.BoYesNoEnum? _TaxCollection;
        public SAPB1.BoYesNoEnum TaxCollection
        {
            get { return _TaxCollection.Value; }
            set { _TaxCollection = value; }
        }
        public bool ShouldSerializeTaxCollection()
        {
            return (_TaxCollection.HasValue);
        }

        private SAPB1.BoYesNoEnum? _TaxDefinition;
        public SAPB1.BoYesNoEnum TaxDefinition
        {
            get { return _TaxDefinition.Value; }
            set { _TaxDefinition = value; }
        }
        public bool ShouldSerializeTaxDefinition()
        {
            return (_TaxDefinition.HasValue);
        }

        private decimal? _TaxPercentage;
        public decimal TaxPercentage
        {
            get { return _TaxPercentage.Value; }
            set { _TaxPercentage = value; }
        }
        public bool ShouldSerializeTaxPercentage()
        {
            return (_TaxPercentage.HasValue);
        }

        private decimal? _AdvancesonCorpIncomeTax;
        public decimal AdvancesonCorpIncomeTax
        {
            get { return _AdvancesonCorpIncomeTax.Value; }
            set { _AdvancesonCorpIncomeTax = value; }
        }
        public bool ShouldSerializeAdvancesonCorpIncomeTax()
        {
            return (_AdvancesonCorpIncomeTax.HasValue);
        }

        private decimal? _WithTax;
        public decimal WithTax
        {
            get { return _WithTax.Value; }
            set { _WithTax = value; }
        }
        public bool ShouldSerializeWithTax()
        {
            return (_WithTax.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WithholdingTaxVendorDdct;
        public SAPB1.BoYesNoEnum WithholdingTaxVendorDdct
        {
            get { return _WithholdingTaxVendorDdct.Value; }
            set { _WithholdingTaxVendorDdct = value; }
        }
        public bool ShouldSerializeWithholdingTaxVendorDdct()
        {
            return (_WithholdingTaxVendorDdct.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CustomersDeductionatSource;
        public SAPB1.BoYesNoEnum CustomersDeductionatSource
        {
            get { return _CustomersDeductionatSource.Value; }
            set { _CustomersDeductionatSource = value; }
        }
        public bool ShouldSerializeCustomersDeductionatSource()
        {
            return (_CustomersDeductionatSource.HasValue);
        }

        private decimal? _WithholdingTaxTdctPercnt;
        public decimal WithholdingTaxTdctPercnt
        {
            get { return _WithholdingTaxTdctPercnt.Value; }
            set { _WithholdingTaxTdctPercnt = value; }
        }
        public bool ShouldSerializeWithholdingTaxTdctPercnt()
        {
            return (_WithholdingTaxTdctPercnt.HasValue);
        }

        private DateTime? _WithholdingTaxDdctExpired;
        public DateTime WithholdingTaxDdctExpired
        {
            get { return _WithholdingTaxDdctExpired.Value; }
            set { _WithholdingTaxDdctExpired = value; }
        }
        public bool ShouldSerializeWithholdingTaxDdctExpired()
        {
            return (_WithholdingTaxDdctExpired.HasValue);
        }

        public string WithholdingTaxDdctOffice { get; set; }
        private SAPB1.BoYesNoEnum? _CommitmentRestriction;
        public SAPB1.BoYesNoEnum CommitmentRestriction
        {
            get { return _CommitmentRestriction.Value; }
            set { _CommitmentRestriction = value; }
        }
        public bool ShouldSerializeCommitmentRestriction()
        {
            return (_CommitmentRestriction.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CreditRestriction;
        public SAPB1.BoYesNoEnum CreditRestriction
        {
            get { return _CreditRestriction.Value; }
            set { _CreditRestriction = value; }
        }
        public bool ShouldSerializeCreditRestriction()
        {
            return (_CreditRestriction.HasValue);
        }

        private SAPB1.BoYesNoEnum? _RestrictSales;
        public SAPB1.BoYesNoEnum RestrictSales
        {
            get { return _RestrictSales.Value; }
            set { _RestrictSales = value; }
        }
        public bool ShouldSerializeRestrictSales()
        {
            return (_RestrictSales.HasValue);
        }

        private SAPB1.BoYesNoEnum? _RestrictDelNotesPO;
        public SAPB1.BoYesNoEnum RestrictDelNotesPO
        {
            get { return _RestrictDelNotesPO.Value; }
            set { _RestrictDelNotesPO = value; }
        }
        public bool ShouldSerializeRestrictDelNotesPO()
        {
            return (_RestrictDelNotesPO.HasValue);
        }

        private SAPB1.BoYesNoEnum? _RestrictOrders;
        public SAPB1.BoYesNoEnum RestrictOrders
        {
            get { return _RestrictOrders.Value; }
            set { _RestrictOrders = value; }
        }
        public bool ShouldSerializeRestrictOrders()
        {
            return (_RestrictOrders.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ConsiderDelNotesinSalesR;
        public SAPB1.BoYesNoEnum ConsiderDelNotesinSalesR
        {
            get { return _ConsiderDelNotesinSalesR.Value; }
            set { _ConsiderDelNotesinSalesR = value; }
        }
        public bool ShouldSerializeConsiderDelNotesinSalesR()
        {
            return (_ConsiderDelNotesinSalesR.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CreditDepositType;
        public SAPB1.BoYesNoEnum CreditDepositType
        {
            get { return _CreditDepositType.Value; }
            set { _CreditDepositType = value; }
        }
        public bool ShouldSerializeCreditDepositType()
        {
            return (_CreditDepositType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _UseTax;
        public SAPB1.BoYesNoEnum UseTax
        {
            get { return _UseTax.Value; }
            set { _UseTax = value; }
        }
        public bool ShouldSerializeUseTax()
        {
            return (_UseTax.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SplitPO;
        public SAPB1.BoYesNoEnum SplitPO
        {
            get { return _SplitPO.Value; }
            set { _SplitPO = value; }
        }
        public bool ShouldSerializeSplitPO()
        {
            return (_SplitPO.HasValue);
        }

        public string AltNameForApInvoice { get; set; }
        public string AltNameforCreditMemo { get; set; }
        public string AltNameForGoodsReceipt { get; set; }
        public string AltNameForGoodsReturn { get; set; }
        public string AltNameForPurchase { get; set; }
        private SAPB1.BoAlertTypeforWHStockEnum? _AlertTypeforWHStock;
        public SAPB1.BoAlertTypeforWHStockEnum AlertTypeforWHStock
        {
            get { return _AlertTypeforWHStock.Value; }
            set { _AlertTypeforWHStock = value; }
        }
        public bool ShouldSerializeAlertTypeforWHStock()
        {
            return (_AlertTypeforWHStock.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SetCommissionbyCustomer;
        public SAPB1.BoYesNoEnum SetCommissionbyCustomer
        {
            get { return _SetCommissionbyCustomer.Value; }
            set { _SetCommissionbyCustomer = value; }
        }
        public bool ShouldSerializeSetCommissionbyCustomer()
        {
            return (_SetCommissionbyCustomer.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SetCommissionbyItem;
        public SAPB1.BoYesNoEnum SetCommissionbyItem
        {
            get { return _SetCommissionbyItem.Value; }
            set { _SetCommissionbyItem = value; }
        }
        public bool ShouldSerializeSetCommissionbyItem()
        {
            return (_SetCommissionbyItem.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SetCommissionbySE;
        public SAPB1.BoYesNoEnum SetCommissionbySE
        {
            get { return _SetCommissionbySE.Value; }
            set { _SetCommissionbySE = value; }
        }
        public bool ShouldSerializeSetCommissionbySE()
        {
            return (_SetCommissionbySE.HasValue);
        }

        private int? _DefaultCustomerPaymentTerms;
        public int DefaultCustomerPaymentTerms
        {
            get { return _DefaultCustomerPaymentTerms.Value; }
            set { _DefaultCustomerPaymentTerms = value; }
        }
        public bool ShouldSerializeDefaultCustomerPaymentTerms()
        {
            return (_DefaultCustomerPaymentTerms.HasValue);
        }

        private int? _DefaultVendorPaymentTerms;
        public int DefaultVendorPaymentTerms
        {
            get { return _DefaultVendorPaymentTerms.Value; }
            set { _DefaultVendorPaymentTerms = value; }
        }
        public bool ShouldSerializeDefaultVendorPaymentTerms()
        {
            return (_DefaultVendorPaymentTerms.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CalculateGrossProfitperTra;
        public SAPB1.BoYesNoEnum CalculateGrossProfitperTra
        {
            get { return _CalculateGrossProfitperTra.Value; }
            set { _CalculateGrossProfitperTra = value; }
        }
        public bool ShouldSerializeCalculateGrossProfitperTra()
        {
            return (_CalculateGrossProfitperTra.HasValue);
        }

        private int? _PriceListforCostPrice;
        public int PriceListforCostPrice
        {
            get { return _PriceListforCostPrice.Value; }
            set { _PriceListforCostPrice = value; }
        }
        public bool ShouldSerializePriceListforCostPrice()
        {
            return (_PriceListforCostPrice.HasValue);
        }

        private SAPB1.BoYesNoEnum? _GrossProfitAfterSale;
        public SAPB1.BoYesNoEnum GrossProfitAfterSale
        {
            get { return _GrossProfitAfterSale.Value; }
            set { _GrossProfitAfterSale = value; }
        }
        public bool ShouldSerializeGrossProfitAfterSale()
        {
            return (_GrossProfitAfterSale.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DisplayPriceforPriceOnly;
        public SAPB1.BoYesNoEnum DisplayPriceforPriceOnly
        {
            get { return _DisplayPriceforPriceOnly.Value; }
            set { _DisplayPriceforPriceOnly = value; }
        }
        public bool ShouldSerializeDisplayPriceforPriceOnly()
        {
            return (_DisplayPriceforPriceOnly.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CalculateTaxinSalesQuotati;
        public SAPB1.BoYesNoEnum CalculateTaxinSalesQuotati
        {
            get { return _CalculateTaxinSalesQuotati.Value; }
            set { _CalculateTaxinSalesQuotati = value; }
        }
        public bool ShouldSerializeCalculateTaxinSalesQuotati()
        {
            return (_CalculateTaxinSalesQuotati.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BaseField;
        public SAPB1.BoYesNoEnum BaseField
        {
            get { return _BaseField.Value; }
            set { _BaseField = value; }
        }
        public bool ShouldSerializeBaseField()
        {
            return (_BaseField.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AllowClosedSalesQuotations;
        public SAPB1.BoYesNoEnum AllowClosedSalesQuotations
        {
            get { return _AllowClosedSalesQuotations.Value; }
            set { _AllowClosedSalesQuotations = value; }
        }
        public bool ShouldSerializeAllowClosedSalesQuotations()
        {
            return (_AllowClosedSalesQuotations.HasValue);
        }

        private SAPB1.BoYesNoEnum? _UserConversionCode;
        public SAPB1.BoYesNoEnum UserConversionCode
        {
            get { return _UserConversionCode.Value; }
            set { _UserConversionCode = value; }
        }
        public bool ShouldSerializeUserConversionCode()
        {
            return (_UserConversionCode.HasValue);
        }

        private int? _CompanyColor;
        public int CompanyColor
        {
            get { return _CompanyColor.Value; }
            set { _CompanyColor = value; }
        }
        public bool ShouldSerializeCompanyColor()
        {
            return (_CompanyColor.HasValue);
        }

        private int? _TotalsAccuracy;
        public int TotalsAccuracy
        {
            get { return _TotalsAccuracy.Value; }
            set { _TotalsAccuracy = value; }
        }
        public bool ShouldSerializeTotalsAccuracy()
        {
            return (_TotalsAccuracy.HasValue);
        }

        private int? _AccuracyofQuantities;
        public int AccuracyofQuantities
        {
            get { return _AccuracyofQuantities.Value; }
            set { _AccuracyofQuantities = value; }
        }
        public bool ShouldSerializeAccuracyofQuantities()
        {
            return (_AccuracyofQuantities.HasValue);
        }

        private int? _PriceAccuracy;
        public int PriceAccuracy
        {
            get { return _PriceAccuracy.Value; }
            set { _PriceAccuracy = value; }
        }
        public bool ShouldSerializePriceAccuracy()
        {
            return (_PriceAccuracy.HasValue);
        }

        private int? _RateAccuracy;
        public int RateAccuracy
        {
            get { return _RateAccuracy.Value; }
            set { _RateAccuracy = value; }
        }
        public bool ShouldSerializeRateAccuracy()
        {
            return (_RateAccuracy.HasValue);
        }

        private int? _PercentageAccuracy;
        public int PercentageAccuracy
        {
            get { return _PercentageAccuracy.Value; }
            set { _PercentageAccuracy = value; }
        }
        public bool ShouldSerializePercentageAccuracy()
        {
            return (_PercentageAccuracy.HasValue);
        }

        private int? _MeasuringAccuracy;
        public int MeasuringAccuracy
        {
            get { return _MeasuringAccuracy.Value; }
            set { _MeasuringAccuracy = value; }
        }
        public bool ShouldSerializeMeasuringAccuracy()
        {
            return (_MeasuringAccuracy.HasValue);
        }

        private int? _QueryAccuracy;
        public int QueryAccuracy
        {
            get { return _QueryAccuracy.Value; }
            set { _QueryAccuracy = value; }
        }
        public bool ShouldSerializeQueryAccuracy()
        {
            return (_QueryAccuracy.HasValue);
        }

        public string AddressinForeignLanguage { get; set; }
        public string DefaultTaxCode { get; set; }
        public string LetterHeaderinForeignLangu { get; set; }
        public string PhoneNumber1ForeignLang { get; set; }
        public string PhoneNumber2ForeignLang { get; set; }
        public string FaxNumberForeignLang { get; set; }
        public string ManagingDirectorForeignLan { get; set; }
        private SAPB1.BoTimeTemplate? _TimeTemplate;
        public SAPB1.BoTimeTemplate TimeTemplate
        {
            get { return _TimeTemplate.Value; }
            set { _TimeTemplate = value; }
        }
        public bool ShouldSerializeTimeTemplate()
        {
            return (_TimeTemplate.HasValue);
        }

        private SAPB1.BoDateTemplate? _DateTemplate;
        public SAPB1.BoDateTemplate DateTemplate
        {
            get { return _DateTemplate.Value; }
            set { _DateTemplate = value; }
        }
        public bool ShouldSerializeDateTemplate()
        {
            return (_DateTemplate.HasValue);
        }

        public string DateSeparator { get; set; }
        private SAPB1.BoCurrencyCheck? _FCCheckAccount;
        public SAPB1.BoCurrencyCheck FCCheckAccount
        {
            get { return _FCCheckAccount.Value; }
            set { _FCCheckAccount = value; }
        }
        public bool ShouldSerializeFCCheckAccount()
        {
            return (_FCCheckAccount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ChangedExistingOrders;
        public SAPB1.BoYesNoEnum ChangedExistingOrders
        {
            get { return _ChangedExistingOrders.Value; }
            set { _ChangedExistingOrders = value; }
        }
        public bool ShouldSerializeChangedExistingOrders()
        {
            return (_ChangedExistingOrders.HasValue);
        }

        private SAPB1.BoCurrencyCheck? _MultiCurrencyCheck;
        public SAPB1.BoCurrencyCheck MultiCurrencyCheck
        {
            get { return _MultiCurrencyCheck.Value; }
            set { _MultiCurrencyCheck = value; }
        }
        public bool ShouldSerializeMultiCurrencyCheck()
        {
            return (_MultiCurrencyCheck.HasValue);
        }

        private int? _ISRType;
        public int ISRType
        {
            get { return _ISRType.Value; }
            set { _ISRType = value; }
        }
        public bool ShouldSerializeISRType()
        {
            return (_ISRType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DisplayRoundingRemark;
        public SAPB1.BoYesNoEnum DisplayRoundingRemark
        {
            get { return _DisplayRoundingRemark.Value; }
            set { _DisplayRoundingRemark = value; }
        }
        public bool ShouldSerializeDisplayRoundingRemark()
        {
            return (_DisplayRoundingRemark.HasValue);
        }

        public string ISRBillerID { get; set; }
        private SAPB1.BoYesNoEnum? _BlockSystemCurrencyEditing;
        public SAPB1.BoYesNoEnum BlockSystemCurrencyEditing
        {
            get { return _BlockSystemCurrencyEditing.Value; }
            set { _BlockSystemCurrencyEditing = value; }
        }
        public bool ShouldSerializeBlockSystemCurrencyEditing()
        {
            return (_BlockSystemCurrencyEditing.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockPostingDateEditing;
        public SAPB1.BoYesNoEnum BlockPostingDateEditing
        {
            get { return _BlockPostingDateEditing.Value; }
            set { _BlockPostingDateEditing = value; }
        }
        public bool ShouldSerializeBlockPostingDateEditing()
        {
            return (_BlockPostingDateEditing.HasValue);
        }

        public string DefaultWarehouse { get; set; }
        private SAPB1.BoYesNoEnum? _BlockTaxDate;
        public SAPB1.BoYesNoEnum BlockTaxDate
        {
            get { return _BlockTaxDate.Value; }
            set { _BlockTaxDate = value; }
        }
        public bool ShouldSerializeBlockTaxDate()
        {
            return (_BlockTaxDate.HasValue);
        }

        public string TaxDefinitionforVatitem { get; set; }
        public string TaxDefinitionforVatservice { get; set; }
        public string TaxGroupforPurchaseItem { get; set; }
        public string TaxGroupforServicePurchase { get; set; }
        private SAPB1.BoYesNoEnum? _CalculateBudget;
        public SAPB1.BoYesNoEnum CalculateBudget
        {
            get { return _CalculateBudget.Value; }
            set { _CalculateBudget = value; }
        }
        public bool ShouldSerializeCalculateBudget()
        {
            return (_CalculateBudget.HasValue);
        }

        public string CustomerIdNumber { get; set; }
        private SAPB1.BoBlockBudget? _BlockBudget;
        public SAPB1.BoBlockBudget BlockBudget
        {
            get { return _BlockBudget.Value; }
            set { _BlockBudget = value; }
        }
        public bool ShouldSerializeBlockBudget()
        {
            return (_BlockBudget.HasValue);
        }

        private SAPB1.BoBudgetAlert? _BudgetAlert;
        public SAPB1.BoBudgetAlert BudgetAlert
        {
            get { return _BudgetAlert.Value; }
            set { _BudgetAlert = value; }
        }
        public bool ShouldSerializeBudgetAlert()
        {
            return (_BudgetAlert.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockPurchaseOrders;
        public SAPB1.BoYesNoEnum BlockPurchaseOrders
        {
            get { return _BlockPurchaseOrders.Value; }
            set { _BlockPurchaseOrders = value; }
        }
        public bool ShouldSerializeBlockPurchaseOrders()
        {
            return (_BlockPurchaseOrders.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockBookkeeping;
        public SAPB1.BoYesNoEnum BlockBookkeeping
        {
            get { return _BlockBookkeeping.Value; }
            set { _BlockBookkeeping = value; }
        }
        public bool ShouldSerializeBlockBookkeeping()
        {
            return (_BlockBookkeeping.HasValue);
        }

        private int? _DefaultBudgetCostAssessMt;
        public int DefaultBudgetCostAssessMt
        {
            get { return _DefaultBudgetCostAssessMt.Value; }
            set { _DefaultBudgetCostAssessMt = value; }
        }
        public bool ShouldSerializeDefaultBudgetCostAssessMt()
        {
            return (_DefaultBudgetCostAssessMt.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ContinuousStockManagement;
        public SAPB1.BoYesNoEnum ContinuousStockManagement
        {
            get { return _ContinuousStockManagement.Value; }
            set { _ContinuousStockManagement = value; }
        }
        public bool ShouldSerializeContinuousStockManagement()
        {
            return (_ContinuousStockManagement.HasValue);
        }

        private SAPB1.BoInventorySystem? _ContinuousStockSystem;
        public SAPB1.BoInventorySystem ContinuousStockSystem
        {
            get { return _ContinuousStockSystem.Value; }
            set { _ContinuousStockSystem = value; }
        }
        public bool ShouldSerializeContinuousStockSystem()
        {
            return (_ContinuousStockSystem.HasValue);
        }

        private SAPB1.BoYesNoEnum? _RoundTaxAmounts;
        public SAPB1.BoYesNoEnum RoundTaxAmounts
        {
            get { return _RoundTaxAmounts.Value; }
            set { _RoundTaxAmounts = value; }
        }
        public bool ShouldSerializeRoundTaxAmounts()
        {
            return (_RoundTaxAmounts.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockDelNotesforPurchase;
        public SAPB1.BoYesNoEnum BlockDelNotesforPurchase
        {
            get { return _BlockDelNotesforPurchase.Value; }
            set { _BlockDelNotesforPurchase = value; }
        }
        public bool ShouldSerializeBlockDelNotesforPurchase()
        {
            return (_BlockDelNotesforPurchase.HasValue);
        }

        public string FileNumberinIncomeTax { get; set; }
        private SAPB1.BoYesNoEnum? _DeferredTax;
        public SAPB1.BoYesNoEnum DeferredTax
        {
            get { return _DeferredTax.Value; }
            set { _DeferredTax = value; }
        }
        public bool ShouldSerializeDeferredTax()
        {
            return (_DeferredTax.HasValue);
        }

        public string DefaultBankNo { get; set; }
        public string DefaultBankAccount { get; set; }
        public string DefaultBranch { get; set; }
        private SAPB1.BoYesNoEnum? _UsePASystem;
        public SAPB1.BoYesNoEnum UsePASystem
        {
            get { return _UsePASystem.Value; }
            set { _UsePASystem = value; }
        }
        public bool ShouldSerializeUsePASystem()
        {
            return (_UsePASystem.HasValue);
        }

        public string ServiceCode { get; set; }
        public string ServicePassword { get; set; }
        public string ParamFolderPath { get; set; }
        public string ExcelFolderPath { get; set; }
        public string FederalTaxID2 { get; set; }
        public string FederalTaxID3 { get; set; }
        public string DecimalSeparator { get; set; }
        public string ThousandsSeparator { get; set; }
        private SAPB1.BoYesNoEnum? _DisplayCurrencyontheRight;
        public SAPB1.BoYesNoEnum DisplayCurrencyontheRight
        {
            get { return _DisplayCurrencyontheRight.Value; }
            set { _DisplayCurrencyontheRight = value; }
        }
        public bool ShouldSerializeDisplayCurrencyontheRight()
        {
            return (_DisplayCurrencyontheRight.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AlertbyWarehouse;
        public SAPB1.BoYesNoEnum AlertbyWarehouse
        {
            get { return _AlertbyWarehouse.Value; }
            set { _AlertbyWarehouse = value; }
        }
        public bool ShouldSerializeAlertbyWarehouse()
        {
            return (_AlertbyWarehouse.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PriceSystem;
        public SAPB1.BoYesNoEnum PriceSystem
        {
            get { return _PriceSystem.Value; }
            set { _PriceSystem = value; }
        }
        public bool ShouldSerializePriceSystem()
        {
            return (_PriceSystem.HasValue);
        }

        private SAPB1.BoYesNoEnum? _WholdingTaxDedHierarchy;
        public SAPB1.BoYesNoEnum WholdingTaxDedHierarchy
        {
            get { return _WholdingTaxDedHierarchy.Value; }
            set { _WholdingTaxDedHierarchy = value; }
        }
        public bool ShouldSerializeWholdingTaxDedHierarchy()
        {
            return (_WholdingTaxDedHierarchy.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DocConfirmation;
        public SAPB1.BoYesNoEnum DocConfirmation
        {
            get { return _DocConfirmation.Value; }
            set { _DocConfirmation = value; }
        }
        public bool ShouldSerializeDocConfirmation()
        {
            return (_DocConfirmation.HasValue);
        }

        private SAPB1.BoDefaultBatchStatus? _DefaultforBatchStatus;
        public SAPB1.BoDefaultBatchStatus DefaultforBatchStatus
        {
            get { return _DefaultforBatchStatus.Value; }
            set { _DefaultforBatchStatus = value; }
        }
        public bool ShouldSerializeDefaultforBatchStatus()
        {
            return (_DefaultforBatchStatus.HasValue);
        }

        private SAPB1.BoGLMethods? _GLMethod;
        public SAPB1.BoGLMethods GLMethod
        {
            get { return _GLMethod.Value; }
            set { _GLMethod = value; }
        }
        public bool ShouldSerializeGLMethod()
        {
            return (_GLMethod.HasValue);
        }

        private SAPB1.BoUniqueSerialNumber? _UniqueSerialNo;
        public SAPB1.BoUniqueSerialNumber UniqueSerialNo
        {
            get { return _UniqueSerialNo.Value; }
            set { _UniqueSerialNo = value; }
        }
        public bool ShouldSerializeUniqueSerialNo()
        {
            return (_UniqueSerialNo.HasValue);
        }

        private int? _MaxHistory;
        public int MaxHistory
        {
            get { return _MaxHistory.Value; }
            set { _MaxHistory = value; }
        }
        public bool ShouldSerializeMaxHistory()
        {
            return (_MaxHistory.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ChangeDefReconAPAccounts;
        public SAPB1.BoYesNoEnum ChangeDefReconAPAccounts
        {
            get { return _ChangeDefReconAPAccounts.Value; }
            set { _ChangeDefReconAPAccounts = value; }
        }
        public bool ShouldSerializeChangeDefReconAPAccounts()
        {
            return (_ChangeDefReconAPAccounts.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ChangeDefReconARAccounts;
        public SAPB1.BoYesNoEnum ChangeDefReconARAccounts
        {
            get { return _ChangeDefReconARAccounts.Value; }
            set { _ChangeDefReconARAccounts = value; }
        }
        public bool ShouldSerializeChangeDefReconARAccounts()
        {
            return (_ChangeDefReconARAccounts.HasValue);
        }

        public string BPTypeCode { get; set; }
        public string PBSNumber { get; set; }
        public string PBSGroupNumber { get; set; }
        public string OrganizationNumber { get; set; }
        public string AccountSegmentsSeparator { get; set; }
        private SAPB1.BoYesNoEnum? _DisplayBookkeepingWindow;
        public SAPB1.BoYesNoEnum DisplayBookkeepingWindow
        {
            get { return _DisplayBookkeepingWindow.Value; }
            set { _DisplayBookkeepingWindow = value; }
        }
        public bool ShouldSerializeDisplayBookkeepingWindow()
        {
            return (_DisplayBookkeepingWindow.HasValue);
        }

        private SAPB1.BoYesNoEnum? _SHandleWT;
        public SAPB1.BoYesNoEnum SHandleWT
        {
            get { return _SHandleWT.Value; }
            set { _SHandleWT = value; }
        }
        public bool ShouldSerializeSHandleWT()
        {
            return (_SHandleWT.HasValue);
        }

        public string SDefaultWTCode { get; set; }
        public string WithholdingTaxPHandle { get; set; }
        public string PDefaultWTCode { get; set; }
        private SAPB1.BoYesNoEnum? _WTLiableExpense;
        public SAPB1.BoYesNoEnum WTLiableExpense
        {
            get { return _WTLiableExpense.Value; }
            set { _WTLiableExpense = value; }
        }
        public bool ShouldSerializeWTLiableExpense()
        {
            return (_WTLiableExpense.HasValue);
        }

        private SAPB1.BoYesNoEnum? _UseNegativeAmounts;
        public SAPB1.BoYesNoEnum UseNegativeAmounts
        {
            get { return _UseNegativeAmounts.Value; }
            set { _UseNegativeAmounts = value; }
        }
        public bool ShouldSerializeUseNegativeAmounts()
        {
            return (_UseNegativeAmounts.HasValue);
        }

        public string HolidaysName { get; set; }
        public string OrderBlock { get; set; }
        private SAPB1.BoYesNoEnum? _RoundingMethod;
        public SAPB1.BoYesNoEnum RoundingMethod
        {
            get { return _RoundingMethod.Value; }
            set { _RoundingMethod = value; }
        }
        public bool ShouldSerializeRoundingMethod()
        {
            return (_RoundingMethod.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AdressFromWH;
        public SAPB1.BoYesNoEnum AdressFromWH
        {
            get { return _AdressFromWH.Value; }
            set { _AdressFromWH = value; }
        }
        public bool ShouldSerializeAdressFromWH()
        {
            return (_AdressFromWH.HasValue);
        }

        public string OrderingParty { get; set; }
        public string CertificateNo { get; set; }
        private DateTime? _ExpirationDate;
        public DateTime ExpirationDate
        {
            get { return _ExpirationDate.Value; }
            set { _ExpirationDate = value; }
        }
        public bool ShouldSerializeExpirationDate()
        {
            return (_ExpirationDate.HasValue);
        }

        public string NationalInsuranceNo { get; set; }
        private SAPB1.BoYesNoEnum? _SalesOrderConfirmed;
        public SAPB1.BoYesNoEnum SalesOrderConfirmed
        {
            get { return _SalesOrderConfirmed.Value; }
            set { _SalesOrderConfirmed = value; }
        }
        public bool ShouldSerializeSalesOrderConfirmed()
        {
            return (_SalesOrderConfirmed.HasValue);
        }

        private SAPB1.BoYesNoEnum? _PurchaseOrderConfirmed;
        public SAPB1.BoYesNoEnum PurchaseOrderConfirmed
        {
            get { return _PurchaseOrderConfirmed.Value; }
            set { _PurchaseOrderConfirmed = value; }
        }
        public bool ShouldSerializePurchaseOrderConfirmed()
        {
            return (_PurchaseOrderConfirmed.HasValue);
        }

        public string SDfltITWT { get; set; }
        public string PDfltITWT { get; set; }
        private SAPB1.BoYesNoEnum? _DefaultAccountCurrency;
        public SAPB1.BoYesNoEnum DefaultAccountCurrency
        {
            get { return _DefaultAccountCurrency.Value; }
            set { _DefaultAccountCurrency = value; }
        }
        public bool ShouldSerializeDefaultAccountCurrency()
        {
            return (_DefaultAccountCurrency.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DeferredTaxforVendors;
        public SAPB1.BoYesNoEnum DeferredTaxforVendors
        {
            get { return _DeferredTaxforVendors.Value; }
            set { _DeferredTaxforVendors = value; }
        }
        public bool ShouldSerializeDeferredTaxforVendors()
        {
            return (_DeferredTaxforVendors.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CreateAutoVATLineinJDT;
        public SAPB1.BoYesNoEnum CreateAutoVATLineinJDT
        {
            get { return _CreateAutoVATLineinJDT.Value; }
            set { _CreateAutoVATLineinJDT = value; }
        }
        public bool ShouldSerializeCreateAutoVATLineinJDT()
        {
            return (_CreateAutoVATLineinJDT.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ConsumeForecast;
        public SAPB1.BoYesNoEnum ConsumeForecast
        {
            get { return _ConsumeForecast.Value; }
            set { _ConsumeForecast = value; }
        }
        public bool ShouldSerializeConsumeForecast()
        {
            return (_ConsumeForecast.HasValue);
        }

        private SAPB1.BoConsumptionMethod? _ConsumptionMethod;
        public SAPB1.BoConsumptionMethod ConsumptionMethod
        {
            get { return _ConsumptionMethod.Value; }
            set { _ConsumptionMethod = value; }
        }
        public bool ShouldSerializeConsumptionMethod()
        {
            return (_ConsumptionMethod.HasValue);
        }

        private int? _DaysBackward;
        public int DaysBackward
        {
            get { return _DaysBackward.Value; }
            set { _DaysBackward = value; }
        }
        public bool ShouldSerializeDaysBackward()
        {
            return (_DaysBackward.HasValue);
        }

        private int? _DaysForward;
        public int DaysForward
        {
            get { return _DaysForward.Value; }
            set { _DaysForward = value; }
        }
        public bool ShouldSerializeDaysForward()
        {
            return (_DaysForward.HasValue);
        }

        public string DefaultDunningTerm { get; set; }
        private int? _DefaultBankAccountKey;
        public int DefaultBankAccountKey
        {
            get { return _DefaultBankAccountKey.Value; }
            set { _DefaultBankAccountKey = value; }
        }
        public bool ShouldSerializeDefaultBankAccountKey()
        {
            return (_DefaultBankAccountKey.HasValue);
        }

        private SAPB1.BoYesNoEnum? _MultiLanguageSupportEnable;
        public SAPB1.BoYesNoEnum MultiLanguageSupportEnable
        {
            get { return _MultiLanguageSupportEnable.Value; }
            set { _MultiLanguageSupportEnable = value; }
        }
        public bool ShouldSerializeMultiLanguageSupportEnable()
        {
            return (_MultiLanguageSupportEnable.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AllowFuturePostingDate;
        public SAPB1.BoYesNoEnum AllowFuturePostingDate
        {
            get { return _AllowFuturePostingDate.Value; }
            set { _AllowFuturePostingDate = value; }
        }
        public bool ShouldSerializeAllowFuturePostingDate()
        {
            return (_AllowFuturePostingDate.HasValue);
        }

        public string AdditionalIdNumber { get; set; }
        public string State { get; set; }
        private SAPB1.BoYesNoEnum? _CalculateRowDiscount;
        public SAPB1.BoYesNoEnum CalculateRowDiscount
        {
            get { return _CalculateRowDiscount.Value; }
            set { _CalculateRowDiscount = value; }
        }
        public bool ShouldSerializeCalculateRowDiscount()
        {
            return (_CalculateRowDiscount.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BankStatementInstalled;
        public SAPB1.BoYesNoEnum BankStatementInstalled
        {
            get { return _BankStatementInstalled.Value; }
            set { _BankStatementInstalled = value; }
        }
        public bool ShouldSerializeBankStatementInstalled()
        {
            return (_BankStatementInstalled.HasValue);
        }

        public string UniqueTaxPayerReference { get; set; }
        public string EmployerReference { get; set; }
        private SAPB1.BoYesNoEnum? _PeriodStatusAutoChange;
        public SAPB1.BoYesNoEnum PeriodStatusAutoChange
        {
            get { return _PeriodStatusAutoChange.Value; }
            set { _PeriodStatusAutoChange = value; }
        }
        public bool ShouldSerializePeriodStatusAutoChange()
        {
            return (_PeriodStatusAutoChange.HasValue);
        }

        private int? _PeriodStatusChangeDelay;
        public int PeriodStatusChangeDelay
        {
            get { return _PeriodStatusChangeDelay.Value; }
            set { _PeriodStatusChangeDelay = value; }
        }
        public bool ShouldSerializePeriodStatusChangeDelay()
        {
            return (_PeriodStatusChangeDelay.HasValue);
        }

        private decimal? _GrossProfitPercentForServiceDocuments;
        public decimal GrossProfitPercentForServiceDocuments
        {
            get { return _GrossProfitPercentForServiceDocuments.Value; }
            set { _GrossProfitPercentForServiceDocuments = value; }
        }
        public bool ShouldSerializeGrossProfitPercentForServiceDocuments()
        {
            return (_GrossProfitPercentForServiceDocuments.HasValue);
        }

        public string XMLFileFolderPath { get; set; }
        private SAPB1.BoYesNoEnum? _PickList;
        public SAPB1.BoYesNoEnum PickList
        {
            get { return _PickList.Value; }
            set { _PickList = value; }
        }
        public bool ShouldSerializePickList()
        {
            return (_PickList.HasValue);
        }

        public string GeneralManager { get; set; }
        public string GeneralManagerForeignLanguage { get; set; }
        private SAPB1.BoYesNoEnum? _UseProductionProfitAndLossAccount;
        public SAPB1.BoYesNoEnum UseProductionProfitAndLossAccount
        {
            get { return _UseProductionProfitAndLossAccount.Value; }
            set { _UseProductionProfitAndLossAccount = value; }
        }
        public bool ShouldSerializeUseProductionProfitAndLossAccount()
        {
            return (_UseProductionProfitAndLossAccount.HasValue);
        }

        private decimal? _WTAccumAmountAP;
        public decimal WTAccumAmountAP
        {
            get { return _WTAccumAmountAP.Value; }
            set { _WTAccumAmountAP = value; }
        }
        public bool ShouldSerializeWTAccumAmountAP()
        {
            return (_WTAccumAmountAP.HasValue);
        }

        private decimal? _WTAccumAmountAR;
        public decimal WTAccumAmountAR
        {
            get { return _WTAccumAmountAR.Value; }
            set { _WTAccumAmountAR = value; }
        }
        public bool ShouldSerializeWTAccumAmountAR()
        {
            return (_WTAccumAmountAR.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CopyExchangeRateInCopyTo;
        public SAPB1.BoYesNoEnum CopyExchangeRateInCopyTo
        {
            get { return _CopyExchangeRateInCopyTo.Value; }
            set { _CopyExchangeRateInCopyTo = value; }
        }
        public bool ShouldSerializeCopyExchangeRateInCopyTo()
        {
            return (_CopyExchangeRateInCopyTo.HasValue);
        }

        public string GTSOutboundFolder { get; set; }
        public string GTSInboundFolder { get; set; }
        public string GTSSeparateCode { get; set; }
        private int? _GTSDefaultChecker;
        public int GTSDefaultChecker
        {
            get { return _GTSDefaultChecker.Value; }
            set { _GTSDefaultChecker = value; }
        }
        public bool ShouldSerializeGTSDefaultChecker()
        {
            return (_GTSDefaultChecker.HasValue);
        }

        private int? _GTSDefaultPayee;
        public int GTSDefaultPayee
        {
            get { return _GTSDefaultPayee.Value; }
            set { _GTSDefaultPayee = value; }
        }
        public bool ShouldSerializeGTSDefaultPayee()
        {
            return (_GTSDefaultPayee.HasValue);
        }

        private decimal? _GTSMaxAmount;
        public decimal GTSMaxAmount
        {
            get { return _GTSMaxAmount.Value; }
            set { _GTSMaxAmount = value; }
        }
        public bool ShouldSerializeGTSMaxAmount()
        {
            return (_GTSMaxAmount.HasValue);
        }

        private SAPB1.GTSResponseToExceedingEnum? _GTSResponseToExceeding;
        public SAPB1.GTSResponseToExceedingEnum GTSResponseToExceeding
        {
            get { return _GTSResponseToExceeding.Value; }
            set { _GTSResponseToExceeding = value; }
        }
        public bool ShouldSerializeGTSResponseToExceeding()
        {
            return (_GTSResponseToExceeding.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ApplicationOfIFRS;
        public SAPB1.BoYesNoEnum ApplicationOfIFRS
        {
            get { return _ApplicationOfIFRS.Value; }
            set { _ApplicationOfIFRS = value; }
        }
        public bool ShouldSerializeApplicationOfIFRS()
        {
            return (_ApplicationOfIFRS.HasValue);
        }

        private int? _StartingInFiscalYear;
        public int StartingInFiscalYear
        {
            get { return _StartingInFiscalYear.Value; }
            set { _StartingInFiscalYear = value; }
        }
        public bool ShouldSerializeStartingInFiscalYear()
        {
            return (_StartingInFiscalYear.HasValue);
        }

        private int? _ReportAccordingTo;
        public int ReportAccordingTo
        {
            get { return _ReportAccordingTo.Value; }
            set { _ReportAccordingTo = value; }
        }
        public bool ShouldSerializeReportAccordingTo()
        {
            return (_ReportAccordingTo.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CopyOpenRowsToDelivery;
        public SAPB1.BoYesNoEnum CopyOpenRowsToDelivery
        {
            get { return _CopyOpenRowsToDelivery.Value; }
            set { _CopyOpenRowsToDelivery = value; }
        }
        public bool ShouldSerializeCopyOpenRowsToDelivery()
        {
            return (_CopyOpenRowsToDelivery.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableApprovalProcedureInDI;
        public SAPB1.BoYesNoEnum EnableApprovalProcedureInDI
        {
            get { return _EnableApprovalProcedureInDI.Value; }
            set { _EnableApprovalProcedureInDI = value; }
        }
        public bool ShouldSerializeEnableApprovalProcedureInDI()
        {
            return (_EnableApprovalProcedureInDI.HasValue);
        }

        private SAPB1.IssuePrimarilyByEnum? _IssuePrimarilyBy;
        public SAPB1.IssuePrimarilyByEnum IssuePrimarilyBy
        {
            get { return _IssuePrimarilyBy.Value; }
            set { _IssuePrimarilyBy = value; }
        }
        public bool ShouldSerializeIssuePrimarilyBy()
        {
            return (_IssuePrimarilyBy.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsRemoveUnpricedValue;
        public SAPB1.BoYesNoEnum IsRemoveUnpricedValue
        {
            get { return _IsRemoveUnpricedValue.Value; }
            set { _IsRemoveUnpricedValue = value; }
        }
        public bool ShouldSerializeIsRemoveUnpricedValue()
        {
            return (_IsRemoveUnpricedValue.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableAdvancedGLAccountDetermination;
        public SAPB1.BoYesNoEnum EnableAdvancedGLAccountDetermination
        {
            get { return _EnableAdvancedGLAccountDetermination.Value; }
            set { _EnableAdvancedGLAccountDetermination = value; }
        }
        public bool ShouldSerializeEnableAdvancedGLAccountDetermination()
        {
            return (_EnableAdvancedGLAccountDetermination.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CreateOnlineQuotation;
        public SAPB1.BoYesNoEnum CreateOnlineQuotation
        {
            get { return _CreateOnlineQuotation.Value; }
            set { _CreateOnlineQuotation = value; }
        }
        public bool ShouldSerializeCreateOnlineQuotation()
        {
            return (_CreateOnlineQuotation.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IsPrinterConnected;
        public SAPB1.BoYesNoEnum IsPrinterConnected
        {
            get { return _IsPrinterConnected.Value; }
            set { _IsPrinterConnected = value; }
        }
        public bool ShouldSerializeIsPrinterConnected()
        {
            return (_IsPrinterConnected.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableBranches;
        public SAPB1.BoYesNoEnum EnableBranches
        {
            get { return _EnableBranches.Value; }
            set { _EnableBranches = value; }
        }
        public bool ShouldSerializeEnableBranches()
        {
            return (_EnableBranches.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IEMandatoryValidation;
        public SAPB1.BoYesNoEnum IEMandatoryValidation
        {
            get { return _IEMandatoryValidation.Value; }
            set { _IEMandatoryValidation = value; }
        }
        public bool ShouldSerializeIEMandatoryValidation()
        {
            return (_IEMandatoryValidation.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnablePaymentDueDates;
        public SAPB1.BoYesNoEnum EnablePaymentDueDates
        {
            get { return _EnablePaymentDueDates.Value; }
            set { _EnablePaymentDueDates = value; }
        }
        public bool ShouldSerializeEnablePaymentDueDates()
        {
            return (_EnablePaymentDueDates.HasValue);
        }

        private int? _MaximumNumberOfDaysForDueDate;
        public int MaximumNumberOfDaysForDueDate
        {
            get { return _MaximumNumberOfDaysForDueDate.Value; }
            set { _MaximumNumberOfDaysForDueDate = value; }
        }
        public bool ShouldSerializeMaximumNumberOfDaysForDueDate()
        {
            return (_MaximumNumberOfDaysForDueDate.HasValue);
        }

        public string AliasName { get; set; }
        private SAPB1.BoYesNoEnum? _EnableCentralizedIncomingPayments;
        public SAPB1.BoYesNoEnum EnableCentralizedIncomingPayments
        {
            get { return _EnableCentralizedIncomingPayments.Value; }
            set { _EnableCentralizedIncomingPayments = value; }
        }
        public bool ShouldSerializeEnableCentralizedIncomingPayments()
        {
            return (_EnableCentralizedIncomingPayments.HasValue);
        }

        private SAPB1.BoYesNoEnum? _EnableCentralizedOutgoingPayments;
        public SAPB1.BoYesNoEnum EnableCentralizedOutgoingPayments
        {
            get { return _EnableCentralizedOutgoingPayments.Value; }
            set { _EnableCentralizedOutgoingPayments = value; }
        }
        public bool ShouldSerializeEnableCentralizedOutgoingPayments()
        {
            return (_EnableCentralizedOutgoingPayments.HasValue);
        }

        private SAPB1.TaxRateDeterminationEnum? _TaxRateDetermination;
        public SAPB1.TaxRateDeterminationEnum TaxRateDetermination
        {
            get { return _TaxRateDetermination.Value; }
            set { _TaxRateDetermination = value; }
        }
        public bool ShouldSerializeTaxRateDetermination()
        {
            return (_TaxRateDetermination.HasValue);
        }

        public string BoletoFolderPath { get; set; }
        private SAPB1.BoYesNoEnum? _AllowMultipleBAOnSamePeriod;
        public SAPB1.BoYesNoEnum AllowMultipleBAOnSamePeriod
        {
            get { return _AllowMultipleBAOnSamePeriod.Value; }
            set { _AllowMultipleBAOnSamePeriod = value; }
        }
        public bool ShouldSerializeAllowMultipleBAOnSamePeriod()
        {
            return (_AllowMultipleBAOnSamePeriod.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockMultipleBAOnSameAPDocument;
        public SAPB1.BoYesNoEnum BlockMultipleBAOnSameAPDocument
        {
            get { return _BlockMultipleBAOnSameAPDocument.Value; }
            set { _BlockMultipleBAOnSameAPDocument = value; }
        }
        public bool ShouldSerializeBlockMultipleBAOnSameAPDocument()
        {
            return (_BlockMultipleBAOnSameAPDocument.HasValue);
        }

        private SAPB1.BoYesNoEnum? _BlockMultipleBAOnSameARDocument;
        public SAPB1.BoYesNoEnum BlockMultipleBAOnSameARDocument
        {
            get { return _BlockMultipleBAOnSameARDocument.Value; }
            set { _BlockMultipleBAOnSameARDocument = value; }
        }
        public bool ShouldSerializeBlockMultipleBAOnSameARDocument()
        {
            return (_BlockMultipleBAOnSameARDocument.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DisplayCancelDocInReport;
        public SAPB1.BoYesNoEnum DisplayCancelDocInReport
        {
            get { return _DisplayCancelDocInReport.Value; }
            set { _DisplayCancelDocInReport = value; }
        }
        public bool ShouldSerializeDisplayCancelDocInReport()
        {
            return (_DisplayCancelDocInReport.HasValue);
        }

        private int? _MaxDaysForCancel;
        public int MaxDaysForCancel
        {
            get { return _MaxDaysForCancel.Value; }
            set { _MaxDaysForCancel = value; }
        }
        public bool ShouldSerializeMaxDaysForCancel()
        {
            return (_MaxDaysForCancel.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReuseDocumentNum;
        public SAPB1.BoYesNoEnum ReuseDocumentNum
        {
            get { return _ReuseDocumentNum.Value; }
            set { _ReuseDocumentNum = value; }
        }
        public bool ShouldSerializeReuseDocumentNum()
        {
            return (_ReuseDocumentNum.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ReuseNotaFiscalNum;
        public SAPB1.BoYesNoEnum ReuseNotaFiscalNum
        {
            get { return _ReuseNotaFiscalNum.Value; }
            set { _ReuseNotaFiscalNum = value; }
        }
        public bool ShouldSerializeReuseNotaFiscalNum()
        {
            return (_ReuseNotaFiscalNum.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AutoAddUoM;
        public SAPB1.BoYesNoEnum AutoAddUoM
        {
            get { return _AutoAddUoM.Value; }
            set { _AutoAddUoM = value; }
        }
        public bool ShouldSerializeAutoAddUoM()
        {
            return (_AutoAddUoM.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AutoAddPackage;
        public SAPB1.BoYesNoEnum AutoAddPackage
        {
            get { return _AutoAddPackage.Value; }
            set { _AutoAddPackage = value; }
        }
        public bool ShouldSerializeAutoAddPackage()
        {
            return (_AutoAddPackage.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DisplayInactivePriceListInReports;
        public SAPB1.BoYesNoEnum DisplayInactivePriceListInReports
        {
            get { return _DisplayInactivePriceListInReports.Value; }
            set { _DisplayInactivePriceListInReports = value; }
        }
        public bool ShouldSerializeDisplayInactivePriceListInReports()
        {
            return (_DisplayInactivePriceListInReports.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DisplayInactivePriceListInDocuments;
        public SAPB1.BoYesNoEnum DisplayInactivePriceListInDocuments
        {
            get { return _DisplayInactivePriceListInDocuments.Value; }
            set { _DisplayInactivePriceListInDocuments = value; }
        }
        public bool ShouldSerializeDisplayInactivePriceListInDocuments()
        {
            return (_DisplayInactivePriceListInDocuments.HasValue);
        }

        private SAPB1.BoYesNoEnum? _DisplayInactivePriceListInSettings;
        public SAPB1.BoYesNoEnum DisplayInactivePriceListInSettings
        {
            get { return _DisplayInactivePriceListInSettings.Value; }
            set { _DisplayInactivePriceListInSettings = value; }
        }
        public bool ShouldSerializeDisplayInactivePriceListInSettings()
        {
            return (_DisplayInactivePriceListInSettings.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ApplyBaseInactiveStatusToSpecialPrices;
        public SAPB1.BoYesNoEnum ApplyBaseInactiveStatusToSpecialPrices
        {
            get { return _ApplyBaseInactiveStatusToSpecialPrices.Value; }
            set { _ApplyBaseInactiveStatusToSpecialPrices = value; }
        }
        public bool ShouldSerializeApplyBaseInactiveStatusToSpecialPrices()
        {
            return (_ApplyBaseInactiveStatusToSpecialPrices.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ApplyBaseInactiveStatusToPeriodVolumeDiscounts;
        public SAPB1.BoYesNoEnum ApplyBaseInactiveStatusToPeriodVolumeDiscounts
        {
            get { return _ApplyBaseInactiveStatusToPeriodVolumeDiscounts.Value; }
            set { _ApplyBaseInactiveStatusToPeriodVolumeDiscounts = value; }
        }
        public bool ShouldSerializeApplyBaseInactiveStatusToPeriodVolumeDiscounts()
        {
            return (_ApplyBaseInactiveStatusToPeriodVolumeDiscounts.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ApplyBaseInactiveStatusToPriceLists;
        public SAPB1.BoYesNoEnum ApplyBaseInactiveStatusToPriceLists
        {
            get { return _ApplyBaseInactiveStatusToPriceLists.Value; }
            set { _ApplyBaseInactiveStatusToPriceLists = value; }
        }
        public bool ShouldSerializeApplyBaseInactiveStatusToPriceLists()
        {
            return (_ApplyBaseInactiveStatusToPriceLists.HasValue);
        }

        private SAPB1.PriceProceedMethodEnum? _PriceProceedMethod;
        public SAPB1.PriceProceedMethodEnum PriceProceedMethod
        {
            get { return _PriceProceedMethod.Value; }
            set { _PriceProceedMethod = value; }
        }
        public bool ShouldSerializePriceProceedMethod()
        {
            return (_PriceProceedMethod.HasValue);
        }

        private SAPB1.BoYesNoEnum? _RemoveUpdatePricesBasedOnNonStandardPriceLists;
        public SAPB1.BoYesNoEnum RemoveUpdatePricesBasedOnNonStandardPriceLists
        {
            get { return _RemoveUpdatePricesBasedOnNonStandardPriceLists.Value; }
            set { _RemoveUpdatePricesBasedOnNonStandardPriceLists = value; }
        }
        public bool ShouldSerializeRemoveUpdatePricesBasedOnNonStandardPriceLists()
        {
            return (_RemoveUpdatePricesBasedOnNonStandardPriceLists.HasValue);
        }

        public string SirenNo { get; set; }
        public string InstitutionCode { get; set; }
        private SAPB1.BoYesNoEnum? _UseParentWIPInComponents;
        public SAPB1.BoYesNoEnum UseParentWIPInComponents
        {
            get { return _UseParentWIPInComponents.Value; }
            set { _UseParentWIPInComponents = value; }
        }
        public bool ShouldSerializeUseParentWIPInComponents()
        {
            return (_UseParentWIPInComponents.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AllowInBoundPostingWithZeroPrice;
        public SAPB1.BoYesNoEnum AllowInBoundPostingWithZeroPrice
        {
            get { return _AllowInBoundPostingWithZeroPrice.Value; }
            set { _AllowInBoundPostingWithZeroPrice = value; }
        }
        public bool ShouldSerializeAllowInBoundPostingWithZeroPrice()
        {
            return (_AllowInBoundPostingWithZeroPrice.HasValue);
        }

        private decimal? _InventoryPostingHighlightVariance;
        public decimal InventoryPostingHighlightVariance
        {
            get { return _InventoryPostingHighlightVariance.Value; }
            set { _InventoryPostingHighlightVariance = value; }
        }
        public bool ShouldSerializeInventoryPostingHighlightVariance()
        {
            return (_InventoryPostingHighlightVariance.HasValue);
        }

        private SAPB1.BoYesNoEnum? _InventoryPostingReleaseOnlySerialAndBatch;
        public SAPB1.BoYesNoEnum InventoryPostingReleaseOnlySerialAndBatch
        {
            get { return _InventoryPostingReleaseOnlySerialAndBatch.Value; }
            set { _InventoryPostingReleaseOnlySerialAndBatch = value; }
        }
        public bool ShouldSerializeInventoryPostingReleaseOnlySerialAndBatch()
        {
            return (_InventoryPostingReleaseOnlySerialAndBatch.HasValue);
        }

        private decimal? _InventoryCountingHighlightVariance;
        public decimal InventoryCountingHighlightVariance
        {
            get { return _InventoryCountingHighlightVariance.Value; }
            set { _InventoryCountingHighlightVariance = value; }
        }
        public bool ShouldSerializeInventoryCountingHighlightVariance()
        {
            return (_InventoryCountingHighlightVariance.HasValue);
        }

        private decimal? _InventoryCountingHighlightMaxVariance;
        public decimal InventoryCountingHighlightMaxVariance
        {
            get { return _InventoryCountingHighlightMaxVariance.Value; }
            set { _InventoryCountingHighlightMaxVariance = value; }
        }
        public bool ShouldSerializeInventoryCountingHighlightMaxVariance()
        {
            return (_InventoryCountingHighlightMaxVariance.HasValue);
        }

        private decimal? _InventoryCountingHighlightCountersDifference;
        public decimal InventoryCountingHighlightCountersDifference
        {
            get { return _InventoryCountingHighlightCountersDifference.Value; }
            set { _InventoryCountingHighlightCountersDifference = value; }
        }
        public bool ShouldSerializeInventoryCountingHighlightCountersDifference()
        {
            return (_InventoryCountingHighlightCountersDifference.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CopySingleCounterToIndividualCounter;
        public SAPB1.BoYesNoEnum CopySingleCounterToIndividualCounter
        {
            get { return _CopySingleCounterToIndividualCounter.Value; }
            set { _CopySingleCounterToIndividualCounter = value; }
        }
        public bool ShouldSerializeCopySingleCounterToIndividualCounter()
        {
            return (_CopySingleCounterToIndividualCounter.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CloseCountedRowsWithZeroDifference;
        public SAPB1.BoYesNoEnum CloseCountedRowsWithZeroDifference
        {
            get { return _CloseCountedRowsWithZeroDifference.Value; }
            set { _CloseCountedRowsWithZeroDifference = value; }
        }
        public bool ShouldSerializeCloseCountedRowsWithZeroDifference()
        {
            return (_CloseCountedRowsWithZeroDifference.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CloseCountedRowsWithoutConfirmation;
        public SAPB1.BoYesNoEnum CloseCountedRowsWithoutConfirmation
        {
            get { return _CloseCountedRowsWithoutConfirmation.Value; }
            set { _CloseCountedRowsWithoutConfirmation = value; }
        }
        public bool ShouldSerializeCloseCountedRowsWithoutConfirmation()
        {
            return (_CloseCountedRowsWithoutConfirmation.HasValue);
        }

        private SAPB1.BoYesNoEnum? _CalculateInWhseQtyBasedOnPostingDate;
        public SAPB1.BoYesNoEnum CalculateInWhseQtyBasedOnPostingDate
        {
            get { return _CalculateInWhseQtyBasedOnPostingDate.Value; }
            set { _CalculateInWhseQtyBasedOnPostingDate = value; }
        }
        public bool ShouldSerializeCalculateInWhseQtyBasedOnPostingDate()
        {
            return (_CalculateInWhseQtyBasedOnPostingDate.HasValue);
        }

        private SAPB1.BoYesNoEnum? _RefreshInWhseQtyInDI;
        public SAPB1.BoYesNoEnum RefreshInWhseQtyInDI
        {
            get { return _RefreshInWhseQtyInDI.Value; }
            set { _RefreshInWhseQtyInDI = value; }
        }
        public bool ShouldSerializeRefreshInWhseQtyInDI()
        {
            return (_RefreshInWhseQtyInDI.HasValue);
        }

        public string SEPACreditorID { get; set; }
        private SAPB1.BoDataOwnershipManageMethodEnum? _DataOwnershipManageBy;
        public SAPB1.BoDataOwnershipManageMethodEnum DataOwnershipManageBy
        {
            get { return _DataOwnershipManageBy.Value; }
            set { _DataOwnershipManageBy = value; }
        }
        public bool ShouldSerializeDataOwnershipManageBy()
        {
            return (_DataOwnershipManageBy.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AllowBPWithNoOwner;
        public SAPB1.BoYesNoEnum AllowBPWithNoOwner
        {
            get { return _AllowBPWithNoOwner.Value; }
            set { _AllowBPWithNoOwner = value; }
        }
        public bool ShouldSerializeAllowBPWithNoOwner()
        {
            return (_AllowBPWithNoOwner.HasValue);
        }

        public SAPB1.ExtendedAdminInfo ExtendedAdminInfo { get; set; }
    }

    public class ExtendedAdminInfo
    {
        public string AddressType { get; set; }
        public string StreetNo { get; set; }
        private int? _STDCode;
        public int STDCode
        {
            get { return _STDCode.Value; }
            set { _STDCode = value; }
        }
        public bool ShouldSerializeSTDCode()
        {
            return (_STDCode.HasValue);
        }

        private int? _STDCodeForeign;
        public int STDCodeForeign
        {
            get { return _STDCodeForeign.Value; }
            set { _STDCodeForeign = value; }
        }
        public bool ShouldSerializeSTDCodeForeign()
        {
            return (_STDCodeForeign.HasValue);
        }

        private int? _NatureOfCompanyCode;
        public int NatureOfCompanyCode
        {
            get { return _NatureOfCompanyCode.Value; }
            set { _NatureOfCompanyCode = value; }
        }
        public bool ShouldSerializeNatureOfCompanyCode()
        {
            return (_NatureOfCompanyCode.HasValue);
        }

        private int? _EconomicActivityTypeCode;
        public int EconomicActivityTypeCode
        {
            get { return _EconomicActivityTypeCode.Value; }
            set { _EconomicActivityTypeCode = value; }
        }
        public bool ShouldSerializeEconomicActivityTypeCode()
        {
            return (_EconomicActivityTypeCode.HasValue);
        }

        public string CreditContributionOriginCode { get; set; }
        public string IPIPeriodCode { get; set; }
        private int? _CooperativeAssociationTypeCode;
        public int CooperativeAssociationTypeCode
        {
            get { return _CooperativeAssociationTypeCode.Value; }
            set { _CooperativeAssociationTypeCode = value; }
        }
        public bool ShouldSerializeCooperativeAssociationTypeCode()
        {
            return (_CooperativeAssociationTypeCode.HasValue);
        }

        private int? _ProfitTaxationCode;
        public int ProfitTaxationCode
        {
            get { return _ProfitTaxationCode.Value; }
            set { _ProfitTaxationCode = value; }
        }
        public bool ShouldSerializeProfitTaxationCode()
        {
            return (_ProfitTaxationCode.HasValue);
        }

        private int? _CompanyQualificationCode;
        public int CompanyQualificationCode
        {
            get { return _CompanyQualificationCode.Value; }
            set { _CompanyQualificationCode = value; }
        }
        public bool ShouldSerializeCompanyQualificationCode()
        {
            return (_CompanyQualificationCode.HasValue);
        }

        private int? _DeclarerTypeCode;
        public int DeclarerTypeCode
        {
            get { return _DeclarerTypeCode.Value; }
            set { _DeclarerTypeCode = value; }
        }
        public bool ShouldSerializeDeclarerTypeCode()
        {
            return (_DeclarerTypeCode.HasValue);
        }

        private SAPB1.BoYesNoEnum? _IPITaxContributor;
        public SAPB1.BoYesNoEnum IPITaxContributor
        {
            get { return _IPITaxContributor.Value; }
            set { _IPITaxContributor = value; }
        }
        public bool ShouldSerializeIPITaxContributor()
        {
            return (_IPITaxContributor.HasValue);
        }

        public string CommercialRegister { get; set; }
        private DateTime? _DateOfIncorporation;
        public DateTime DateOfIncorporation
        {
            get { return _DateOfIncorporation.Value; }
            set { _DateOfIncorporation = value; }
        }
        public bool ShouldSerializeDateOfIncorporation()
        {
            return (_DateOfIncorporation.HasValue);
        }

        public string SPEDProfile { get; set; }
        private int? _EnvironmentType;
        public int EnvironmentType
        {
            get { return _EnvironmentType.Value; }
            set { _EnvironmentType = value; }
        }
        public bool ShouldSerializeEnvironmentType()
        {
            return (_EnvironmentType.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Opting4ICMS;
        public SAPB1.BoYesNoEnum Opting4ICMS
        {
            get { return _Opting4ICMS.Value; }
            set { _Opting4ICMS = value; }
        }
        public bool ShouldSerializeOpting4ICMS()
        {
            return (_Opting4ICMS.HasValue);
        }

        public string OKDPNumber { get; set; }
        public string GlobalLocationNumber { get; set; }
        private SAPB1.BoYesNoEnum? _EnableIntrastat;
        public SAPB1.BoYesNoEnum EnableIntrastat
        {
            get { return _EnableIntrastat.Value; }
            set { _EnableIntrastat = value; }
        }
        public bool ShouldSerializeEnableIntrastat()
        {
            return (_EnableIntrastat.HasValue);
        }

        public string AuthorityUser { get; set; }
        public string AuthorityPassword { get; set; }
        public string URLforGoodsTransportService { get; set; }
        public string URLforInvoiceTypeService { get; set; }
        private SAPB1.BoYesNoEnum? _ElectronicApprovalForGoodsTransEnabled;
        public SAPB1.BoYesNoEnum ElectronicApprovalForGoodsTransEnabled
        {
            get { return _ElectronicApprovalForGoodsTransEnabled.Value; }
            set { _ElectronicApprovalForGoodsTransEnabled = value; }
        }
        public bool ShouldSerializeElectronicApprovalForGoodsTransEnabled()
        {
            return (_ElectronicApprovalForGoodsTransEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ElectronicApprovalForInvoiceEnabled;
        public SAPB1.BoYesNoEnum ElectronicApprovalForInvoiceEnabled
        {
            get { return _ElectronicApprovalForInvoiceEnabled.Value; }
            set { _ElectronicApprovalForInvoiceEnabled = value; }
        }
        public bool ShouldSerializeElectronicApprovalForInvoiceEnabled()
        {
            return (_ElectronicApprovalForInvoiceEnabled.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AllowInactiveItemsInInventoryOpeningBalance;
        public SAPB1.BoYesNoEnum AllowInactiveItemsInInventoryOpeningBalance
        {
            get { return _AllowInactiveItemsInInventoryOpeningBalance.Value; }
            set { _AllowInactiveItemsInInventoryOpeningBalance = value; }
        }
        public bool ShouldSerializeAllowInactiveItemsInInventoryOpeningBalance()
        {
            return (_AllowInactiveItemsInInventoryOpeningBalance.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AllowInactiveItemsInInventoryCountingAndPosting;
        public SAPB1.BoYesNoEnum AllowInactiveItemsInInventoryCountingAndPosting
        {
            get { return _AllowInactiveItemsInInventoryCountingAndPosting.Value; }
            set { _AllowInactiveItemsInInventoryCountingAndPosting = value; }
        }
        public bool ShouldSerializeAllowInactiveItemsInInventoryCountingAndPosting()
        {
            return (_AllowInactiveItemsInInventoryCountingAndPosting.HasValue);
        }

    }

    public class PathAdmin
    {
        public string WordTemplateFolderPath { get; set; }
        public string PicturesFolderPath { get; set; }
        public string AttachmentsFolderPath { get; set; }
        public string ExtensionsFolderPath { get; set; }
        public string PrintId { get; set; }
    }

    public class PeriodCategory
    {
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

        private DateTime? _BeginningofFinancialYear;
        public DateTime BeginningofFinancialYear
        {
            get { return _BeginningofFinancialYear.Value; }
            set { _BeginningofFinancialYear = value; }
        }
        public bool ShouldSerializeBeginningofFinancialYear()
        {
            return (_BeginningofFinancialYear.HasValue);
        }

        [DataMember(Name = "PeriodCategory")]
        public string PeriodCategoryProperty { get; set; }
        private SAPB1.BoSubPeriodTypeEnum? _SubPeriodType;
        public SAPB1.BoSubPeriodTypeEnum SubPeriodType
        {
            get { return _SubPeriodType.Value; }
            set { _SubPeriodType = value; }
        }
        public bool ShouldSerializeSubPeriodType()
        {
            return (_SubPeriodType.HasValue);
        }

        private int? _NumberOfPeriods;
        public int NumberOfPeriods
        {
            get { return _NumberOfPeriods.Value; }
            set { _NumberOfPeriods = value; }
        }
        public bool ShouldSerializeNumberOfPeriods()
        {
            return (_NumberOfPeriods.HasValue);
        }

        public string PeriodName { get; set; }
        public string DebitorsFollowUpAccount { get; set; }
        public string AccountforOutgoingChecks { get; set; }
        public string AccountforCashReceipt { get; set; }
        public string CustomersDeductionatSource { get; set; }
        public string CommissionAccountDefault { get; set; }
        public string PurchaseTax { get; set; }
        public string ForeignAccountsReceivables { get; set; }
        public string CreditorsFollowUpAccount { get; set; }
        public string OutgoingChecksAccount { get; set; }
        public string OutgoingCashAccount { get; set; }
        public string AccountforCreditMemoPayme { get; set; }
        public string InputTaxAccount { get; set; }
        public string TaxDefinition { get; set; }
        public string WithholodingTax { get; set; }
        public string OpeningBalancesAccount { get; set; }
        public string DefaultSaleAccount { get; set; }
        public string TaxExemptRevenuesDefault { get; set; }
        public string ExpenseAccountDefault { get; set; }
        public string RevenuesAccountForeign { get; set; }
        public string SalesRevenueEU { get; set; }
        public string ExpensesAccountForeign { get; set; }
        public string RateDifferencesDefaultAcc { get; set; }
        public string DecreaseGLAcc { get; set; }
        public string ReconciliationDifference { get; set; }
        public string AcountforOpeningWHBalance { get; set; }
        public string APCashDiscountAccount { get; set; }
        public string APLossCashDiscountAccount { get; set; }
        public string APLossRealizedExchangeDif { get; set; }
        public string ARCashDiscountAccount { get; set; }
        public string ARLossRealizedExchangeDi { get; set; }
        public string RoundingAccount { get; set; }
        public string APGainRealizedExchngeDif { get; set; }
        public string ARGainRealizedExchngeDif { get; set; }
        public string IncreaseGLAccount { get; set; }
        public string SalesReturns { get; set; }
        public string CostOfGoodsSold { get; set; }
        public string AllocationAcc { get; set; }
        public string VarianceAcc { get; set; }
        public string PriceDifferenceAccount { get; set; }
        public string CustomerDownPaymentsAccount { get; set; }
        public string VendorDownPaymentsAccount { get; set; }
        public string BillofExchangeAccountsRece { get; set; }
        public string CustBillofExchangeonC { get; set; }
        public string CustomerBillofExchangePres { get; set; }
        public string CustomerBillofExchngeDisc { get; set; }
        public string CustomerUnpaidBoE { get; set; }
        public string BoEAccountsPayable { get; set; }
        public string BoEAccountsPayable2 { get; set; }
        public string CustomerDoubtfulDebtsAcct { get; set; }
        public string VendorDoubtfulDebtsAcct { get; set; }
        public string PurchaseAccount { get; set; }
        public string PurchaseReturnAccount { get; set; }
        public string PurchaseOffsetAccount { get; set; }
        public string EOYControlAccount { get; set; }
        public string ExchangeRateDifferencesAcct { get; set; }
        public string GoodsClearingAcc { get; set; }
        public string ExpenseClearingAccount { get; set; }
        public string ExpenseOffsetAccount { get; set; }
        public string CostofSaleRevaluationAcct { get; set; }
        public string RepomoAccount { get; set; }
        public string WIPMaterialVarianceAccount { get; set; }
        public string DownPaymentVATAcctSale { get; set; }
        public string DownPaymentVATAcctPurch { get; set; }
        public string DownPaymentSClearingAcct { get; set; }
        public string DownPaymentPClearingAcct { get; set; }
        public string ExpenseVarianceAccount { get; set; }
        public string CostofSaleRevOffsetAcct { get; set; }
        public string EUExpenseAccount { get; set; }
        public string StockAccount { get; set; }
        public string InventoryOffsetIncrease { get; set; }
        public string InventoryOffsetDecrease { get; set; }
        public string VendorAssetsAccount { get; set; }
        public string StockRevaluationAccount { get; set; }
        public string StockRevaluationOffsetAcct { get; set; }
        public string WIPMaterialAccount { get; set; }
        public string InvoicePaymentBP { get; set; }
        public string GLRevaluationOffsetAccount { get; set; }
        public string OverpaymentsAPAccount { get; set; }
        public string UnderpaymentsAPAccount { get; set; }
        public string OverpaymentsARAccount { get; set; }
        public string UnderpaymentsARAccount { get; set; }
        public string PurchaseCreditAcc { get; set; }
        public string EUPurchaseCreditAcc { get; set; }
        public string ForeignPurchaseCreditAcc { get; set; }
        public string SalesCreditAcc { get; set; }
        public string SalesCreditEUAcc { get; set; }
        public string ExemptedCredits { get; set; }
        public string SalesCreditForeignAcc { get; set; }
        private DateTime? _FromPostingDate;
        public DateTime FromPostingDate
        {
            get { return _FromPostingDate.Value; }
            set { _FromPostingDate = value; }
        }
        public bool ShouldSerializeFromPostingDate()
        {
            return (_FromPostingDate.HasValue);
        }

        private DateTime? _ToPostingDate;
        public DateTime ToPostingDate
        {
            get { return _ToPostingDate.Value; }
            set { _ToPostingDate = value; }
        }
        public bool ShouldSerializeToPostingDate()
        {
            return (_ToPostingDate.HasValue);
        }

        private DateTime? _FromDueDate;
        public DateTime FromDueDate
        {
            get { return _FromDueDate.Value; }
            set { _FromDueDate = value; }
        }
        public bool ShouldSerializeFromDueDate()
        {
            return (_FromDueDate.HasValue);
        }

        private DateTime? _ToDueDate;
        public DateTime ToDueDate
        {
            get { return _ToDueDate.Value; }
            set { _ToDueDate = value; }
        }
        public bool ShouldSerializeToDueDate()
        {
            return (_ToDueDate.HasValue);
        }

        private DateTime? _FromDocumentDate;
        public DateTime FromDocumentDate
        {
            get { return _FromDocumentDate.Value; }
            set { _FromDocumentDate = value; }
        }
        public bool ShouldSerializeFromDocumentDate()
        {
            return (_FromDocumentDate.HasValue);
        }

        private DateTime? _ToDocumentDate;
        public DateTime ToDocumentDate
        {
            get { return _ToDocumentDate.Value; }
            set { _ToDocumentDate = value; }
        }
        public bool ShouldSerializeToDocumentDate()
        {
            return (_ToDocumentDate.HasValue);
        }

        public string OutgoingTaxAccount { get; set; }
        public string NegativeInventoryAdjustmentAccount { get; set; }
        private int? _FinancialYear;
        public int FinancialYear
        {
            get { return _FinancialYear.Value; }
            set { _FinancialYear = value; }
        }
        public bool ShouldSerializeFinancialYear()
        {
            return (_FinancialYear.HasValue);
        }

        public string SelfInvoiceRevenueAccount { get; set; }
        public string SelfInvoiceExpenseAccount { get; set; }
        public string StockInTransitAccount { get; set; }
        public string SalesDownPaymentInterimAccount { get; set; }
        public string PurchaseDownPaymentInterimAccount { get; set; }
        public string EUAccountsReceivable { get; set; }
        public string EUAccountsPayable { get; set; }
        public string WipOffsetProfitAndLossAccount { get; set; }
        public string InventoryOffsetProfitAndLossAccount { get; set; }
        public string DunningInterestAccount { get; set; }
        public string DunningFeeAccount { get; set; }
        public string ARGainRealizedConversionDiff { get; set; }
        public string ARLossRealizedConversionDiff { get; set; }
        public string APGainRealizedConversionDiff { get; set; }
        public string APLossRealizedConversionDiff { get; set; }
        public string GLGainRealizedConversionDiff { get; set; }
        public string GLLossRealizedConversionDiff { get; set; }
        public string ARExRateInterim { get; set; }
        public string APExRateInterim { get; set; }
        public string ARCashDiscountInterim { get; set; }
        public string APCashDiscountInterim { get; set; }
        public System.Collections.Generic.List<SAPB1.WIPMapping> WIPMappingCollection { get; set; }
    }

    public class WIPMapping
    {
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

        private int? _LineNumber;
        public int LineNumber
        {
            get { return _LineNumber.Value; }
            set { _LineNumber = value; }
        }
        public bool ShouldSerializeLineNumber()
        {
            return (_LineNumber.HasValue);
        }

        public string AccountFrom { get; set; }
        public string AccountTo { get; set; }
    }

    public class PeriodCategoryParams
    {
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

    }

    public class FinancePeriod
    {
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

        public string PeriodCode { get; set; }
        public string PeriodName { get; set; }
        private DateTime? _PostingDateFrom;
        public DateTime PostingDateFrom
        {
            get { return _PostingDateFrom.Value; }
            set { _PostingDateFrom = value; }
        }
        public bool ShouldSerializePostingDateFrom()
        {
            return (_PostingDateFrom.HasValue);
        }

        private DateTime? _PostingDateTo;
        public DateTime PostingDateTo
        {
            get { return _PostingDateTo.Value; }
            set { _PostingDateTo = value; }
        }
        public bool ShouldSerializePostingDateTo()
        {
            return (_PostingDateTo.HasValue);
        }

        private DateTime? _ValueDateFrom;
        public DateTime ValueDateFrom
        {
            get { return _ValueDateFrom.Value; }
            set { _ValueDateFrom = value; }
        }
        public bool ShouldSerializeValueDateFrom()
        {
            return (_ValueDateFrom.HasValue);
        }

        private DateTime? _ValueDateTo;
        public DateTime ValueDateTo
        {
            get { return _ValueDateTo.Value; }
            set { _ValueDateTo = value; }
        }
        public bool ShouldSerializeValueDateTo()
        {
            return (_ValueDateTo.HasValue);
        }

        private DateTime? _TaxDateFrom;
        public DateTime TaxDateFrom
        {
            get { return _TaxDateFrom.Value; }
            set { _TaxDateFrom = value; }
        }
        public bool ShouldSerializeTaxDateFrom()
        {
            return (_TaxDateFrom.HasValue);
        }

        private DateTime? _TaxDateTo;
        public DateTime TaxDateTo
        {
            get { return _TaxDateTo.Value; }
            set { _TaxDateTo = value; }
        }
        public bool ShouldSerializeTaxDateTo()
        {
            return (_TaxDateTo.HasValue);
        }

        private SAPB1.BoYesNoEnum? _ActiveforFeed;
        public SAPB1.BoYesNoEnum ActiveforFeed
        {
            get { return _ActiveforFeed.Value; }
            set { _ActiveforFeed = value; }
        }
        public bool ShouldSerializeActiveforFeed()
        {
            return (_ActiveforFeed.HasValue);
        }

        private SAPB1.BoYesNoEnum? _Locked;
        public SAPB1.BoYesNoEnum Locked
        {
            get { return _Locked.Value; }
            set { _Locked = value; }
        }
        public bool ShouldSerializeLocked()
        {
            return (_Locked.HasValue);
        }

        private SAPB1.BoYesNoEnum? _AdditionalSubPeriods;
        public SAPB1.BoYesNoEnum AdditionalSubPeriods
        {
            get { return _AdditionalSubPeriods.Value; }
            set { _AdditionalSubPeriods = value; }
        }
        public bool ShouldSerializeAdditionalSubPeriods()
        {
            return (_AdditionalSubPeriods.HasValue);
        }

        public string PeriodIndicator { get; set; }
        private int? _SubNum;
        public int SubNum
        {
            get { return _SubNum.Value; }
            set { _SubNum = value; }
        }
        public bool ShouldSerializeSubNum()
        {
            return (_SubNum.HasValue);
        }

        private SAPB1.PeriodStatusEnum? _PeriodStatus;
        public SAPB1.PeriodStatusEnum PeriodStatus
        {
            get { return _PeriodStatus.Value; }
            set { _PeriodStatus = value; }
        }
        public bool ShouldSerializePeriodStatus()
        {
            return (_PeriodStatus.HasValue);
        }

    }

    public class FinancePeriodParams
    {
        private int? _AbsoluteEntry;
        public int AbsoluteEntry
        {
            get { return _AbsoluteEntry.Value; }
            set { _AbsoluteEntry = value; }
        }
        public bool ShouldSerializeAbsoluteEntry()
        {
            return (_AbsoluteEntry.HasValue);
        }

        public string PeriodIndicator { get; set; }
    }

    public class RecordsetParams
    {
        public string Query { get; set; }
    }

    public class FeatureStatus
    {
        public string FeatureID { get; set; }
        private SAPB1.BoYesNoEnum? _Blocked;
        public SAPB1.BoYesNoEnum Blocked
        {
            get { return _Blocked.Value; }
            set { _Blocked = value; }
        }
        public bool ShouldSerializeBlocked()
        {
            return (_Blocked.HasValue);
        }

    }

    public class TableInfo
    {
        public string Name { get; set; }
    }

    public class Blob
    {
        public string Content { get; set; }
    }

    public class BlobParams
    {
        public string Table { get; set; }
        public string Field { get; set; }
        public string FileName { get; set; }
        public System.Collections.Generic.List<SAPB1.BlobTableKeySegment> BlobTableKeySegments { get; set; }
    }

    public class BlobTableKeySegment
    {
        public string Name { get; set; }
        public string Value { get; set; }
    }

    public class UpdateUserLicenseParams
    {
        public string UserName { get; set; }
        private SAPB1.LicenseTypeEnum? _LicenseType;
        public SAPB1.LicenseTypeEnum LicenseType
        {
            get { return _LicenseType.Value; }
            set { _LicenseType = value; }
        }
        public bool ShouldSerializeLicenseType()
        {
            return (_LicenseType.HasValue);
        }

        private SAPB1.LicenseUpdateTypeEnum? _LicenseUpdateType;
        public SAPB1.LicenseUpdateTypeEnum LicenseUpdateType
        {
            get { return _LicenseUpdateType.Value; }
            set { _LicenseUpdateType = value; }
        }
        public bool ShouldSerializeLicenseUpdateType()
        {
            return (_LicenseUpdateType.HasValue);
        }

    }

    public class DecimalData
    {
        private decimal? _Value;
        public decimal Value
        {
            get { return _Value.Value; }
            set { _Value = value; }
        }
        public bool ShouldSerializeValue()
        {
            return (_Value.HasValue);
        }

        private SAPB1.RoundingContextEnum? _Context;
        public SAPB1.RoundingContextEnum Context
        {
            get { return _Context.Value; }
            set { _Context = value; }
        }
        public bool ShouldSerializeContext()
        {
            return (_Context.HasValue);
        }

        public string Currency { get; set; }
    }

    public class RoundedData
    {
        private decimal? _Value;
        public decimal Value
        {
            get { return _Value.Value; }
            set { _Value = value; }
        }
        public bool ShouldSerializeValue()
        {
            return (_Value.HasValue);
        }

    }

    public class LoginInfo
    {
        public string CompanyDB { get; set; }
        public string UserName { get; set; }
        public string Password { get; set; }
    }

    public class CompanyService
    {
        public static string URI_GetCompanyInfo { get { return "CompanyService_GetCompanyInfo"; } }
        public static string URI_UpdateCompanyInfo { get { return "CompanyService_UpdateCompanyInfo"; } }
        public static string URI_GetAdminInfo { get { return "CompanyService_GetAdminInfo"; } }
        public static string URI_UpdateAdminInfo { get { return "CompanyService_UpdateAdminInfo"; } }
        public static string URI_CreatePeriod { get { return "CompanyService_CreatePeriod"; } }
        public static string URI_GetPeriods { get { return "CompanyService_GetPeriods"; } }
        public static string URI_GetPeriod { get { return "CompanyService_GetPeriod"; } }
        public static string URI_UpdatePeriod { get { return "CompanyService_UpdatePeriod"; } }
        public static string URI_GetFinancePeriods { get { return "CompanyService_GetFinancePeriods"; } }
        public static string URI_GetFinancePeriod { get { return "CompanyService_GetFinancePeriod"; } }
        public static string URI_UpdateFinancePeriod { get { return "CompanyService_UpdateFinancePeriod"; } }
        public static string URI_RemoveFinancePeriod { get { return "CompanyService_RemoveFinancePeriod"; } }
        public static string URI_CreatePeriodWithFinanceParams { get { return "CompanyService_CreatePeriodWithFinanceParams"; } }
        public static string URI_GetFeaturesStatus { get { return "CompanyService_GetFeaturesStatus"; } }
        public static string URI_GetPathAdmin { get { return "CompanyService_GetPathAdmin"; } }
        public static string URI_UpdatePathAdmin { get { return "CompanyService_UpdatePathAdmin"; } }
        public static string URI_RoundDecimal { get { return "CompanyService_RoundDecimal"; } }
        public static string URI_GetItemPrice { get { return "CompanyService_GetItemPrice"; } }
        public static string URI_GetAdvancedGLAccount { get { return "CompanyService_GetAdvancedGLAccount"; } }
    }
    public class Session
    {
        public static string URI_Login { get { return "Login"; } }
        public static string URI_Logout { get { return "Logout"; } }
    }
    public class UnitOfMeasurementsService
    {
        public static string URI_GetList { get { return "UnitOfMeasurementsService_GetList"; } }
    }
    public class MessagesService
    {
        public static string URI_GetInbox { get { return "MessagesService_GetInbox"; } }
        public static string URI_GetOutbox { get { return "MessagesService_GetOutbox"; } }
        public static string URI_GetSentMessages { get { return "MessagesService_GetSentMessages"; } }
        public static string URI_GetMessage { get { return "MessagesService_GetMessage"; } }
        public static string URI_SendMessage { get { return "MessagesService_SendMessage"; } }
    }
    public class PickListsService
    {
        public static string URI_Close { get { return "PickListsService_Close"; } }
        public static string URI_GetReleasedAllocation { get { return "PickListsService_GetReleasedAllocation"; } }
    }
    public partial class ChartOfAccountsEntitySet
    {
        public static string URI_Add(string Code) { return "ChartOfAccounts('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "ChartOfAccounts('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "ChartOfAccounts('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "ChartOfAccounts('" + Code + "')/Get"; }
    }
    public partial class BusinessPartnerGroupsEntitySet
    {
        public static string URI_Add(int Code) { return "BusinessPartnerGroups('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "BusinessPartnerGroups('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "BusinessPartnerGroups('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "BusinessPartnerGroups('" + Code + "')/Get"; }
    }
    public partial class InventoryPostingsEntitySet
    {
        public static string URI_Add(int DocumentEntry) { return "InventoryPostings('" + DocumentEntry + "')/Add"; }
        public static string URI_Update(int DocumentEntry) { return "InventoryPostings('" + DocumentEntry + "')/Update"; }
        public static string URI_Delete(int DocumentEntry) { return "InventoryPostings('" + DocumentEntry + "')/Delete"; }
        public static string URI_Get(int DocumentEntry) { return "InventoryPostings('" + DocumentEntry + "')/Get"; }
    }
    public partial class UnitOfMeasurementGroupsEntitySet
    {
        public static string URI_Add(int AbsEntry) { return "UnitOfMeasurementGroups('" + AbsEntry + "')/Add"; }
        public static string URI_Update(int AbsEntry) { return "UnitOfMeasurementGroups('" + AbsEntry + "')/Update"; }
        public static string URI_Delete(int AbsEntry) { return "UnitOfMeasurementGroups('" + AbsEntry + "')/Delete"; }
        public static string URI_Get(int AbsEntry) { return "UnitOfMeasurementGroups('" + AbsEntry + "')/Get"; }
    }
    public partial class UnitOfMeasurementsEntitySet
    {
        public static string URI_Add(int AbsEntry) { return "UnitOfMeasurements('" + AbsEntry + "')/Add"; }
        public static string URI_Update(int AbsEntry) { return "UnitOfMeasurements('" + AbsEntry + "')/Update"; }
        public static string URI_Delete(int AbsEntry) { return "UnitOfMeasurements('" + AbsEntry + "')/Delete"; }
        public static string URI_Get(int AbsEntry) { return "UnitOfMeasurements('" + AbsEntry + "')/Get"; }
    }
    public partial class BinLocationsEntitySet
    {
        public static string URI_Add(int AbsEntry) { return "BinLocations('" + AbsEntry + "')/Add"; }
        public static string URI_Update(int AbsEntry) { return "BinLocations('" + AbsEntry + "')/Update"; }
        public static string URI_Delete(int AbsEntry) { return "BinLocations('" + AbsEntry + "')/Delete"; }
        public static string URI_Get(int AbsEntry) { return "BinLocations('" + AbsEntry + "')/Get"; }
    }
    public partial class ActivitiesEntitySet
    {
        public static string URI_Add(int ActivityCode) { return "Activities('" + ActivityCode + "')/Add"; }
        public static string URI_Update(int ActivityCode) { return "Activities('" + ActivityCode + "')/Update"; }
        public static string URI_Delete(int ActivityCode) { return "Activities('" + ActivityCode + "')/Delete"; }
        public static string URI_Get(int ActivityCode) { return "Activities('" + ActivityCode + "')/Get"; }
    }
    public partial class SalesStagesEntitySet
    {
        public static string URI_Add(int SequenceNo) { return "SalesStages('" + SequenceNo + "')/Add"; }
        public static string URI_Update(int SequenceNo) { return "SalesStages('" + SequenceNo + "')/Update"; }
        public static string URI_Delete(int SequenceNo) { return "SalesStages('" + SequenceNo + "')/Delete"; }
        public static string URI_Get(int SequenceNo) { return "SalesStages('" + SequenceNo + "')/Get"; }
    }
    public partial class ActivityTypesEntitySet
    {
        public static string URI_Add(int Code) { return "ActivityTypes('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "ActivityTypes('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "ActivityTypes('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "ActivityTypes('" + Code + "')/Get"; }
    }
    public partial class ActivityLocationsEntitySet
    {
        public static string URI_Add(int Code) { return "ActivityLocations('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "ActivityLocations('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "ActivityLocations('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "ActivityLocations('" + Code + "')/Get"; }
    }
    public partial class DraftsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "Drafts(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "Drafts(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "Drafts(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "Drafts(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "Drafts(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "Drafts(" + DocEntry + ")/Cancel"; }
    }
    public partial class DeductionTaxHierarchiesEntitySet
    {
        public static string URI_Add(int AbsEntry) { return "DeductionTaxHierarchies('" + AbsEntry + "')/Add"; }
        public static string URI_Update(int AbsEntry) { return "DeductionTaxHierarchies('" + AbsEntry + "')/Update"; }
        public static string URI_Delete(int AbsEntry) { return "DeductionTaxHierarchies('" + AbsEntry + "')/Delete"; }
        public static string URI_Get(int AbsEntry) { return "DeductionTaxHierarchies('" + AbsEntry + "')/Get"; }
    }
    public partial class DeductionTaxGroupsEntitySet
    {
        public static string URI_Add(int GroupKey) { return "DeductionTaxGroups('" + GroupKey + "')/Add"; }
        public static string URI_Update(int GroupKey) { return "DeductionTaxGroups('" + GroupKey + "')/Update"; }
        public static string URI_Delete(int GroupKey) { return "DeductionTaxGroups('" + GroupKey + "')/Delete"; }
        public static string URI_Get(int GroupKey) { return "DeductionTaxGroups('" + GroupKey + "')/Get"; }
    }
    public partial class UsersEntitySet
    {
        public static string URI_Add(int InternalKey) { return "Users('" + InternalKey + "')/Add"; }
        public static string URI_Update(int InternalKey) { return "Users('" + InternalKey + "')/Update"; }
        public static string URI_Delete(int InternalKey) { return "Users('" + InternalKey + "')/Delete"; }
        public static string URI_Get(int InternalKey) { return "Users('" + InternalKey + "')/Get"; }
        public static string URI_Close(int InternalKey) { return "Users('" + InternalKey + "')/Close"; }
    }
    public partial class ApprovalStagesEntitySet
    {
        public static string URI_Add(int Code) { return "ApprovalStages('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "ApprovalStages('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "ApprovalStages('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "ApprovalStages('" + Code + "')/Get"; }
    }
    public partial class ApprovalTemplatesEntitySet
    {
        public static string URI_Add(int Code) { return "ApprovalTemplates('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "ApprovalTemplates('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "ApprovalTemplates('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "ApprovalTemplates('" + Code + "')/Get"; }
    }
    public partial class ApprovalRequestsEntitySet
    {
        public static string URI_Add(int Code) { return "ApprovalRequests('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "ApprovalRequests('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "ApprovalRequests('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "ApprovalRequests('" + Code + "')/Get"; }
    }
    public partial class AdditionalExpensesEntitySet
    {
        public static string URI_Add(int ExpensCode) { return "AdditionalExpenses('" + ExpensCode + "')/Add"; }
        public static string URI_Update(int ExpensCode) { return "AdditionalExpenses('" + ExpensCode + "')/Update"; }
        public static string URI_Delete(int ExpensCode) { return "AdditionalExpenses('" + ExpensCode + "')/Delete"; }
        public static string URI_Get(int ExpensCode) { return "AdditionalExpenses('" + ExpensCode + "')/Get"; }
    }
    public partial class InventoryTransferRequestsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "InventoryTransferRequests('" + DocEntry + "')/Add"; }
        public static string URI_Update(int DocEntry) { return "InventoryTransferRequests('" + DocEntry + "')/Update"; }
        public static string URI_Delete(int DocEntry) { return "InventoryTransferRequests('" + DocEntry + "')/Delete"; }
        public static string URI_Get(int DocEntry) { return "InventoryTransferRequests('" + DocEntry + "')/Get"; }
        public static string URI_Cancel(int DocEntry) { return "InventoryTransferRequests('" + DocEntry + "')/Cancel"; }
        public static string URI_Close(int DocEntry) { return "InventoryTransferRequests('" + DocEntry + "')/Close"; }
    }
    public partial class SalesTaxAuthoritiesEntitySet
    {
        public static string URI_Add(SAPB1.SalesTaxAuthorityKey obj) { return "SalesTaxAuthorities('" + obj.Type + "', '" + obj.Code + "')/Add"; }
        public static string URI_Update(SAPB1.SalesTaxAuthorityKey obj) { return "SalesTaxAuthorities('" + obj.Type + "', '" + obj.Code + "')/Update"; }
        public static string URI_Delete(SAPB1.SalesTaxAuthorityKey obj) { return "SalesTaxAuthorities('" + obj.Type + "', '" + obj.Code + "')/Delete"; }
        public static string URI_Get(SAPB1.SalesTaxAuthorityKey obj) { return "SalesTaxAuthorities('" + obj.Type + "', '" + obj.Code + "')/Get"; }
    }
    public partial class SalesTaxAuthoritiesTypesEntitySet
    {
        public static string URI_Add(int Numerator) { return "SalesTaxAuthoritiesTypes('" + Numerator + "')/Add"; }
        public static string URI_Update(int Numerator) { return "SalesTaxAuthoritiesTypes('" + Numerator + "')/Update"; }
        public static string URI_Delete(int Numerator) { return "SalesTaxAuthoritiesTypes('" + Numerator + "')/Delete"; }
        public static string URI_Get(int Numerator) { return "SalesTaxAuthoritiesTypes('" + Numerator + "')/Get"; }
    }
    public partial class SalesTaxCodesEntitySet
    {
        public static string URI_Add(string Code) { return "SalesTaxCodes('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "SalesTaxCodes('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "SalesTaxCodes('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "SalesTaxCodes('" + Code + "')/Get"; }
    }
    public partial class CountriesEntitySet
    {
        public static string URI_Add(string Code) { return "Countries('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "Countries('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "Countries('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "Countries('" + Code + "')/Get"; }
    }
    public partial class InvoicesEntitySet
    {
        public static string URI_Add(int DocEntry) { return "Invoices(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "Invoices(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "Invoices(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "Invoices(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "Invoices(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "Invoices(" + DocEntry + ")/Cancel"; }
    }
    public partial class CampaignsEntitySet
    {
        public static string URI_Add(int CampaignNumber) { return "Campaigns('" + CampaignNumber + "')/Add"; }
        public static string URI_Update(int CampaignNumber) { return "Campaigns('" + CampaignNumber + "')/Update"; }
        public static string URI_Delete(int CampaignNumber) { return "Campaigns('" + CampaignNumber + "')/Delete"; }
        public static string URI_Get(int CampaignNumber) { return "Campaigns('" + CampaignNumber + "')/Get"; }
        public static string URI_Cancel(int CampaignNumber) { return "Campaigns('" + CampaignNumber + "')/Cancel"; }
    }
    public partial class QueryCategoriesEntitySet
    {
        public static string URI_Add(int Code) { return "QueryCategories('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "QueryCategories('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "QueryCategories('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "QueryCategories('" + Code + "')/Get"; }
    }
    public partial class FactoringIndicatorsEntitySet
    {
        public static string URI_Add(string IndicatorCode) { return "FactoringIndicators('" + IndicatorCode + "')/Add"; }
        public static string URI_Update(string IndicatorCode) { return "FactoringIndicators('" + IndicatorCode + "')/Update"; }
        public static string URI_Delete(string IndicatorCode) { return "FactoringIndicators('" + IndicatorCode + "')/Delete"; }
        public static string URI_Get(string IndicatorCode) { return "FactoringIndicators('" + IndicatorCode + "')/Get"; }
    }
    public partial class CreditNotesEntitySet
    {
        public static string URI_Add(int DocEntry) { return "CreditNotes(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "CreditNotes(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "CreditNotes(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "CreditNotes(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "CreditNotes(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "CreditNotes(" + DocEntry + ")/Cancel"; }
    }
    public partial class PaymentDraftsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "PaymentDrafts('" + DocEntry + "')/Add"; }
        public static string URI_Update(int DocEntry) { return "PaymentDrafts('" + DocEntry + "')/Update"; }
        public static string URI_Delete(int DocEntry) { return "PaymentDrafts('" + DocEntry + "')/Delete"; }
        public static string URI_Get(int DocEntry) { return "PaymentDrafts('" + DocEntry + "')/Get"; }
        public static string URI_Cancel(int DocEntry) { return "PaymentDrafts('" + DocEntry + "')/Cancel"; }
    }
    public partial class AccountSegmentationsEntitySet
    {
        public static string URI_Add(int Numerator) { return "AccountSegmentations('" + Numerator + "')/Add"; }
        public static string URI_Update(int Numerator) { return "AccountSegmentations('" + Numerator + "')/Update"; }
        public static string URI_Delete(int Numerator) { return "AccountSegmentations('" + Numerator + "')/Delete"; }
        public static string URI_Get(int Numerator) { return "AccountSegmentations('" + Numerator + "')/Get"; }
    }
    public partial class AccountSegmentationCategoriesEntitySet
    {
        public static string URI_Add(SAPB1.AccountSegmentationCategoryKey obj) { return "AccountSegmentationCategories('" + obj.SegmentID + "', '" + obj.Code + "')/Add"; }
        public static string URI_Update(SAPB1.AccountSegmentationCategoryKey obj) { return "AccountSegmentationCategories('" + obj.SegmentID + "', '" + obj.Code + "')/Update"; }
        public static string URI_Delete(SAPB1.AccountSegmentationCategoryKey obj) { return "AccountSegmentationCategories('" + obj.SegmentID + "', '" + obj.Code + "')/Delete"; }
        public static string URI_Get(SAPB1.AccountSegmentationCategoryKey obj) { return "AccountSegmentationCategories('" + obj.SegmentID + "', '" + obj.Code + "')/Get"; }
    }
    public partial class WarehouseLocationsEntitySet
    {
        public static string URI_Add(int Code) { return "WarehouseLocations('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "WarehouseLocations('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "WarehouseLocations('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "WarehouseLocations('" + Code + "')/Get"; }
    }
    public partial class Forms1099EntitySet
    {
        public static string URI_Add(int FormCode) { return "Forms1099('" + FormCode + "')/Add"; }
        public static string URI_Update(int FormCode) { return "Forms1099('" + FormCode + "')/Update"; }
        public static string URI_Delete(int FormCode) { return "Forms1099('" + FormCode + "')/Delete"; }
        public static string URI_Get(int FormCode) { return "Forms1099('" + FormCode + "')/Get"; }
    }
    public partial class InventoryCyclesEntitySet
    {
        public static string URI_Add(int CycleCode) { return "InventoryCycles('" + CycleCode + "')/Add"; }
        public static string URI_Update(int CycleCode) { return "InventoryCycles('" + CycleCode + "')/Update"; }
        public static string URI_Delete(int CycleCode) { return "InventoryCycles('" + CycleCode + "')/Delete"; }
        public static string URI_Get(int CycleCode) { return "InventoryCycles('" + CycleCode + "')/Get"; }
    }
    public partial class WizardPaymentMethodsEntitySet
    {
        public static string URI_Add(string PaymentMethodCode) { return "WizardPaymentMethods('" + PaymentMethodCode + "')/Add"; }
        public static string URI_Update(string PaymentMethodCode) { return "WizardPaymentMethods('" + PaymentMethodCode + "')/Update"; }
        public static string URI_Delete(string PaymentMethodCode) { return "WizardPaymentMethods('" + PaymentMethodCode + "')/Delete"; }
        public static string URI_Get(string PaymentMethodCode) { return "WizardPaymentMethods('" + PaymentMethodCode + "')/Get"; }
    }
    public partial class InventoryCountingsEntitySet
    {
        public static string URI_Add(int DocumentEntry) { return "InventoryCountings('" + DocumentEntry + "')/Add"; }
        public static string URI_Update(int DocumentEntry) { return "InventoryCountings('" + DocumentEntry + "')/Update"; }
        public static string URI_Delete(int DocumentEntry) { return "InventoryCountings('" + DocumentEntry + "')/Delete"; }
        public static string URI_Get(int DocumentEntry) { return "InventoryCountings('" + DocumentEntry + "')/Get"; }
        public static string URI_Close(int DocumentEntry) { return "InventoryCountings('" + DocumentEntry + "')/Close"; }
    }
    public partial class EnhancedDiscountGroupsEntitySet
    {
        public static string URI_Add(int AbsEntry) { return "EnhancedDiscountGroups('" + AbsEntry + "')/Add"; }
        public static string URI_Update(int AbsEntry) { return "EnhancedDiscountGroups('" + AbsEntry + "')/Update"; }
        public static string URI_Delete(int AbsEntry) { return "EnhancedDiscountGroups('" + AbsEntry + "')/Delete"; }
        public static string URI_Get(int AbsEntry) { return "EnhancedDiscountGroups('" + AbsEntry + "')/Get"; }
    }
    public partial class PurchaseRequestsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "PurchaseRequests(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "PurchaseRequests(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "PurchaseRequests(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "PurchaseRequests(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "PurchaseRequests(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "PurchaseRequests(" + DocEntry + ")/Cancel"; }
    }
    public partial class DeliveryNotesEntitySet
    {
        public static string URI_Add(int DocEntry) { return "DeliveryNotes(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "DeliveryNotes(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "DeliveryNotes(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "DeliveryNotes(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "DeliveryNotes(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "DeliveryNotes(" + DocEntry + ")/Cancel"; }
    }
    public partial class BPPrioritiesEntitySet
    {
        public static string URI_Add(int Priority) { return "BPPriorities('" + Priority + "')/Add"; }
        public static string URI_Update(int Priority) { return "BPPriorities('" + Priority + "')/Update"; }
        public static string URI_Delete(int Priority) { return "BPPriorities('" + Priority + "')/Delete"; }
        public static string URI_Get(int Priority) { return "BPPriorities('" + Priority + "')/Get"; }
    }
    public partial class DunningLettersEntitySet
    {
        public static string URI_Add(int RowNumber) { return "DunningLetters('" + RowNumber + "')/Add"; }
        public static string URI_Update(int RowNumber) { return "DunningLetters('" + RowNumber + "')/Update"; }
        public static string URI_Delete(int RowNumber) { return "DunningLetters('" + RowNumber + "')/Delete"; }
        public static string URI_Get(int RowNumber) { return "DunningLetters('" + RowNumber + "')/Get"; }
    }
    public partial class UserFieldsMDEntitySet
    {
        public static string URI_Add(SAPB1.UserFieldMDKey obj) { return "UserFieldsMD('" + obj.TableName + "', '" + obj.FieldID + "')/Add"; }
        public static string URI_Update(SAPB1.UserFieldMDKey obj) { return "UserFieldsMD('" + obj.TableName + "', '" + obj.FieldID + "')/Update"; }
        public static string URI_Delete(SAPB1.UserFieldMDKey obj) { return "UserFieldsMD('" + obj.TableName + "', '" + obj.FieldID + "')/Delete"; }
        public static string URI_Get(SAPB1.UserFieldMDKey obj) { return "UserFieldsMD('" + obj.TableName + "', '" + obj.FieldID + "')/Get"; }
    }
    public partial class UserTablesMDEntitySet
    {
        public static string URI_Add(string TableName) { return "UserTablesMD('" + TableName + "')/Add"; }
        public static string URI_Update(string TableName) { return "UserTablesMD('" + TableName + "')/Update"; }
        public static string URI_Delete(string TableName) { return "UserTablesMD('" + TableName + "')/Delete"; }
        public static string URI_Get(string TableName) { return "UserTablesMD('" + TableName + "')/Get"; }
    }
    public partial class PickListsEntitySet
    {
        public static string URI_Add(int Absoluteentry) { return "PickLists('" + Absoluteentry + "')/Add"; }
        public static string URI_Update(int Absoluteentry) { return "PickLists('" + Absoluteentry + "')/Update"; }
        public static string URI_Delete(int Absoluteentry) { return "PickLists('" + Absoluteentry + "')/Delete"; }
        public static string URI_Get(int Absoluteentry) { return "PickLists('" + Absoluteentry + "')/Get"; }
    }
    public partial class PaymentRunExportEntitySet
    {
        public static string URI_Add(int AbsoluteEntry) { return "PaymentRunExport('" + AbsoluteEntry + "')/Add"; }
        public static string URI_Update(int AbsoluteEntry) { return "PaymentRunExport('" + AbsoluteEntry + "')/Update"; }
        public static string URI_Delete(int AbsoluteEntry) { return "PaymentRunExport('" + AbsoluteEntry + "')/Delete"; }
        public static string URI_Get(int AbsoluteEntry) { return "PaymentRunExport('" + AbsoluteEntry + "')/Get"; }
    }
    public partial class ReturnsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "Returns(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "Returns(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "Returns(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "Returns(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "Returns(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "Returns(" + DocEntry + ")/Cancel"; }
    }
    public partial class UserQueriesEntitySet
    {
        public static string URI_Add(SAPB1.UserQueryKey obj) { return "UserQueries('" + obj.InternalKey + "', '" + obj.QueryCategory + "')/Add"; }
        public static string URI_Update(SAPB1.UserQueryKey obj) { return "UserQueries('" + obj.InternalKey + "', '" + obj.QueryCategory + "')/Update"; }
        public static string URI_Delete(SAPB1.UserQueryKey obj) { return "UserQueries('" + obj.InternalKey + "', '" + obj.QueryCategory + "')/Delete"; }
        public static string URI_Get(SAPB1.UserQueryKey obj) { return "UserQueries('" + obj.InternalKey + "', '" + obj.QueryCategory + "')/Get"; }
    }
    public partial class MaterialRevaluationEntitySet
    {
        public static string URI_Add(int DocEntry) { return "MaterialRevaluation('" + DocEntry + "')/Add"; }
        public static string URI_Update(int DocEntry) { return "MaterialRevaluation('" + DocEntry + "')/Update"; }
        public static string URI_Delete(int DocEntry) { return "MaterialRevaluation('" + DocEntry + "')/Delete"; }
        public static string URI_Get(int DocEntry) { return "MaterialRevaluation('" + DocEntry + "')/Get"; }
        public static string URI_Cancel(int DocEntry) { return "MaterialRevaluation('" + DocEntry + "')/Cancel"; }
        public static string URI_Close(int DocEntry) { return "MaterialRevaluation('" + DocEntry + "')/Close"; }
    }
    public partial class CorrectionInvoiceEntitySet
    {
        public static string URI_Add(int DocEntry) { return "CorrectionInvoice(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "CorrectionInvoice(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "CorrectionInvoice(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "CorrectionInvoice(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "CorrectionInvoice(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "CorrectionInvoice(" + DocEntry + ")/Cancel"; }
    }
    public partial class CorrectionInvoiceReversalEntitySet
    {
        public static string URI_Add(int DocEntry) { return "CorrectionInvoiceReversal(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "CorrectionInvoiceReversal(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "CorrectionInvoiceReversal(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "CorrectionInvoiceReversal(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "CorrectionInvoiceReversal(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "CorrectionInvoiceReversal(" + DocEntry + ")/Cancel"; }
    }
    public partial class CorrectionPurchaseInvoiceEntitySet
    {
        public static string URI_Add(int DocEntry) { return "CorrectionPurchaseInvoice(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "CorrectionPurchaseInvoice(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "CorrectionPurchaseInvoice(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "CorrectionPurchaseInvoice(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "CorrectionPurchaseInvoice(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "CorrectionPurchaseInvoice(" + DocEntry + ")/Cancel"; }
    }
    public partial class CorrectionPurchaseInvoiceReversalEntitySet
    {
        public static string URI_Add(int DocEntry) { return "CorrectionPurchaseInvoiceReversal(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "CorrectionPurchaseInvoiceReversal(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "CorrectionPurchaseInvoiceReversal(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "CorrectionPurchaseInvoiceReversal(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "CorrectionPurchaseInvoiceReversal(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "CorrectionPurchaseInvoiceReversal(" + DocEntry + ")/Cancel"; }
    }
    public partial class OrdersEntitySet
    {
        public static string URI_Add(int DocEntry) { return "Orders(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "Orders(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "Orders(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "Orders(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "Orders(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "Orders(" + DocEntry + ")/Cancel"; }
    }
    public partial class ContractTemplatesEntitySet
    {
        public static string URI_Add(string TemplateName) { return "ContractTemplates('" + TemplateName + "')/Add"; }
        public static string URI_Update(string TemplateName) { return "ContractTemplates('" + TemplateName + "')/Update"; }
        public static string URI_Delete(string TemplateName) { return "ContractTemplates('" + TemplateName + "')/Delete"; }
        public static string URI_Get(string TemplateName) { return "ContractTemplates('" + TemplateName + "')/Get"; }
    }
    public partial class EmployeesInfoEntitySet
    {
        public static string URI_Add(int EmployeeID) { return "EmployeesInfo('" + EmployeeID + "')/Add"; }
        public static string URI_Update(int EmployeeID) { return "EmployeesInfo('" + EmployeeID + "')/Update"; }
        public static string URI_Delete(int EmployeeID) { return "EmployeesInfo('" + EmployeeID + "')/Delete"; }
        public static string URI_Get(int EmployeeID) { return "EmployeesInfo('" + EmployeeID + "')/Get"; }
        public static string URI_Cancel(int EmployeeID) { return "EmployeesInfo('" + EmployeeID + "')/Cancel"; }
        public static string URI_Close(int EmployeeID) { return "EmployeesInfo('" + EmployeeID + "')/Close"; }
    }
    public partial class CustomerEquipmentCardsEntitySet
    {
        public static string URI_Add(int EquipmentCardNum) { return "CustomerEquipmentCards('" + EquipmentCardNum + "')/Add"; }
        public static string URI_Update(int EquipmentCardNum) { return "CustomerEquipmentCards('" + EquipmentCardNum + "')/Update"; }
        public static string URI_Delete(int EquipmentCardNum) { return "CustomerEquipmentCards('" + EquipmentCardNum + "')/Delete"; }
        public static string URI_Get(int EquipmentCardNum) { return "CustomerEquipmentCards('" + EquipmentCardNum + "')/Get"; }
    }
    public partial class WithholdingTaxCodesEntitySet
    {
        public static string URI_Add(string WTCode) { return "WithholdingTaxCodes('" + WTCode + "')/Add"; }
        public static string URI_Update(string WTCode) { return "WithholdingTaxCodes('" + WTCode + "')/Update"; }
        public static string URI_Delete(string WTCode) { return "WithholdingTaxCodes('" + WTCode + "')/Delete"; }
        public static string URI_Get(string WTCode) { return "WithholdingTaxCodes('" + WTCode + "')/Get"; }
    }
    public partial class PurchaseInvoicesEntitySet
    {
        public static string URI_Add(int DocEntry) { return "PurchaseInvoices(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "PurchaseInvoices(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "PurchaseInvoices(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "PurchaseInvoices(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "PurchaseInvoices(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "PurchaseInvoices(" + DocEntry + ")/Cancel"; }
    }
    public partial class BillOfExchangeTransactionEntitySet
    {
        public static string URI_Add(int BOETransactionkey) { return "BillOfExchangeTransaction('" + BOETransactionkey + "')/Add"; }
        public static string URI_Update(int BOETransactionkey) { return "BillOfExchangeTransaction('" + BOETransactionkey + "')/Update"; }
        public static string URI_Delete(int BOETransactionkey) { return "BillOfExchangeTransaction('" + BOETransactionkey + "')/Delete"; }
        public static string URI_Get(int BOETransactionkey) { return "BillOfExchangeTransaction('" + BOETransactionkey + "')/Get"; }
    }
    public partial class KnowledgeBaseSolutionsEntitySet
    {
        public static string URI_Add(int SolutionCode) { return "KnowledgeBaseSolutions('" + SolutionCode + "')/Add"; }
        public static string URI_Update(int SolutionCode) { return "KnowledgeBaseSolutions('" + SolutionCode + "')/Update"; }
        public static string URI_Delete(int SolutionCode) { return "KnowledgeBaseSolutions('" + SolutionCode + "')/Delete"; }
        public static string URI_Get(int SolutionCode) { return "KnowledgeBaseSolutions('" + SolutionCode + "')/Get"; }
    }
    public partial class PurchaseCreditNotesEntitySet
    {
        public static string URI_Add(int DocEntry) { return "PurchaseCreditNotes(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "PurchaseCreditNotes(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "PurchaseCreditNotes(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "PurchaseCreditNotes(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "PurchaseCreditNotes(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "PurchaseCreditNotes(" + DocEntry + ")/Cancel"; }
    }
    public partial class ServiceContractsEntitySet
    {
        public static string URI_Add(int ContractID) { return "ServiceContracts('" + ContractID + "')/Add"; }
        public static string URI_Update(int ContractID) { return "ServiceContracts('" + ContractID + "')/Update"; }
        public static string URI_Delete(int ContractID) { return "ServiceContracts('" + ContractID + "')/Delete"; }
        public static string URI_Get(int ContractID) { return "ServiceContracts('" + ContractID + "')/Get"; }
        public static string URI_Cancel(int ContractID) { return "ServiceContracts('" + ContractID + "')/Cancel"; }
        public static string URI_Close(int ContractID) { return "ServiceContracts('" + ContractID + "')/Close"; }
    }
    public partial class ServiceCallsEntitySet
    {
        public static string URI_Add(int ServiceCallID) { return "ServiceCalls('" + ServiceCallID + "')/Add"; }
        public static string URI_Update(int ServiceCallID) { return "ServiceCalls('" + ServiceCallID + "')/Update"; }
        public static string URI_Delete(int ServiceCallID) { return "ServiceCalls('" + ServiceCallID + "')/Delete"; }
        public static string URI_Get(int ServiceCallID) { return "ServiceCalls('" + ServiceCallID + "')/Get"; }
        public static string URI_Close(int ServiceCallID) { return "ServiceCalls('" + ServiceCallID + "')/Close"; }
    }
    public partial class UserKeysMDEntitySet
    {
        public static string URI_Add(SAPB1.UserKeysMDKey obj) { return "UserKeysMD('" + obj.TableName + "', '" + obj.KeyIndex + "')/Add"; }
        public static string URI_Update(SAPB1.UserKeysMDKey obj) { return "UserKeysMD('" + obj.TableName + "', '" + obj.KeyIndex + "')/Update"; }
        public static string URI_Delete(SAPB1.UserKeysMDKey obj) { return "UserKeysMD('" + obj.TableName + "', '" + obj.KeyIndex + "')/Delete"; }
        public static string URI_Get(SAPB1.UserKeysMDKey obj) { return "UserKeysMD('" + obj.TableName + "', '" + obj.KeyIndex + "')/Get"; }
    }
    public partial class QueueEntitySet
    {
        public static string URI_Add(string QueueID) { return "Queue('" + QueueID + "')/Add"; }
        public static string URI_Update(string QueueID) { return "Queue('" + QueueID + "')/Update"; }
        public static string URI_Delete(string QueueID) { return "Queue('" + QueueID + "')/Delete"; }
        public static string URI_Get(string QueueID) { return "Queue('" + QueueID + "')/Get"; }
    }
    public partial class SalesForecastEntitySet
    {
        public static string URI_Add(int Numerator) { return "SalesForecast('" + Numerator + "')/Add"; }
        public static string URI_Update(int Numerator) { return "SalesForecast('" + Numerator + "')/Update"; }
        public static string URI_Delete(int Numerator) { return "SalesForecast('" + Numerator + "')/Delete"; }
        public static string URI_Get(int Numerator) { return "SalesForecast('" + Numerator + "')/Get"; }
    }
    public partial class BusinessPartnersEntitySet
    {
        public static string URI_Add(string CardCode) { return "BusinessPartners('" + CardCode + "')/Add"; }
        public static string URI_Update(string CardCode) { return "BusinessPartners('" + CardCode + "')/Update"; }
        public static string URI_Delete(string CardCode) { return "BusinessPartners('" + CardCode + "')/Delete"; }
        public static string URI_Get(string CardCode) { return "BusinessPartners('" + CardCode + "')/Get"; }
    }
    public partial class PurchaseDeliveryNotesEntitySet
    {
        public static string URI_Add(int DocEntry) { return "PurchaseDeliveryNotes(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "PurchaseDeliveryNotes(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "PurchaseDeliveryNotes(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "PurchaseDeliveryNotes(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "PurchaseDeliveryNotes(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "PurchaseDeliveryNotes(" + DocEntry + ")/Cancel"; }
    }
    public partial class TerritoriesEntitySet
    {
        public static string URI_Add(int TerritoryID) { return "Territories('" + TerritoryID + "')/Add"; }
        public static string URI_Update(int TerritoryID) { return "Territories('" + TerritoryID + "')/Update"; }
        public static string URI_Delete(int TerritoryID) { return "Territories('" + TerritoryID + "')/Delete"; }
        public static string URI_Get(int TerritoryID) { return "Territories('" + TerritoryID + "')/Get"; }
    }
    public partial class IndustriesEntitySet
    {
        public static string URI_Add(int IndustryCode) { return "Industries('" + IndustryCode + "')/Add"; }
        public static string URI_Update(int IndustryCode) { return "Industries('" + IndustryCode + "')/Update"; }
        public static string URI_Delete(int IndustryCode) { return "Industries('" + IndustryCode + "')/Delete"; }
        public static string URI_Get(int IndustryCode) { return "Industries('" + IndustryCode + "')/Get"; }
    }
    public partial class ProductionOrdersEntitySet
    {
        public static string URI_Add(int AbsoluteEntry) { return "ProductionOrders('" + AbsoluteEntry + "')/Add"; }
        public static string URI_Update(int AbsoluteEntry) { return "ProductionOrders('" + AbsoluteEntry + "')/Update"; }
        public static string URI_Delete(int AbsoluteEntry) { return "ProductionOrders('" + AbsoluteEntry + "')/Delete"; }
        public static string URI_Get(int AbsoluteEntry) { return "ProductionOrders('" + AbsoluteEntry + "')/Get"; }
        public static string URI_Cancel(int AbsoluteEntry) { return "ProductionOrders('" + AbsoluteEntry + "')/Cancel"; }
    }
    public partial class DownPaymentsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "DownPayments(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "DownPayments(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "DownPayments(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "DownPayments(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "DownPayments(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "DownPayments(" + DocEntry + ")/Cancel"; }
    }
    public partial class PurchaseDownPaymentsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "PurchaseDownPayments(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "PurchaseDownPayments(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "PurchaseDownPayments(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "PurchaseDownPayments(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "PurchaseDownPayments(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "PurchaseDownPayments(" + DocEntry + ")/Cancel"; }
    }
    public partial class PackagesTypesEntitySet
    {
        public static string URI_Add(int Code) { return "PackagesTypes('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "PackagesTypes('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "PackagesTypes('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "PackagesTypes('" + Code + "')/Get"; }
    }
    public partial class UserObjectsMDEntitySet
    {
        public static string URI_Add(string Code) { return "UserObjectsMD('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "UserObjectsMD('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "UserObjectsMD('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "UserObjectsMD('" + Code + "')/Get"; }
    }
    public partial class PurchaseReturnsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "PurchaseReturns(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "PurchaseReturns(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "PurchaseReturns(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "PurchaseReturns(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "PurchaseReturns(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "PurchaseReturns(" + DocEntry + ")/Cancel"; }
    }
    public partial class TeamsEntitySet
    {
        public static string URI_Add(int TeamID) { return "Teams('" + TeamID + "')/Add"; }
        public static string URI_Update(int TeamID) { return "Teams('" + TeamID + "')/Update"; }
        public static string URI_Delete(int TeamID) { return "Teams('" + TeamID + "')/Delete"; }
        public static string URI_Get(int TeamID) { return "Teams('" + TeamID + "')/Get"; }
    }
    public partial class RelationshipsEntitySet
    {
        public static string URI_Add(int RelationshipCode) { return "Relationships('" + RelationshipCode + "')/Add"; }
        public static string URI_Update(int RelationshipCode) { return "Relationships('" + RelationshipCode + "')/Update"; }
        public static string URI_Delete(int RelationshipCode) { return "Relationships('" + RelationshipCode + "')/Delete"; }
        public static string URI_Get(int RelationshipCode) { return "Relationships('" + RelationshipCode + "')/Get"; }
    }
    public partial class UserPermissionTreeEntitySet
    {
        public static string URI_Add(string PermissionID) { return "UserPermissionTree('" + PermissionID + "')/Add"; }
        public static string URI_Update(string PermissionID) { return "UserPermissionTree('" + PermissionID + "')/Update"; }
        public static string URI_Delete(string PermissionID) { return "UserPermissionTree('" + PermissionID + "')/Delete"; }
        public static string URI_Get(string PermissionID) { return "UserPermissionTree('" + PermissionID + "')/Get"; }
    }
    public partial class ActivityStatusesEntitySet
    {
        public static string URI_Add(int StatusId) { return "ActivityStatuses('" + StatusId + "')/Add"; }
        public static string URI_Update(int StatusId) { return "ActivityStatuses('" + StatusId + "')/Update"; }
        public static string URI_Delete(int StatusId) { return "ActivityStatuses('" + StatusId + "')/Delete"; }
        public static string URI_Get(int StatusId) { return "ActivityStatuses('" + StatusId + "')/Get"; }
    }
    public partial class ChooseFromListEntitySet
    {
        public static string URI_Add(string ObjectName) { return "ChooseFromList('" + ObjectName + "')/Add"; }
        public static string URI_Update(string ObjectName) { return "ChooseFromList('" + ObjectName + "')/Update"; }
        public static string URI_Delete(string ObjectName) { return "ChooseFromList('" + ObjectName + "')/Delete"; }
        public static string URI_Get(string ObjectName) { return "ChooseFromList('" + ObjectName + "')/Get"; }
    }
    public partial class FormattedSearchesEntitySet
    {
        public static string URI_Add(int Index) { return "FormattedSearches('" + Index + "')/Add"; }
        public static string URI_Update(int Index) { return "FormattedSearches('" + Index + "')/Update"; }
        public static string URI_Delete(int Index) { return "FormattedSearches('" + Index + "')/Delete"; }
        public static string URI_Get(int Index) { return "FormattedSearches('" + Index + "')/Get"; }
    }
    public partial class PurchaseOrdersEntitySet
    {
        public static string URI_Add(int DocEntry) { return "PurchaseOrders(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "PurchaseOrders(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "PurchaseOrders(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "PurchaseOrders(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "PurchaseOrders(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "PurchaseOrders(" + DocEntry + ")/Cancel"; }
    }
    public partial class Attachments2EntitySet
    {
        public static string URI_Add(int AbsoluteEntry) { return "Attachments2('" + AbsoluteEntry + "')/Add"; }
        public static string URI_Update(int AbsoluteEntry) { return "Attachments2('" + AbsoluteEntry + "')/Update"; }
        public static string URI_Delete(int AbsoluteEntry) { return "Attachments2('" + AbsoluteEntry + "')/Delete"; }
        public static string URI_Get(int AbsoluteEntry) { return "Attachments2('" + AbsoluteEntry + "')/Get"; }
    }
    public partial class UserLanguagesEntitySet
    {
        public static string URI_Add(int Code) { return "UserLanguages('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "UserLanguages('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "UserLanguages('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "UserLanguages('" + Code + "')/Get"; }
    }
    public partial class MultiLanguageTranslationsEntitySet
    {
        public static string URI_Add(int Numerator) { return "MultiLanguageTranslations('" + Numerator + "')/Add"; }
        public static string URI_Update(int Numerator) { return "MultiLanguageTranslations('" + Numerator + "')/Update"; }
        public static string URI_Delete(int Numerator) { return "MultiLanguageTranslations('" + Numerator + "')/Delete"; }
        public static string URI_Get(int Numerator) { return "MultiLanguageTranslations('" + Numerator + "')/Get"; }
    }
    public partial class DynamicSystemStringsEntitySet
    {
        public static string URI_Add(SAPB1.DynamicSystemStringKey obj) { return "DynamicSystemStrings('" + obj.FormID + "', '" + obj.ItemID + "', '" + obj.ColumnID + "')/Add"; }
        public static string URI_Update(SAPB1.DynamicSystemStringKey obj) { return "DynamicSystemStrings('" + obj.FormID + "', '" + obj.ItemID + "', '" + obj.ColumnID + "')/Update"; }
        public static string URI_Delete(SAPB1.DynamicSystemStringKey obj) { return "DynamicSystemStrings('" + obj.FormID + "', '" + obj.ItemID + "', '" + obj.ColumnID + "')/Delete"; }
        public static string URI_Get(SAPB1.DynamicSystemStringKey obj) { return "DynamicSystemStrings('" + obj.FormID + "', '" + obj.ItemID + "', '" + obj.ColumnID + "')/Get"; }
    }
    public partial class QuotationsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "Quotations(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "Quotations(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "Quotations(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "Quotations(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "Quotations(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "Quotations(" + DocEntry + ")/Cancel"; }
    }
    public partial class HouseBankAccountsEntitySet
    {
        public static string URI_Add(int AbsoluteEntry) { return "HouseBankAccounts('" + AbsoluteEntry + "')/Add"; }
        public static string URI_Update(int AbsoluteEntry) { return "HouseBankAccounts('" + AbsoluteEntry + "')/Update"; }
        public static string URI_Delete(int AbsoluteEntry) { return "HouseBankAccounts('" + AbsoluteEntry + "')/Delete"; }
        public static string URI_Get(int AbsoluteEntry) { return "HouseBankAccounts('" + AbsoluteEntry + "')/Get"; }
    }
    public partial class IncomingPaymentsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "IncomingPayments('" + DocEntry + "')/Add"; }
        public static string URI_Update(int DocEntry) { return "IncomingPayments('" + DocEntry + "')/Update"; }
        public static string URI_Delete(int DocEntry) { return "IncomingPayments('" + DocEntry + "')/Delete"; }
        public static string URI_Get(int DocEntry) { return "IncomingPayments('" + DocEntry + "')/Get"; }
        public static string URI_Cancel(int DocEntry) { return "IncomingPayments('" + DocEntry + "')/Cancel"; }
    }
    public partial class BusinessPlacesEntitySet
    {
        public static string URI_Add(int BPLID) { return "BusinessPlaces('" + BPLID + "')/Add"; }
        public static string URI_Update(int BPLID) { return "BusinessPlaces('" + BPLID + "')/Update"; }
        public static string URI_Delete(int BPLID) { return "BusinessPlaces('" + BPLID + "')/Delete"; }
        public static string URI_Get(int BPLID) { return "BusinessPlaces('" + BPLID + "')/Get"; }
    }
    public partial class LocalEraEntitySet
    {
        public static string URI_Add(string Code) { return "LocalEra('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "LocalEra('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "LocalEra('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "LocalEra('" + Code + "')/Get"; }
    }
    public partial class SalesTaxInvoicesEntitySet
    {
        public static string URI_Add(int DocEntry) { return "SalesTaxInvoices('" + DocEntry + "')/Add"; }
        public static string URI_Update(int DocEntry) { return "SalesTaxInvoices('" + DocEntry + "')/Update"; }
        public static string URI_Delete(int DocEntry) { return "SalesTaxInvoices('" + DocEntry + "')/Delete"; }
        public static string URI_Get(int DocEntry) { return "SalesTaxInvoices('" + DocEntry + "')/Get"; }
    }
    public partial class PurchaseTaxInvoicesEntitySet
    {
        public static string URI_Add(int DocEntry) { return "PurchaseTaxInvoices('" + DocEntry + "')/Add"; }
        public static string URI_Update(int DocEntry) { return "PurchaseTaxInvoices('" + DocEntry + "')/Update"; }
        public static string URI_Delete(int DocEntry) { return "PurchaseTaxInvoices('" + DocEntry + "')/Delete"; }
        public static string URI_Get(int DocEntry) { return "PurchaseTaxInvoices('" + DocEntry + "')/Get"; }
    }
    public partial class BanksEntitySet
    {
        public static string URI_Add(int AbsoluteEntry) { return "Banks('" + AbsoluteEntry + "')/Add"; }
        public static string URI_Update(int AbsoluteEntry) { return "Banks('" + AbsoluteEntry + "')/Update"; }
        public static string URI_Delete(int AbsoluteEntry) { return "Banks('" + AbsoluteEntry + "')/Delete"; }
        public static string URI_Get(int AbsoluteEntry) { return "Banks('" + AbsoluteEntry + "')/Get"; }
    }
    public partial class JournalEntriesEntitySet
    {
        public static string URI_Add(int JdtNum) { return "JournalEntries('" + JdtNum + "')/Add"; }
        public static string URI_Update(int JdtNum) { return "JournalEntries('" + JdtNum + "')/Update"; }
        public static string URI_Delete(int JdtNum) { return "JournalEntries('" + JdtNum + "')/Delete"; }
        public static string URI_Get(int JdtNum) { return "JournalEntries('" + JdtNum + "')/Get"; }
        public static string URI_Cancel(int JdtNum) { return "JournalEntries('" + JdtNum + "')/Cancel"; }
    }
    public partial class ContactsEntitySet
    {
        public static string URI_Add(int ContactCode) { return "Contacts('" + ContactCode + "')/Add"; }
        public static string URI_Update(int ContactCode) { return "Contacts('" + ContactCode + "')/Update"; }
        public static string URI_Delete(int ContactCode) { return "Contacts('" + ContactCode + "')/Delete"; }
        public static string URI_Get(int ContactCode) { return "Contacts('" + ContactCode + "')/Get"; }
    }
    public partial class CreditCardsEntitySet
    {
        public static string URI_Add(int CreditCardCode) { return "CreditCards('" + CreditCardCode + "')/Add"; }
        public static string URI_Update(int CreditCardCode) { return "CreditCards('" + CreditCardCode + "')/Update"; }
        public static string URI_Delete(int CreditCardCode) { return "CreditCards('" + CreditCardCode + "')/Delete"; }
        public static string URI_Get(int CreditCardCode) { return "CreditCards('" + CreditCardCode + "')/Get"; }
    }
    public partial class CurrenciesEntitySet
    {
        public static string URI_Add(string Code) { return "Currencies('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "Currencies('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "Currencies('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "Currencies('" + Code + "')/Get"; }
    }
    public partial class ItemsEntitySet
    {
        public static string URI_Add(string ItemCode) { return "Items('" + ItemCode + "')/Add"; }
        public static string URI_Update(string ItemCode) { return "Items('" + ItemCode + "')/Update"; }
        public static string URI_Delete(string ItemCode) { return "Items('" + ItemCode + "')/Delete"; }
        public static string URI_Get(string ItemCode) { return "Items('" + ItemCode + "')/Get"; }
        public static string URI_Cancel(string ItemCode) { return "Items('" + ItemCode + "')/Cancel"; }
    }
    public partial class PaymentTermsTypesEntitySet
    {
        public static string URI_Add(int GroupNumber) { return "PaymentTermsTypes('" + GroupNumber + "')/Add"; }
        public static string URI_Update(int GroupNumber) { return "PaymentTermsTypes('" + GroupNumber + "')/Update"; }
        public static string URI_Delete(int GroupNumber) { return "PaymentTermsTypes('" + GroupNumber + "')/Delete"; }
        public static string URI_Get(int GroupNumber) { return "PaymentTermsTypes('" + GroupNumber + "')/Get"; }
    }
    public partial class BankPagesEntitySet
    {
        public static string URI_Add(SAPB1.BankPageKey obj) { return "BankPages('" + obj.AccountCode + "', '" + obj.Sequence + "')/Add"; }
        public static string URI_Update(SAPB1.BankPageKey obj) { return "BankPages('" + obj.AccountCode + "', '" + obj.Sequence + "')/Update"; }
        public static string URI_Delete(SAPB1.BankPageKey obj) { return "BankPages('" + obj.AccountCode + "', '" + obj.Sequence + "')/Delete"; }
        public static string URI_Get(SAPB1.BankPageKey obj) { return "BankPages('" + obj.AccountCode + "', '" + obj.Sequence + "')/Get"; }
    }
    public partial class ManufacturersEntitySet
    {
        public static string URI_Add(int Code) { return "Manufacturers('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "Manufacturers('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "Manufacturers('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "Manufacturers('" + Code + "')/Get"; }
    }
    public partial class VendorPaymentsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "VendorPayments('" + DocEntry + "')/Add"; }
        public static string URI_Update(int DocEntry) { return "VendorPayments('" + DocEntry + "')/Update"; }
        public static string URI_Delete(int DocEntry) { return "VendorPayments('" + DocEntry + "')/Delete"; }
        public static string URI_Get(int DocEntry) { return "VendorPayments('" + DocEntry + "')/Get"; }
        public static string URI_Cancel(int DocEntry) { return "VendorPayments('" + DocEntry + "')/Cancel"; }
    }
    public partial class LandedCostsCodesEntitySet
    {
        public static string URI_Add(string Code) { return "LandedCostsCodes('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "LandedCostsCodes('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "LandedCostsCodes('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "LandedCostsCodes('" + Code + "')/Get"; }
    }
    public partial class ShippingTypesEntitySet
    {
        public static string URI_Add(int Code) { return "ShippingTypes('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "ShippingTypes('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "ShippingTypes('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "ShippingTypes('" + Code + "')/Get"; }
    }
    public partial class VatGroupsEntitySet
    {
        public static string URI_Add(string Code) { return "VatGroups('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "VatGroups('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "VatGroups('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "VatGroups('" + Code + "')/Get"; }
    }
    public partial class LengthMeasuresEntitySet
    {
        public static string URI_Add(int UnitCode) { return "LengthMeasures('" + UnitCode + "')/Add"; }
        public static string URI_Update(int UnitCode) { return "LengthMeasures('" + UnitCode + "')/Update"; }
        public static string URI_Delete(int UnitCode) { return "LengthMeasures('" + UnitCode + "')/Delete"; }
        public static string URI_Get(int UnitCode) { return "LengthMeasures('" + UnitCode + "')/Get"; }
    }
    public partial class WeightMeasuresEntitySet
    {
        public static string URI_Add(int UnitCode) { return "WeightMeasures('" + UnitCode + "')/Add"; }
        public static string URI_Update(int UnitCode) { return "WeightMeasures('" + UnitCode + "')/Update"; }
        public static string URI_Delete(int UnitCode) { return "WeightMeasures('" + UnitCode + "')/Delete"; }
        public static string URI_Get(int UnitCode) { return "WeightMeasures('" + UnitCode + "')/Get"; }
    }
    public partial class ItemGroupsEntitySet
    {
        public static string URI_Add(int Number) { return "ItemGroups('" + Number + "')/Add"; }
        public static string URI_Update(int Number) { return "ItemGroups('" + Number + "')/Update"; }
        public static string URI_Delete(int Number) { return "ItemGroups('" + Number + "')/Delete"; }
        public static string URI_Get(int Number) { return "ItemGroups('" + Number + "')/Get"; }
    }
    public partial class SalesPersonsEntitySet
    {
        public static string URI_Add(int SalesEmployeeCode) { return "SalesPersons('" + SalesEmployeeCode + "')/Add"; }
        public static string URI_Update(int SalesEmployeeCode) { return "SalesPersons('" + SalesEmployeeCode + "')/Update"; }
        public static string URI_Delete(int SalesEmployeeCode) { return "SalesPersons('" + SalesEmployeeCode + "')/Delete"; }
        public static string URI_Get(int SalesEmployeeCode) { return "SalesPersons('" + SalesEmployeeCode + "')/Get"; }
    }
    public partial class PurchaseQuotationsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "PurchaseQuotations(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "PurchaseQuotations(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "PurchaseQuotations(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "PurchaseQuotations(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "PurchaseQuotations(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "PurchaseQuotations(" + DocEntry + ")/Cancel"; }
    }
    public partial class CustomsGroupsEntitySet
    {
        public static string URI_Add(int Code) { return "CustomsGroups('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "CustomsGroups('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "CustomsGroups('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "CustomsGroups('" + Code + "')/Get"; }
    }
    public partial class ChecksforPaymentEntitySet
    {
        public static string URI_Add(int CheckKey) { return "ChecksforPayment('" + CheckKey + "')/Add"; }
        public static string URI_Update(int CheckKey) { return "ChecksforPayment('" + CheckKey + "')/Update"; }
        public static string URI_Delete(int CheckKey) { return "ChecksforPayment('" + CheckKey + "')/Delete"; }
        public static string URI_Get(int CheckKey) { return "ChecksforPayment('" + CheckKey + "')/Get"; }
    }
    public partial class InventoryGenEntriesEntitySet
    {
        public static string URI_Add(int DocEntry) { return "InventoryGenEntries(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "InventoryGenEntries(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "InventoryGenEntries(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "InventoryGenEntries(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "InventoryGenEntries(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "InventoryGenEntries(" + DocEntry + ")/Cancel"; }
    }
    public partial class PriceListsEntitySet
    {
        public static string URI_Add(int PriceListNo) { return "PriceLists('" + PriceListNo + "')/Add"; }
        public static string URI_Update(int PriceListNo) { return "PriceLists('" + PriceListNo + "')/Update"; }
        public static string URI_Delete(int PriceListNo) { return "PriceLists('" + PriceListNo + "')/Delete"; }
        public static string URI_Get(int PriceListNo) { return "PriceLists('" + PriceListNo + "')/Get"; }
    }
    public partial class InventoryGenExitsEntitySet
    {
        public static string URI_Add(int DocEntry) { return "InventoryGenExits(" + DocEntry + ")/Add"; }
        public static string URI_Update(int DocEntry) { return "InventoryGenExits(" + DocEntry + ")/Update"; }
        public static string URI_Delete(int DocEntry) { return "InventoryGenExits(" + DocEntry + ")/Delete"; }
        public static string URI_Get(int DocEntry) { return "InventoryGenExits(" + DocEntry + ")/Get"; }
        public static string URI_Close(int DocEntry) { return "InventoryGenExits(" + DocEntry + ")/Close"; }
        public static string URI_Cancel(int DocEntry) { return "InventoryGenExits(" + DocEntry + ")/Cancel"; }
    }
    public partial class ProfitCentersEntitySet
    {
        public static string URI_Add(string CenterCode) { return "ProfitCenters('" + CenterCode + "')/Add"; }
        public static string URI_Update(string CenterCode) { return "ProfitCenters('" + CenterCode + "')/Update"; }
        public static string URI_Delete(string CenterCode) { return "ProfitCenters('" + CenterCode + "')/Delete"; }
        public static string URI_Get(string CenterCode) { return "ProfitCenters('" + CenterCode + "')/Get"; }
    }
    public partial class ProjectsEntitySet
    {
        public static string URI_Add(string Code) { return "Projects('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "Projects('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "Projects('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "Projects('" + Code + "')/Get"; }
    }
    public partial class WarehousesEntitySet
    {
        public static string URI_Add(string WarehouseCode) { return "Warehouses('" + WarehouseCode + "')/Add"; }
        public static string URI_Update(string WarehouseCode) { return "Warehouses('" + WarehouseCode + "')/Update"; }
        public static string URI_Delete(string WarehouseCode) { return "Warehouses('" + WarehouseCode + "')/Delete"; }
        public static string URI_Get(string WarehouseCode) { return "Warehouses('" + WarehouseCode + "')/Get"; }
    }
    public partial class CommissionGroupsEntitySet
    {
        public static string URI_Add(int CommissionGroupCode) { return "CommissionGroups('" + CommissionGroupCode + "')/Add"; }
        public static string URI_Update(int CommissionGroupCode) { return "CommissionGroups('" + CommissionGroupCode + "')/Update"; }
        public static string URI_Delete(int CommissionGroupCode) { return "CommissionGroups('" + CommissionGroupCode + "')/Delete"; }
        public static string URI_Get(int CommissionGroupCode) { return "CommissionGroups('" + CommissionGroupCode + "')/Get"; }
    }
    public partial class ProductTreesEntitySet
    {
        public static string URI_Add(string TreeCode) { return "ProductTrees('" + TreeCode + "')/Add"; }
        public static string URI_Update(string TreeCode) { return "ProductTrees('" + TreeCode + "')/Update"; }
        public static string URI_Delete(string TreeCode) { return "ProductTrees('" + TreeCode + "')/Delete"; }
        public static string URI_Get(string TreeCode) { return "ProductTrees('" + TreeCode + "')/Get"; }
    }
    public partial class StockTransfersEntitySet
    {
        public static string URI_Add(int DocEntry) { return "StockTransfers('" + DocEntry + "')/Add"; }
        public static string URI_Update(int DocEntry) { return "StockTransfers('" + DocEntry + "')/Update"; }
        public static string URI_Delete(int DocEntry) { return "StockTransfers('" + DocEntry + "')/Delete"; }
        public static string URI_Get(int DocEntry) { return "StockTransfers('" + DocEntry + "')/Get"; }
        public static string URI_Cancel(int DocEntry) { return "StockTransfers('" + DocEntry + "')/Cancel"; }
        public static string URI_Close(int DocEntry) { return "StockTransfers('" + DocEntry + "')/Close"; }
    }
    public partial class WorkOrdersEntitySet
    {
        public static string URI_Add(int OrderNum) { return "WorkOrders('" + OrderNum + "')/Add"; }
        public static string URI_Update(int OrderNum) { return "WorkOrders('" + OrderNum + "')/Update"; }
        public static string URI_Delete(int OrderNum) { return "WorkOrders('" + OrderNum + "')/Delete"; }
        public static string URI_Get(int OrderNum) { return "WorkOrders('" + OrderNum + "')/Get"; }
    }
    public partial class SpecialPricesEntitySet
    {
        public static string URI_Add(SAPB1.SpecialPriceKey obj) { return "SpecialPrices('" + obj.ItemCode + "', '" + obj.CardCode + "')/Add"; }
        public static string URI_Update(SAPB1.SpecialPriceKey obj) { return "SpecialPrices('" + obj.ItemCode + "', '" + obj.CardCode + "')/Update"; }
        public static string URI_Delete(SAPB1.SpecialPriceKey obj) { return "SpecialPrices('" + obj.ItemCode + "', '" + obj.CardCode + "')/Delete"; }
        public static string URI_Get(SAPB1.SpecialPriceKey obj) { return "SpecialPrices('" + obj.ItemCode + "', '" + obj.CardCode + "')/Get"; }
    }
    public partial class CreditPaymentMethodsEntitySet
    {
        public static string URI_Add(int PaymentMethodCode) { return "CreditPaymentMethods('" + PaymentMethodCode + "')/Add"; }
        public static string URI_Update(int PaymentMethodCode) { return "CreditPaymentMethods('" + PaymentMethodCode + "')/Update"; }
        public static string URI_Delete(int PaymentMethodCode) { return "CreditPaymentMethods('" + PaymentMethodCode + "')/Delete"; }
        public static string URI_Get(int PaymentMethodCode) { return "CreditPaymentMethods('" + PaymentMethodCode + "')/Get"; }
    }
    public partial class CreditCardPaymentsEntitySet
    {
        public static string URI_Add(string DueDateCode) { return "CreditCardPayments('" + DueDateCode + "')/Add"; }
        public static string URI_Update(string DueDateCode) { return "CreditCardPayments('" + DueDateCode + "')/Update"; }
        public static string URI_Delete(string DueDateCode) { return "CreditCardPayments('" + DueDateCode + "')/Delete"; }
        public static string URI_Get(string DueDateCode) { return "CreditCardPayments('" + DueDateCode + "')/Get"; }
    }
    public partial class AlternateCatNumEntitySet
    {
        public static string URI_Add(SAPB1.AlternateCatNumKey obj) { return "AlternateCatNum('" + obj.ItemCode + "', '" + obj.CardCode + "', '" + obj.Substitute + "')/Add"; }
        public static string URI_Update(SAPB1.AlternateCatNumKey obj) { return "AlternateCatNum('" + obj.ItemCode + "', '" + obj.CardCode + "', '" + obj.Substitute + "')/Update"; }
        public static string URI_Delete(SAPB1.AlternateCatNumKey obj) { return "AlternateCatNum('" + obj.ItemCode + "', '" + obj.CardCode + "', '" + obj.Substitute + "')/Delete"; }
        public static string URI_Get(SAPB1.AlternateCatNumKey obj) { return "AlternateCatNum('" + obj.ItemCode + "', '" + obj.CardCode + "', '" + obj.Substitute + "')/Get"; }
    }
    public partial class BudgetsEntitySet
    {
        public static string URI_Add(int Numerator) { return "Budgets('" + Numerator + "')/Add"; }
        public static string URI_Update(int Numerator) { return "Budgets('" + Numerator + "')/Update"; }
        public static string URI_Delete(int Numerator) { return "Budgets('" + Numerator + "')/Delete"; }
        public static string URI_Get(int Numerator) { return "Budgets('" + Numerator + "')/Get"; }
    }
    public partial class BudgetDistributionsEntitySet
    {
        public static string URI_Add(int DivisionCode) { return "BudgetDistributions('" + DivisionCode + "')/Add"; }
        public static string URI_Update(int DivisionCode) { return "BudgetDistributions('" + DivisionCode + "')/Update"; }
        public static string URI_Delete(int DivisionCode) { return "BudgetDistributions('" + DivisionCode + "')/Delete"; }
        public static string URI_Get(int DivisionCode) { return "BudgetDistributions('" + DivisionCode + "')/Get"; }
    }
    public partial class ItemPropertiesEntitySet
    {
        public static string URI_Add(int Number) { return "ItemProperties('" + Number + "')/Add"; }
        public static string URI_Update(int Number) { return "ItemProperties('" + Number + "')/Update"; }
        public static string URI_Delete(int Number) { return "ItemProperties('" + Number + "')/Delete"; }
        public static string URI_Get(int Number) { return "ItemProperties('" + Number + "')/Get"; }
    }
    public partial class AlertManagementsEntitySet
    {
        public static string URI_Add(int Code) { return "AlertManagements('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "AlertManagements('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "AlertManagements('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "AlertManagements('" + Code + "')/Get"; }
    }
    public partial class MessagesEntitySet
    {
        public static string URI_Add(int Code) { return "Messages('" + Code + "')/Add"; }
        public static string URI_Update(int Code) { return "Messages('" + Code + "')/Update"; }
        public static string URI_Delete(int Code) { return "Messages('" + Code + "')/Delete"; }
        public static string URI_Get(int Code) { return "Messages('" + Code + "')/Get"; }
    }
    public partial class BudgetScenariosEntitySet
    {
        public static string URI_Add(int Numerator) { return "BudgetScenarios('" + Numerator + "')/Add"; }
        public static string URI_Update(int Numerator) { return "BudgetScenarios('" + Numerator + "')/Update"; }
        public static string URI_Delete(int Numerator) { return "BudgetScenarios('" + Numerator + "')/Delete"; }
        public static string URI_Get(int Numerator) { return "BudgetScenarios('" + Numerator + "')/Get"; }
    }
    public partial class UserDefaultGroupsEntitySet
    {
        public static string URI_Add(string Code) { return "UserDefaultGroups('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "UserDefaultGroups('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "UserDefaultGroups('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "UserDefaultGroups('" + Code + "')/Get"; }
    }
    public partial class SalesOpportunitiesEntitySet
    {
        public static string URI_Add(int SequentialNo) { return "SalesOpportunities('" + SequentialNo + "')/Add"; }
        public static string URI_Update(int SequentialNo) { return "SalesOpportunities('" + SequentialNo + "')/Update"; }
        public static string URI_Delete(int SequentialNo) { return "SalesOpportunities('" + SequentialNo + "')/Delete"; }
        public static string URI_Get(int SequentialNo) { return "SalesOpportunities('" + SequentialNo + "')/Get"; }
        public static string URI_Close(int SequentialNo) { return "SalesOpportunities('" + SequentialNo + "')/Close"; }
    }
    public partial class DMS_RouteSettingEntitySet
    {
        public static string URI_Add(string Code) { return "DMS_RouteSetting('" + Code + "')/Add"; }
        public static string URI_Update(string Code) { return "DMS_RouteSetting('" + Code + "')/Update"; }
        public static string URI_Delete(string Code) { return "DMS_RouteSetting('" + Code + "')/Delete"; }
        public static string URI_Get(string Code) { return "DMS_RouteSetting('" + Code + "')/Get"; }
    }
    public partial class ItemImagesEntitySet
    {
        public static string URI_Add(string ItemCode) { return "ItemImages('" + ItemCode + "')/Add"; }
        public static string URI_Update(string ItemCode) { return "ItemImages('" + ItemCode + "')/Update"; }
        public static string URI_Delete(string ItemCode) { return "ItemImages('" + ItemCode + "')/Delete"; }
        public static string URI_Get(string ItemCode) { return "ItemImages('" + ItemCode + "')/Get"; }
    }
}
